Content-Type: multipart/related; start=<op.mhtml.1263516827839.ca5fd92d4d1538ab@192.168.140.127>; boundary=----------orQNYLOGidVp88I2yKagMz
Content-Location: http://localhost:8000/012-weaver.MOLLY/DVLP_SPLIT/tmp-tests/anton_nazarov.at.lj/LiterateLie.weave
Subject: =?utf-8?Q?Finite=20dimensional=20Lie=20algebras?=
MIME-Version: 1.0

------------orQNYLOGidVp88I2yKagMz
Content-Disposition: inline; filename=LiterateLie.htm
Content-Type: text/html; name=LiterateLie.htm
Content-ID: <op.mhtml.1263516827839.ca5fd92d4d1538ab@192.168.140.127>
Content-Location: http://localhost:8000/012-weaver.MOLLY/DVLP_SPLIT/tmp-tests/anton_nazarov.at.lj/LiterateLie.weave
Content-Transfer-Encoding: 8bit


<script type="text/javascript" src="ASCIIMathML_with_modified_escapes.js"></script>


<script language="javascript">

function toggleDiv(divid) {
var el = document.getElementById(divid);
el.style.display = (el.style.display == 'block') ? 'none' : 'block';
}


function toggleCombined(divid){
    if(document.getElementById(divid).style.display == 'none'){
      document.getElementById(divid).style.display = 'block';
        document.getElementById("toc"+divid).className="hilited";
    }
    else{
      document.getElementById(divid).style.display = 'none';
        document.getElementById("toc"+divid).className="unhilited";
    }
}


function showAll(){
for(i=1; i <= 10000; i++){
    document.getElementById(i).style.display = 'block';
    document.getElementById("toc"+i).className="hilited";
    };
}

function hideAll(){
for(i=1; i <= 10000; i++){
    document.getElementById(i).style.display = 'none';
    document.getElementById("toc"+i).className="unhilited";
    };
}


function open_all_above(someid){

    elem = document.getElementById(someid);
        elem.style.display = 'block';
        document.getElementById('toc'+someid).className = 'hilited';
        
    while (elem.parentNode.id != 1) {
        if (elem.parentNode.nodeType == 1) {
        elem.parentNode.style.display = 'block';
        //document.getElementById(elem.parentNode.id).className = 'hilited';
        var toc_elem = document.getElementById('toc'+elem.id);
        if (toc_elem) {toc_elem.className = 'hilited'};
        }
        elem = elem.parentNode;
    }
}



// DELETING a CLONE -- this works too:
function DeleteVirtualNode(someid) {
    
    elem = document.getElementById(someid);

    while (elem.childNodes.length > 0) {
    elem.removeChild(elem.firstChild);
    }  
}

// CREATING a CLONE - this works
/* for clean execution - run "delete" before any creation */
function CreateVirtualNode(clone_from_id, append_to_id){
        DeleteVirtualNode(append_to_id);

    if ( document.getElementById(append_to_id).childNodes.length == 0 ) {
    var elem = document.createElement("div");

    elem = document.getElementById(clone_from_id).cloneNode(1);
    elem.style.display = 'block';
    document.getElementById(append_to_id).appendChild(elem); 

    } /* fi - do not create duplicates of the cloned node */ 
    
}


</script>

<style type="text/css" media="screen">


BODY {
        FONT-SIZE: 10pt;
        background: #f0f0f0;
        }
FIELDSET {
        BORDER-RIGHT: #000000 1px solid; 
        BORDER-TOP: #000000 1px solid; 
        BORDER-LEFT: #000000 1px solid; 
        BORDER-BOTTOM: #000000 1px solid; 
        PADDING-RIGHT: 5px; 
        PADDING-LEFT: 5px; 
        PADDING-BOTTOM: 2px; 
        PADDING-TOP: 5px;
        MARGIN-BOTTOM: 1px; 
        background: #f5f5f5; 
        color: #000000;
        }
LEGEND {
        BORDER-RIGHT: #a9a9a9 1px solid; 
        BORDER-BOTTOM: #a9a9a9 1px solid;
        BORDER-TOP: #a9a9a9 1px solid; 
        BORDER-LEFT: #a9a9a9 1px solid; 
        PADDING-RIGHT: 20px; 
        PADDING-LEFT: 20px; 
        PADDING-BOTTOM: 5px; 
        PADDING-TOP: 5px; 
        FONT-WEIGHT: bold;  
        BACKGROUND: #fdfdfd; 
        color: #000000;
        }
PRE     {
        PADDING-LEFT: 20px; 
        PADDING-RIGHT: 5px; 
        padding-top: 0px; 
        padding-bottom: 6px;
        MARGIN-BOTTOM: 1px; 
        BORDER-TOP: #a9a9a9 0px solid;
        BORDER-RIGHT: #a9a9a9 0px solid; 
        BORDER-LEFT: #a9a9a9 0px solid;
        BORDER-BOTTOM: #a9a9a9 0px solid;        
        background: #fefefe;
        }
.tocfieldset {
        background: #ffffff; 
        color: #000000;
        }
.codefieldset {
        BORDER-RIGHT: #000 1px solid; 
        BORDER-TOP: #000 1px solid; 
        BORDER-LEFT: #000 1px solid; 
        BORDER-BOTTOM: #000 1px solid; 
        background: #ffffff; 
        color: #000;
        MARGIN-BOTTOM: 1px; 
        PADDING-LEFT: 15px; 
        PADDING-RIGHT: 5px; 
        PADDING-BOTTOM: 10px; 
        PADDING-TOP: 1px;
        }
.codelegend {
        BORDER-RIGHT: #777 1px solid; 
        BORDER-TOP: #777 1px solid; 
        BORDER-LEFT: #777 1px solid; 
        BORDER-BOTTOM: #777 1px solid
        PADDING-RIGHT: 10px; 
        PADDING-LEFT: 10px; 
        PADDING-TOP: 2px; 
        PADDING-BOTTOM: 2px; 
        background: #ffffff; 
        color: #00b;
        FONT-WEIGHT: bold;  
        }
.chunkref {
        color: #00b;    
        background: #f6f6f6;
        font-weight: bold;
        }
.outertable {
        width: 99%; 
        cellpadding: 25; 
        background: #ffffff; 
        border: 1px solid;
        }
.hl     {
        PADDING-LEFT: 5px; PADDING-RIGHT: 5px; 
        padding-top: 5px; padding-bottom: 5px;
        MARGIN-BOTTOM: 1px; 
        BORDER-TOP: #a9a9a9 0px solid;
        BORDER-RIGHT: #a9a9a9 0px solid; 
        BORDER-LEFT: #a9a9a9 0px solid;
        BORDER-BOTTOM: #a9a9a9 0px solid;        
        background: #f5f5f5;    
        width: 70%;
        }
.hl-wide {
        PADDING-LEFT: 5px; 
        PADDING-RIGHT: 5px; 
        padding-top: 15px; 
        padding-bottom: 15px;
        MARGIN-BOTTOM: 1px; 
        BORDER-TOP: #a9a9a9 0px solid;
        BORDER-RIGHT: #a9a9a9 0px solid; 
        BORDER-LEFT: #a9a9a9 0px solid;
        BORDER-BOTTOM: #a9a9a9 0px solid;        
        background: #fbfbfb;    
        }
.lnum {
        color: #a0a0a0;
        }
.unhilited {background-color:white}
.hilited {background-color:#c0c0ff}
.linked_chunk {
        PADDING-RIGHT: 5px; 
        PADDING-LEFT: 5px; 
        PADDING-BOTTOM: 5px; 
        PADDING-TOP: 5px; 
        BORDER-TOP: #c0c0c0 1px solid;
        BORDER-RIGHT: #c0c0c0 1px solid; 
        BORDER-LEFT: #c0c0c0 1px solid;
        BORDER-BOTTOM: #c0c0c0 1px solid;              
        color: #505050;
        background: #ffffff;
        }
.linked_chunk_legend {
        PADDING-RIGHT: 5px; 
        PADDING-LEFT: 5px; 
        PADDING-BOTTOM: 3px; 
        PADDING-TOP: 3px; 
        BORDER-TOP: #c0c0c0 1px solid;
        BORDER-RIGHT: #c0c0c0 1px solid; 
        BORDER-LEFT: #c0c0c0 1px solid;
        BORDER-BOTTOM: #c0c0c0 1px solid;              
        color: #505050;
        background: #ffffff;
        }
a:visited { color: blue; }

</STYLE>


</head>

 <body>  <center><table class='outertable'><tr><td> 
<p><fieldset class='tocfieldset'>
<legend><b>TABLE OF CONTENTS: outline of the document structure</b></legend>

<ul>
<p>
<br>
<div class='hl' align=center>
<a href="javascript:;" onmousedown="toggleDiv('tochowto');">
<b>HOW TO USE THE FOLDING DOCUMENT [expand/collapse]</b></a>
</div>
<div id='tochowto' style='display:none' style='background:#ffffff'> 
<p>
<ul>
<li><b>Collapsing is necessary when</b> you work on code and must exclude 
<br>irrelevant sections of the rest of the literate project file. This 
<br>greatly helps to clear thinking by eliminating a general feeling of 
<br>being in a maze of code and unnecessary "housekeeping" tasks.
<br>One can say that there is a limited "buffer capacity" in the human
<br>mind, and relieving it of the need to remember where things are in a 
<br>larger file, at which other points one must fill in values or adjust
<br>invocation etc. <i>immediately makes the user "more intelligent"</i>
<p>
</li><li><b>TOC: to toggle</b> a section open/closed, click on the <i>corresponding link</i>
<br>Remember to open <i>all sections above it</i> for it to become visible.
</li><li><b>TOC: to open all sections above</b> some internal subsection to make
<br>it visible, click on the <i>section number</i> in the column on the left.
</li><li><b>TOC: to open all above and jump</b> click on the leftmost symbol.
<p>
</li><li><b>To restore the default view</b> <i>reload</i> the page in the browser.
<p>
</li><li>
<b>To keep some sections open</b> upon each reload: supposing you
<br>work on the code, constantly update it and cannot bother to reopen it 
<br>again and again - mark the headings for the sections in the source file
<br>with a plus, i.e. write the opening tag (only)  as +h2, +h3. Again, all
<br>sections above must be marked open too. 
<br><b>Note that</b> "expand all" and "collapse all" disregard these settings.
<br>Reload the page after using those options to again view the text
<br>according to your preferences.
<p>
</li><li>
<b> To use the Index </b>, click on the numbered sections in the TOC above
<br>(opening them; use highlighting as a guide; when sections are visible,
<br>the slider on your browser window  will shorten too), or "expand all", 
<br>and then use your browser's Find function to highlight all chunk name 
<br>instances in the visible text
<p>
</li><li>
<b>To search for variables etc.</b>, "expand all" text - or manually 
<br>expand needed sections - and then use your browser's Find function to 
<br>highlight all and jump between the found items.
<p></li></ul>

</div> 
<p>
<br>
<p>
<div class='hl' align=center>
<p>
<a href="javascript:;" onmousedown="toggleDiv('tocmain');">
<b>TABLE OF CONTENTS [expand/collapse]</b></a>
<a name="tocancor"></a>
<font size=-1 color=darkgrey><i>
<p><b>Section name</b> toggles expanded state. <b>Subsection number</b> on the left opens
<br>all parent sections to make it visible. <b>Leftmost symbol</b> opens parents and
<br>jumps to the section.
</i></font>
</div>

<div id='tocmain' style='display:block' style='background:#ffffff'> 
<p>
<br>
<p>
&nbsp;<a href="#1" onmousedown="open_all_above(1);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(1);" ><i>1</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(1);" id="toc1"><b> Abstract</a>&nbsp;<a><font class='lnum' size=-1><i>(line 89)</i></font></b></a><br>
&nbsp;<a href="#2" onmousedown="open_all_above(2);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(2);" ><i>2</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(2);" id="toc2"><b>1&nbsp;&nbsp;Introduction</a>&nbsp;<a><font class='lnum' size=-1><i>(line 96)</i></font></b></a><br>
&nbsp;<a href="#3" onmousedown="open_all_above(3);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(3);" ><i>3</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(3);" id="toc3"><b>2&nbsp;&nbsp;Lie algebras</a>&nbsp;<a><font class='lnum' size=-1><i>(line 109)</i></font></b></a><br>
&nbsp;<a href="#4" onmousedown="open_all_above(4);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(4);" ><i>4</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(4);" id="toc4"><b>3&nbsp;&nbsp;Semisimple Lie algebras</a>&nbsp;<a><font class='lnum' size=-1><i>(line 185)</i></font></b></a><br>
&nbsp;<a href="#5" onmousedown="open_all_above(5);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(5);" ><i>5</i></a>&nbsp;&nbsp;&nbsp;&nbsp;..............&nbsp;<a href="javascript:;" onmousedown="toggleCombined(5);" id="toc5"><b>3.1&nbsp;&nbsp;Root systems</a>&nbsp;<a><font class='lnum' size=-1><i>(line 202)</i></font></b></a><br>
&nbsp;<a href="#6" onmousedown="open_all_above(6);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(6);" ><i>6</i></a>&nbsp;&nbsp;&nbsp;&nbsp;..............&nbsp;<a href="javascript:;" onmousedown="toggleCombined(6);" id="toc6"><b>3.2&nbsp;&nbsp;Simple Lie algebras</a>&nbsp;<a><font class='lnum' size=-1><i>(line 321)</i></font></b></a><br>
&nbsp;<a href="#7" onmousedown="open_all_above(7);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(7);" ><i>7</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(7);" id="toc7"><b> 4&nbsp;&nbsp;Representations</a>&nbsp;<a><font class='lnum' size=-1><i>(line 396)</i></font></b></a><br>
&nbsp;<a href="#8" onmousedown="open_all_above(8);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(8);" ><i>8</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(8);" id="toc8"><b>5&nbsp;&nbsp;General outline of the code</a>&nbsp;<a><font class='lnum' size=-1><i>(line 450)</i></font></b></a><br>
&nbsp;<a href="#9" onmousedown="open_all_above(9);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(9);" ><i>9</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(9);" id="toc9"><b>A&nbsp;&nbsp;Library</a>&nbsp;<a><font class='lnum' size=-1><i>(line 469)</i></font></b></a><br>
&nbsp;<a href="#10" onmousedown="open_all_above(10);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(10);" ><i>10</i></a>&nbsp;&nbsp;&nbsp;&nbsp;..............&nbsp;<a href="javascript:;" onmousedown="toggleCombined(10);" id="toc10"><b>A.1&nbsp;&nbsp;Commonly used Scheme procedures</a>&nbsp;<a><font class='lnum' size=-1><i>(line 484)</i></font></b></a><br>
&nbsp;<a href="#11" onmousedown="open_all_above(11);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(11);" ><i>11</i></a>&nbsp;&nbsp;&nbsp;&nbsp;..............&nbsp;<a href="javascript:;" onmousedown="toggleCombined(11);" id="toc11"><b>A.2&nbsp;&nbsp;Object system</a>&nbsp;<a><font class='lnum' size=-1><i>(line 565)</i></font></b></a><br>
&nbsp;<a href="#12" onmousedown="open_all_above(12);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(12);" ><i>12</i></a>&nbsp;&nbsp;&nbsp;&nbsp;..............&nbsp;<a href="javascript:;" onmousedown="toggleCombined(12);" id="toc12"><b>A.3&nbsp;&nbsp;Vector and matrix manipulation</a>&nbsp;<a><font class='lnum' size=-1><i>(line 693)</i></font></b></a><br>
&nbsp;<a href="#13" onmousedown="open_all_above(13);" >))</a>&nbsp;&nbsp;<a href="javascript:;" onmousedown="open_all_above(13);" ><i>13</i></a>&nbsp;&nbsp;&nbsp;&nbsp;.......&nbsp;<a href="javascript:;" onmousedown="toggleCombined(13);" id="toc13"><b>Footnotes:</a>&nbsp;<a><font class='lnum' size=-1><i>(line 771)</i></font></b></a><br>
</div>
<p>
<br>
<p>
<!--fieldset><legend-->
<div class='hl' align=center>
<a href="javascript:;" onmousedown="toggleDiv('indbuf');">
<b>INDEX of Code Chunks [expand/collapse]</b></a>
</div>
<!--/legend></fieldset-->
<p>
<div id='indbuf' style='display:none' style='background:#ffffff'> 
<ul>
<p>
A <b>"def" superscript</b> means the chunk is defined,<br>
a <b>"link"</b> that the chunk is being linked to from that section,<br>
and a <b>bare number</b> means the chunk is being used in a section.
<p>
<br>
<b>&lt;&lt;</b><font class='chunkref'>Anomalous weights computation .scm</font><b>&gt;&gt;</b> -- <b> 7</b>  <b> 7<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Commutative algebra .scm</font><b>&gt;&gt;</b> -- <b> 3<sup>def</sup></b>  <b> 8</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Functions for root systems .scm</font><b>&gt;&gt;</b> -- <b> 5<sup>def</sup></b>  <b> 8</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Lie algebra class .scm</font><b>&gt;&gt;</b> -- <b> 3<sup>def</sup></b>  <b> 8</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Lie algebra methods .scm</font><b>&gt;&gt;</b> -- <b> 3</b>  <b> 3<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>LispMe Objects .scm</font><b>&gt;&gt;</b> -- <b> 11<sup>def</sup></b>  <b> 9</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Matrix inverse .scm</font><b>&gt;&gt;</b> -- <b> 12</b>  <b> 12<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Representations .scm</font><b>&gt;&gt;</b> -- <b> 7<sup>def</sup></b>  <b> 7<sup>def</sup></b>  <b> 8</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Root system methods .scm</font><b>&gt;&gt;</b> -- <b> 5</b>  <b> 5<sup>def</sup></b>  <b> 5<sup>def</sup></b>  <b> 5<sup>def</sup></b>  <b> 5<sup>def</sup></b>  <b> 5<sup>def</sup></b>  <b> 5<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Semi-standard Scheme procedures .scm</font><b>&gt;&gt;</b> -- <b> 10<sup>def</sup></b>  <b> 9</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Semisimple Lie algebra .scm</font><b>&gt;&gt;</b> -- <b> 4<sup>def</sup></b>  <b> 8</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Semisimple Lie algebra methods .scm</font><b>&gt;&gt;</b> -- <b> 4</b>  <b> 5<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Sets .scm</font><b>&gt;&gt;</b> -- <b> 10<sup>def</sup></b>  <b> 9</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Simple Lie algebras .scm</font><b>&gt;&gt;</b> -- <b> 6<sup>def</sup></b>  <b> 8</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Vector and matrix tools .scm</font><b>&gt;&gt;</b> -- <b> 12<sup>def</sup></b>  <b> 9</b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Vector operations .scm</font><b>&gt;&gt;</b> -- <b> 12</b>  <b> 12<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>Weight multiplicities computation .scm</font><b>&gt;&gt;</b> -- <b> 7</b>  <b> 7<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>library.scm</font><b>&gt;&gt;</b> -- <b> 9<sup>def</sup></b> <br>
<b>&lt;&lt;</b><font class='chunkref'>lie-algebra.scm</font><b>&gt;&gt;</b> -- <b> 8<sup>def</sup></b> <br>
</div>
<p>
<br>
<p><div class='hl' align=center><i>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</i></div><p>
</ul></fieldset><p>
<br><p>
<p>
<p>
<p>
<title>Finite dimensional Lie algebras</title><br>
<div align=center>    <br>
<font size=+2><b>Finite dimensional Lie algebras </b></font><br>
<i>Anton Nazarov </i><br>
</div><br>
<p>
<p>
<p>
<p>
        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('1');">
<font class='lnum'><i>(1)</i></font>&nbsp; Abstract</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 89)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='1'></a></legend></fieldset>
<p>
<div id="1" style="display:none">   
<ul>

<p>
<p>
  We present concise introduction to the representation theory of finite-dimensional Lie algebras and illustrate it with the computational algorithms implemented in Scheme. <br>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('1');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('2');">
<font class='lnum'><i>(2)</i></font>&nbsp;1&nbsp;&nbsp;Introduction</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 96)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='2'></a></legend></fieldset>
<p>
<div id="2" style="display:none">   
<ul>

<p>
<p>
Representation theory of finite-dimensional Lie algebras is central to the study of continuous symmetries in physics. This theory is well-understood and there exist standard courses and textbooks on the subject [], [humphreys]. Nevertheless some problems of the representation theory require extensive computation and no standard textbook on the computational algorithms is known to the author of this notes. There exists a volume [], but it was written in 1970-es and have not been updated since, so its contents are limited to the early approaches and implementations on the old hardware which is unavailable now. Also some progress was made in the computational algorithms of the representation theory since the publication of []. It is important to mention series of papers by Patera et al. (see [] and references therein) and books [], [] which introduce new and optimised algorithms although do not discuss the implementations.<br>
There exist several solid implementation of the core algorithms. We want to mention Maple package Coxeter/Weyl [] and standalone programs LiE [] and LambdaTensor []. These programs are solid and rather fast but have not seen any updates in last several years. Also they are not always convenient to use since they lack graphical user interface and interoperability with the popular programming languages and mathematical programs such as Mathematica, Python or Fortran.<br>
We want to summarise some basic notions and algorithms of representation theory in order to stimulate the emergence of more modern and universal software or at least give some tools to the scientists who by some reasons can not use the existing software.<br>
<p>
Our implementation use programming language Scheme and is presented as the Literate program []. The choice of the language is due to high portability of its implementations <a href="#tthFtNtAAB" name="tthFrefAAB"><sup>1</sup></a>, wide use of Scheme for the teaching [] and personal preferences of the author. <br>
<p>
<p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('2');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('3');">
<font class='lnum'><i>(3)</i></font>&nbsp;2&nbsp;&nbsp;Lie algebras</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 109)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='3'></a></legend></fieldset>
<p>
<div id="3" style="display:none">   
<ul>

<p>
<p>
<b>Definition 1: </b> <b>Lie algebra ``\mathfrakg``</b> is a linear space with the bilinear operation <i>(eq 1)</i><br>
<ul> ``[ , ]:\mathfrak{g}\otimes \mathfrak{g}\to \mathfrak{g}``</ul><br>
with the additional property that Jacoby identity holds <i>(eq 2)</i><br>
<ul><br>
``[x,[y,z]]+\text{(cyclic permutations)}=0``</ul><br>
<p>
Lie algebras can be finite- or infinite-dimensional. Finite-dimensional Lie algebras are classified.<br>
<p>
<p><br>
We will represent Lie algebra in the code as the object of class <i>lie-algebra</i>. We use very simple class system, which is described in the Appendix . So <i>lie-algebra</i> is really an interface, but since our object system doesn't have interfaces we make it an abstract class and concrete classes such as <i>semisimple-lie-algebra</i> inherit it.<br>
Lie algebra is a vector space, so we really should create class for the vector space which contains methods for the change of basis. But for now we use only one standard basis for Lie algebras and <i>lie-algebra</i> is the subclass of the most genral class <i>object</i>.<br>
<p>
<font class='lnum'>124</font>   
                <div id=codechunk124>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Lie algebra class .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>125</font>   (class 'lie-algebra 'object
<font class='lnum'>126</font>          <font class='chunkref'>&lt;&lt;Lie algebra methods .scm&gt;&gt;</font>)
<font class='lnum'>127</font>   </fieldset></pre>
</div><p>
<p>
We need to add several definitions and describe a structure of Lie algebra in order to discuss fields and methods of <i>lie-algebra</i> class.<br>
<p>
<b>Definition 2: </b> <b>Ideal</b> ``\mathfrak{e}\subset\mathfrak{g}: [\mathfrak{g},\mathfrak{e}]\subset \mathfrak{e}``<br>
<p>
<p>
<b>Definition 3: </b> ``\mathfrakg`` is a <b>simple Lie algebra</b> if ``\mathfrakg`` has no proper ideal (except ``\mathfrakg`` and ``{0}``).<br>
<p>
<p>
<b>Definition 4: </b> A Lie algebra ``\mathfrak{g}`` is called <b>soluble</b> if ``\mathfrak{g}^{(n)}={0}``, where ``\mathfrak{g}^{(n)}=[\mathfrak{g}^{(n-1)},\mathfrak{g}^{(n-1)}]``.<br>
<p>
<p>
<b>Definition 5: </b> ``\mathfrak{g}`` is semisimple if its maximal soluble ideal ``R\subset\mathfrak{g}`` is equal to ``{0}``.<br>
<p>
Semisimple Lie algebra is a direct sum of simple Lie algebras.<br>
<p>
Since Lie algebra is a linear space, it can be specified by a set of generators ``J_a\in \mathfrak{g}`` with the commutation relations ``[J_a,J_b]=if_{ab}^cJ_c``. ``f_{ab}^c`` are called <b> structure constants</b>. The number of generators is equal to the dimension of Lie algebra.<br>
<p>
<p>
Now we need to discuss internal structre of Lie algebras, which can be representated with the code constructs and used for the study of algebra properties.<br>
<p>
<b>Definition 6: </b> <b>Cartan subalgebra ``\mathfrak{h}\subset\mathfrak{g}``</b> - is the maximal commutative subalgebra of ``\mathfrak{g}``. The dimension of the Cartan subalgebra ``\mathfrak{h}`` is called <b>rank</b> of Lie algebra ``\mathfrak{g}``.<br>
<p>
<p>
<p>
<font class='lnum'>154</font>   
                <div id=codechunk154>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Lie algebra methods .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>155</font>   `(rank ,(lambda (self)
<font class='lnum'>156</font>   	      (error "Abstract class!")))
<font class='lnum'>157</font>   `(dimension ,(lambda (self)
<font class='lnum'>158</font>   	      (error "Abstract class!")))
<font class='lnum'>159</font>   `(cartan-subalgebra ,(lambda (self) 
<font class='lnum'>160</font>   	      (error "Abstract class!")))
<font class='lnum'>161</font>   
<font class='lnum'>162</font>   </fieldset></pre>
</div><p>
<p>
Commutative algebras constitute first concrete class of Lie algebras.<br>
<p>
<font class='lnum'>167</font>   
                <div id=codechunk167>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Commutative algebra .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>168</font>   (class 'commutative-algebra 'lie-algebra
<font class='lnum'>169</font>          '(dim 1)
<font class='lnum'>170</font>          `(rank ,(lambda (self) (send self 'dim)))
<font class='lnum'>171</font>          `(dimension ,(lambda (self) (send self 'dim)))
<font class='lnum'>172</font>          `(cartan-subalgebra ,(lambda (self) self)))
<font class='lnum'>173</font>   
<font class='lnum'>174</font>   ;; The constructor
<font class='lnum'>175</font>   (define (make-commutative-algebra dim)
<font class='lnum'>176</font>     (new 'commutative-algebra `(dim ,dim)))
<font class='lnum'>177</font>   </fieldset></pre>
</div><p>
<b>TODO</b><br /><br>
It can be interesting and useful to add a method which show commutation relatons of the algebra in the symbolic form, but this task is left for the future  <br>
<p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('3');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('4');">
<font class='lnum'><i>(4)</i></font>&nbsp;3&nbsp;&nbsp;Semisimple Lie algebras</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 185)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='4'></a></legend></fieldset>
<p>
<div id="4" style="display:none">   
<ul>

<p>
<p>
The structure of simple and semisimple Lie algebras can be encoded by the set of simple roots. <br>
<p>
<font class='lnum'>190</font>   
                <div id=codechunk190>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Semisimple Lie algebra .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>191</font>   (class 'semisimple-lie-algebra 'lie-algebra
<font class='lnum'>192</font>          '(simple-roots ())
<font class='lnum'>193</font>          <font class='chunkref'>&lt;&lt;Semisimple Lie algebra methods .scm&gt;&gt;</font>)
<font class='lnum'>194</font>   ;; The constructor
<font class='lnum'>195</font>   (define (make-semisimple-lie-algebra simple-roots)
<font class='lnum'>196</font>     (new 'semisimple-lie-algebra `(simple-roots ,simple-roots)))
<font class='lnum'>197</font>   
<font class='lnum'>198</font>   </fieldset></pre>
</div><p>
<p>
<p>
        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('5');">
<font class='lnum'><i>(5)</i></font>&nbsp;3.1&nbsp;&nbsp;Root systems</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 202)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='5'></a></legend></fieldset>
<p>
<div id="5" style="display:none">   
<ul>

<p>
<p>
<b>Definition 7: </b><br>
  In the <b> Cartan-Weyl</b> basis the genrators are constructed as follows.<br>
  First we choose the genrators ``H_i\in \mathfrak{h}`` of the Cartan subalgebra. All these generators commute ``[H_i,H_j]=0`` and their representations can be diagonalised simultaneously. The remaining generators ``E_{\alpha}`` are chosen to be a linear combinations of ``J_a`` such that <i>(eq:4)</i><br>
    <ul>``[H_i,E_{\alpha}]=\alpha_i E_{\alpha}``</ul><br>
  The vector ``\alpha=(\alpha_1,\dots,\alpha_r),\; r=rank(\mathfrak{g})`` is called a <b> root</b> and the corresponding operator ``E_{\alpha}`` is called <b> ladder operator</b>.<br>
<p>
The root ``\alpha`` maps ``H_i`` to the number ``\alpha(H_i)=\alpha_i`` hence ``\alpha\in \mathfrak{h}^{*}`` - element of the dual to the Cartan subalgebra. The set of all the roos ``\alpha`` is denoted by ``\Delta=\{\alpha,\; \alpha \text{ - root}\}``. So it is natural for the <i>lie-algebra</i> class to have a method which lists all the roots.<br>
<p>
<font class='lnum'>213</font>   
                <div id=codechunk213>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Semisimple Lie algebra methods .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>214</font>   `(rank ,(lambda (self)
<font class='lnum'>215</font>       (length (send self 'simple-roots))))
<font class='lnum'>216</font>   
<font class='lnum'>217</font>   `(cartan-subalgebra ,(lambda (self)
<font class='lnum'>218</font>       (make-commutative-algebra (send self 'rank))))
<font class='lnum'>219</font>   <font class='chunkref'>&lt;&lt;Root system methods .scm&gt;&gt;</font>
<font class='lnum'>220</font>   </fieldset></pre>
</div><p>
All the roots are the linear combinations of simple roots with the integral coefficients. There exists discrete group of symmetry called <b>Weyl group</b> which can be used to produce all the roots from the set of simple roots. <br>
<p>
<br><br>
<b>Definition 8: </b><br>
<b> Weyl group ``W``</b> of finite-dimension Lie algebra is a finite reflection group of ``\mathfrak{h}^*`` generated by the basic reflections corresponding to the simple roots. <br>
  Each simple root ``\alpha_i`` corresponds to the reflection ``r_{i}`` in hyperplane orthogonal to ``\alpha``.  <i>(eq 5)</i><br>
    <ul>``r_{i}\lambda=\lambda-\frac{(\lambda,\alpha_i)}{(\alpha_i,\alpha_i)}\alpha_i``</ul><br>
  For ``w\in W`` there exists several equivalent realizations of the form ``w=r_{i_1}\cdot r_{i_2}\dots r_{i_k},\; i_1\dots i_k=1..r``. The expression of the smallest  <i>length</i> is called  <i>reduced</i>. <br>
<p>
We will implement represent Weyl group elements as the lists of numbers of basic reflection <i>(eq 6)</i><br>
<ul>``w=r_{i_1}\cdot r_{i_2}\dots r_{i_k} \leftrightarrow (i_1, i_2,\dots,i_k)``</ul><br>
<p>
<p>
Then we will implement action of Weyl group elements on ``\mathfrak{h}^*`` using the recipies from \cite{stembridge2001computational}, \cite{casselman1994machine}, but it will be done in the future. For now we are not implementing abstract construction of Weyl group since it is enough to be able to construct Weyl group orbits of ``\mathfrak{h}^*`` elements.<br>
<p>
So we need just two following general functions:<br>
<p>
<font class='lnum'>239</font>   
                <div id=codechunk239>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Functions for root systems .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>240</font>   (define (co-root r)
<font class='lnum'>241</font>     (div (mul 2 r) (prod r r)))
<font class='lnum'>242</font>   
<font class='lnum'>243</font>   (define (reflect weight root)
<font class='lnum'>244</font>     (sub weight (mul (prod weight (co-root root)) root)))
<font class='lnum'>245</font>   </fieldset></pre>
</div><p>
Here <i>co-root</i> ``\alpha^{\vee}`` is the element of the dual space ``(\mathfrak{h}^*)^*`` which is identified with ``\mathfrak{h}^*\approx \mathfrak{h}`` since we have scalar product on ``\mathfrak{h}``.<br>
<p>
Now we can implement wide range of root system related methods of <i>semisimple-lie-algebra</i> class<br>
<p>
<font class='lnum'>251</font>   
                <div id=codechunk251>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Root system methods .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>252</font>   `(simple-co-roots ,(lambda (self)
<font class='lnum'>253</font>   	      (map co-root (send self 'simple-roots))))
<font class='lnum'>254</font>   </fieldset></pre>
</div><p>
<p>
<p><br>
<b>Definition 9: </b><br>
<b>Cartan matrix</b> with the elements <i>(eq 7)</i><br>
    <ul>``a_{ij}=(\alpha_i,\alpha_j^{\vee})=\frac{2(\alpha_i,\alpha_j)}{(\alpha_j,\alpha_j)}``</ul><br>
  completely determines the set of simple roots and is useful for the classification and compact description of Lie algebras.<br>
<p>
<font class='lnum'>263</font>   
                <div id=codechunk263>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Root system methods .scm&gt;&gt<sub>2</sub>=</legend>
<font class='lnum'>264</font>   `(cartan-matrix
<font class='lnum'>265</font>     ,(lambda (self)
<font class='lnum'>266</font>        (map (lambda (a)
<font class='lnum'>267</font>   	    (map (lambda (av) (prod a av)) (send self 'simple-co-roots)))
<font class='lnum'>268</font>   	 (send self 'simple-roots))))
<font class='lnum'>269</font>   </fieldset></pre>
</div><p>
<p>
We have already introduced Weyl group of reflections <a href="#weyl-group-def">3.1</a>, now we implement procedure which constructs the union of Weyl group orbits of the set of weights.<br>
<p>
<font class='lnum'>274</font>   
                <div id=codechunk274>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Root system methods .scm&gt;&gt<sub>3</sub>=</legend>
<font class='lnum'>275</font>   `(orbit ,
<font class='lnum'>276</font>     (lambda (self weights)
<font class='lnum'>277</font>       (let ((addon 
<font class='lnum'>278</font>   	   (filter (lambda (x) (not (element-of-set? x weights)))
<font class='lnum'>279</font>   		   (fold-right union-set '() 
<font class='lnum'>280</font>   			       (map (lambda (w)
<font class='lnum'>281</font>   				      (map
<font class='lnum'>282</font>   				       (lambda (x) (reflect w x))
<font class='lnum'>283</font>   				       (send self 'simple-roots)))
<font class='lnum'>284</font>   				    weights)))))
<font class='lnum'>285</font>         (if (null? addon)
<font class='lnum'>286</font>   	  weights
<font class='lnum'>287</font>   	  (send self 'orbit (union-set weights addon) )))))
<font class='lnum'>288</font>   </fieldset></pre>
</div><p>
<p>
<b>Definition 10: </b><br>
<b>Fundamental weights</b> form a basis ``w_1,...,w_r`` dual to the basis of simple co-roots ``\alpha_1^{\vee},...,\alpha_r^{\vee}``.<br>
<p>
<font class='lnum'>294</font>   
                <div id=codechunk294>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Root system methods .scm&gt;&gt<sub>4</sub>=</legend>
<font class='lnum'>295</font>   `(fundamental-weights
<font class='lnum'>296</font>     ,(lambda (self)
<font class='lnum'>297</font>        (map (lambda (x)
<font class='lnum'>298</font>   	    (sum (map-n (lambda (y z) (mul y z)) x (send self 'simple-roots))))
<font class='lnum'>299</font>   	  (matrix-inverse (send self 'cartan-matrix)))))
<font class='lnum'>300</font>   </fieldset></pre>
</div><p>
<b>Weyl vector</b> ``\rho=\sum_i w_i=\frac{1}{2}\sum_{\alpha\in \Delta^{+}}\alpha``.<br>
<p>
<p>
<font class='lnum'>305</font>   
                <div id=codechunk305>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Root system methods .scm&gt;&gt<sub>5</sub>=</legend>
<font class='lnum'>306</font>   `(rho ,(lambda (self)
<font class='lnum'>307</font>   	 (sum (send self 'fundamental-weights))))
<font class='lnum'>308</font>   
<font class='lnum'>309</font>   </fieldset></pre>
</div><p>
<p>
We can construct the full set of Lie algebra roots using Weyl symmetry.<br>
<p>
<font class='lnum'>314</font>   
                <div id=codechunk314>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Root system methods .scm&gt;&gt<sub>6</sub>=</legend>
<font class='lnum'>315</font>   `(roots ,(lambda (self)
<font class='lnum'>316</font>   	   (send self 'orbit (send self 'simple-roots))))
<font class='lnum'>317</font>   </fieldset></pre>
</div><p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('5');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('6');">
<font class='lnum'><i>(6)</i></font>&nbsp;3.2&nbsp;&nbsp;Simple Lie algebras</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 321)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='6'></a></legend></fieldset>
<p>
<div id="6" style="display:none">   
<ul>

<p>
<p>
Simple Lie algebras are classified by the use of Dynkin diagrams (which we will draw in the upcoming versions of this program) [].<br>
<p>
<p><br>
Here we explicitly construct simple roots for the classical series of finite-dimensional Lie algebras<br>
<p>
<font class='lnum'>329</font>   
                <div id=codechunk329>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Simple Lie algebras .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>330</font>   (define (make-simple-lie-algebra series rank)
<font class='lnum'>331</font>     (define (simple-roots series rank)
<font class='lnum'>332</font>       (cond ((eq? series 'A)
<font class='lnum'>333</font>   	   (do ((i 0 (+ i 1))
<font class='lnum'>334</font>   		(base '()
<font class='lnum'>335</font>   		      (cons 
<font class='lnum'>336</font>   		       (do ((j 0 (+ j 1))
<font class='lnum'>337</font>   			    (v '()
<font class='lnum'>338</font>   			       (cons
<font class='lnum'>339</font>   				(cond ((= j i) 1)
<font class='lnum'>340</font>   				      ((= j (+ i 1)) -1)
<font class='lnum'>341</font>   				      (else 0))
<font class='lnum'>342</font>   				v)))
<font class='lnum'>343</font>   			   ((&gt; j rank) (reverse v)))
<font class='lnum'>344</font>   		       base)))
<font class='lnum'>345</font>   	       ((= i rank) (reverse base))))
<font class='lnum'>346</font>   	  ((eq? series 'B)
<font class='lnum'>347</font>   	   (do ((i 0 (+ i 1))
<font class='lnum'>348</font>   		(base '()
<font class='lnum'>349</font>   		      (cons 
<font class='lnum'>350</font>   		       (do ((j 0 (+ j 1))
<font class='lnum'>351</font>   			    (v '()
<font class='lnum'>352</font>   			       (cons
<font class='lnum'>353</font>   				(cond ((= j i) 1)
<font class='lnum'>354</font>   				      ((= j (+ i 1)) -1)
<font class='lnum'>355</font>   				      (else 0))
<font class='lnum'>356</font>   				v)))
<font class='lnum'>357</font>   			   ((= j rank) (reverse v)))
<font class='lnum'>358</font>   		       base)))
<font class='lnum'>359</font>   	       ((= i rank) (reverse base))))
<font class='lnum'>360</font>   	  ((eq? series 'C)
<font class='lnum'>361</font>   	   (do ((i 0 (+ i 1))
<font class='lnum'>362</font>   		(base '()
<font class='lnum'>363</font>   		      (cons 
<font class='lnum'>364</font>   		       (do ((j 0 (+ j 1))
<font class='lnum'>365</font>   			    (v '()
<font class='lnum'>366</font>   			       (cons
<font class='lnum'>367</font>   				(cond ((and (= i (- rank 1)) (= i j)) 2)
<font class='lnum'>368</font>   				      ((= j i) 1)
<font class='lnum'>369</font>   				      ((= j (+ i 1)) -1)
<font class='lnum'>370</font>   				      (else 0))
<font class='lnum'>371</font>   				v)))
<font class='lnum'>372</font>   			   ((= j rank) (reverse v)))
<font class='lnum'>373</font>   		       base)))
<font class='lnum'>374</font>   	       ((= i rank) (reverse base))))
<font class='lnum'>375</font>   	  ((eq? series 'D)
<font class='lnum'>376</font>   	   (do ((i 0 (+ i 1))
<font class='lnum'>377</font>   		(base '()
<font class='lnum'>378</font>   		      (cons 
<font class='lnum'>379</font>   		       (do ((j 0 (+ j 1))
<font class='lnum'>380</font>   			    (v '()
<font class='lnum'>381</font>   			       (cons
<font class='lnum'>382</font>   				(cond ((and (= i (- rank 1)) (= (- i 1) j)) 1)
<font class='lnum'>383</font>   				      ((= j i) 1)
<font class='lnum'>384</font>   				      ((= j (+ i 1)) -1)
<font class='lnum'>385</font>   				      (else 0))
<font class='lnum'>386</font>   				v)))
<font class='lnum'>387</font>   			   ((= j rank) (reverse v)))
<font class='lnum'>388</font>   		       base)))
<font class='lnum'>389</font>   	       ((= i rank) (reverse base))))))
<font class='lnum'>390</font>     (make-semisimple-lie-algebra (simple-roots series rank)))
<font class='lnum'>391</font>   </fieldset></pre>
</div><p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('6');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('4');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('7');">
<font class='lnum'><i>(7)</i></font>&nbsp; 4&nbsp;&nbsp;Representations</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 396)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='7'></a></legend></fieldset>
<p>
<div id="7" style="display:none">   
<ul>

<p>
<p>
<b>Definition 11: </b> <br>
  <b>Representation</b> of Lie algebra ``\mathfrak{g}`` on a linear space ``L`` is a homomorphism ``V:\mathfrak{g}\to Aut L``. It has the property <i>(eq 7)</i><br>
    <ul>``V([g,h])v=V(g)(V(h)v)-V(h)(V(g)v), \;\text{for}\; g,h\in \mathfrak{g};\; v\in L``</ul><br>
<p>
There exists a classification of finite-dimensional representations of Lie algebras.<br>
<p>
For the finite-dimensional representations we introduce abstract class <i>representation</i> and concrete class <i>highest-weight-representation</i>. Then we can describe  tensor product of two highest weight representations as the object of class <i>representation</i> (but not of class <i>highest-weight-representation</i>.<br>
<p>
<font class='lnum'>407</font>   
                <div id=codechunk407>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Representations .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>408</font>   (class 'representation 'object
<font class='lnum'>409</font>          `(dim ())
<font class='lnum'>410</font>          `(multiplicity , (lambda (self weight)
<font class='lnum'>411</font>   			  (error "Class is abstract!")))
<font class='lnum'>412</font>          '(lie-algebra ())
<font class='lnum'>413</font>          )
<font class='lnum'>414</font>   </fieldset></pre>
</div><p>
<p>
<p><br>
<p>
<font class='lnum'>419</font>   
                <div id=codechunk419>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Representations .scm&gt;&gt<sub>2</sub>=</legend>
<font class='lnum'>420</font>   (class 'highest-weight-representation 'representation
<font class='lnum'>421</font>          '(highest-weight ())
<font class='lnum'>422</font>          <font class='chunkref'>&lt;&lt;Anomalous weights computation .scm&gt;&gt;</font>
<font class='lnum'>423</font>          <font class='chunkref'>&lt;&lt;Weight multiplicities computation .scm&gt;&gt;</font>)
<font class='lnum'>424</font>   `(multiplicity , (lambda (self weight)
<font class='lnum'>425</font>   </fieldset></pre>
</div><p>
<p>
We use the recurrent method of calculation of weight multiplicities described in [], []. Weight multiplicities are determined using the set of anomalous points, which is constructed by the code below.<br>
<p>
<font class='lnum'>430</font>   
                <div id=codechunk430>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Anomalous weights computation .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>431</font>          `(anomalous-weights , 
<font class='lnum'>432</font>   	 (lambda (self)
<font class='lnum'>433</font>   	   (let* ((algebra (send self 'lie-algebra))
<font class='lnum'>434</font>   		  (rho (send algebra 'rho)))
<font class='lnum'>435</font>   	     (map (lambda (x)
<font class='lnum'>436</font>   		    (sub x rho))
<font class='lnum'>437</font>   		  (send algebra 'orbit (add (send self 'highest-weight) rho))))))
<font class='lnum'>438</font>   </fieldset></pre>
</div><p>
<p>
<p><br>
<p>
<font class='lnum'>443</font>   
                <div id=codechunk443>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Weight multiplicities computation .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>444</font>   
<font class='lnum'>445</font>   </fieldset></pre>
</div><p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('7');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('8');">
<font class='lnum'><i>(8)</i></font>&nbsp;5&nbsp;&nbsp;General outline of the code</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 450)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='8'></a></legend></fieldset>
<p>
<div id="8" style="display:none">   
<ul>

<p>
<p>
The code goes to several files of which <i>library.scm</i> is a compatibility layer which consists of auxiliary functions and allows portability between different Scheme implementations on different OS-es and hardware platforms. <i>library.scm</i> is described in the appendix .<br>
All the mathematical code which is connected with Lie theory is collected in the file <i>lie-algebra.scm</i>.<br>
<p>
<font class='lnum'>456</font>   
                <div id=codechunk456>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;lie-algebra.scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>457</font>   <font class='chunkref'>&lt;&lt;Lie algebra class .scm&gt;&gt;</font>
<font class='lnum'>458</font>   <font class='chunkref'>&lt;&lt;Commutative algebra .scm&gt;&gt;</font>
<font class='lnum'>459</font>   <font class='chunkref'>&lt;&lt;Semisimple Lie algebra .scm&gt;&gt;</font>
<font class='lnum'>460</font>   <font class='chunkref'>&lt;&lt;Functions for root systems .scm&gt;&gt;</font>
<font class='lnum'>461</font>   <font class='chunkref'>&lt;&lt;Simple Lie algebras .scm&gt;&gt;</font>
<font class='lnum'>462</font>   <font class='chunkref'>&lt;&lt;Representations .scm&gt;&gt;</font>
<font class='lnum'>463</font>   </fieldset></pre>
</div><p>
<p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('8');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('9');">
<font class='lnum'><i>(9)</i></font>&nbsp;A&nbsp;&nbsp;Library</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 469)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='9'></a></legend></fieldset>
<p>
<div id="9" style="display:none">   
<ul>

<p>
<p>
Since one of our target implementations of Scheme is LispMe, which is only partially R4RS-compliant, we create compatibility layer of common functions.<br>
Also this library can be used to port the code for Lie algebras to other Scheme implementations.<br>
<p>
<font class='lnum'>475</font>   
                <div id=codechunk475>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;library.scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>476</font>   <font class='chunkref'>&lt;&lt;Semi-standard Scheme procedures .scm&gt;&gt;</font>
<font class='lnum'>477</font>   <font class='chunkref'>&lt;&lt;Sets .scm&gt;&gt;</font>
<font class='lnum'>478</font>   <font class='chunkref'>&lt;&lt;Vector and matrix tools .scm&gt;&gt;</font>
<font class='lnum'>479</font>   <font class='chunkref'>&lt;&lt;LispMe Objects .scm&gt;&gt;</font>
<font class='lnum'>480</font>   </fieldset></pre>
</div><p>
<p>
<p>
        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('10');">
<font class='lnum'><i>(10)</i></font>&nbsp;A.1&nbsp;&nbsp;Commonly used Scheme procedures</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 484)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='10'></a></legend></fieldset>
<p>
<div id="10" style="display:none">   
<ul>

<p>
<p>
Due to the limitations of Palm OS platform functions such as <i>map</i> or <i>fold-left</i> in LispMe are in the separate library, which should be loaded by hand. Also function <i>map</i> accepts only 1-argument function and list, so we add these functions to our library. <br>
<p>
<p>
<font class='lnum'>490</font>   
                <div id=codechunk490>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Semi-standard Scheme procedures .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>491</font>   (define nil ())
<font class='lnum'>492</font>   (define true #t)
<font class='lnum'>493</font>   (define false #f)
<font class='lnum'>494</font>   
<font class='lnum'>495</font>   (define (zero? v)
<font class='lnum'>496</font>   	(= v 0))
<font class='lnum'>497</font>   
<font class='lnum'>498</font>   (define (map op list)
<font class='lnum'>499</font>   	(if (null? list) ()
<font class='lnum'>500</font>   		(cons (op (car list)) (map op (cdr list)))))
<font class='lnum'>501</font>   
<font class='lnum'>502</font>   (define (map-n op . lists) 
<font class='lnum'>503</font>       (define (map-n0 op  lists)
<font class='lnum'>504</font>   	(if (or (null? lists) (null? (car lists))) '()
<font class='lnum'>505</font>   	(cons (apply op (map car lists))
<font class='lnum'>506</font>   		(map-n0 op  (map cdr lists)))))
<font class='lnum'>507</font>       (map-n0 op lists))
<font class='lnum'>508</font>   
<font class='lnum'>509</font>   (define (accumulate op initial sequence)
<font class='lnum'>510</font>     (if (null? sequence)
<font class='lnum'>511</font>         initial
<font class='lnum'>512</font>         (op (car sequence)
<font class='lnum'>513</font>             (accumulate op initial (cdr sequence)))))
<font class='lnum'>514</font>   
<font class='lnum'>515</font>   (define (filter predicate sequence)
<font class='lnum'>516</font>     (cond ((null? sequence) ())
<font class='lnum'>517</font>           ((predicate (car sequence))
<font class='lnum'>518</font>            (cons (car sequence)
<font class='lnum'>519</font>                  (filter predicate (cdr sequence))))
<font class='lnum'>520</font>           (else (filter predicate (cdr sequence)))))
<font class='lnum'>521</font>   
<font class='lnum'>522</font>   (define (fold-left op initial sequence)
<font class='lnum'>523</font>     (define (iter result rest)
<font class='lnum'>524</font>       (if (null? rest)
<font class='lnum'>525</font>           result
<font class='lnum'>526</font>           (iter (op result (car rest))
<font class='lnum'>527</font>                 (cdr rest))))
<font class='lnum'>528</font>     (iter initial sequence))
<font class='lnum'>529</font>   
<font class='lnum'>530</font>   (define (fold-right op init s) (accumulate op init s))
<font class='lnum'>531</font>   </fieldset></pre>
</div><p>
We need couple of functions for sets. We represent set as list.<br>
<p>
<font class='lnum'>535</font>   
                <div id=codechunk535>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Sets .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>536</font>   (define (element-of-set? x set)
<font class='lnum'>537</font>     (cond ((null? set) false)
<font class='lnum'>538</font>           ((equal? x (car set)) true)
<font class='lnum'>539</font>           (else (element-of-set? x (cdr set)))))
<font class='lnum'>540</font>   
<font class='lnum'>541</font>   (define (adjoin-set x set)
<font class='lnum'>542</font>     (if (element-of-set? x set)
<font class='lnum'>543</font>         set
<font class='lnum'>544</font>         (cons x set)))
<font class='lnum'>545</font>   
<font class='lnum'>546</font>   (define (intersection-set set1 set2)
<font class='lnum'>547</font>     (cond ((or (null? set1) (null? set2)) '())
<font class='lnum'>548</font>           ((element-of-set? (car set1) set2)        
<font class='lnum'>549</font>            (cons (car set1)
<font class='lnum'>550</font>                  (intersection-set (cdr set1) set2)))
<font class='lnum'>551</font>           (else (intersection-set (cdr set1) set2))))
<font class='lnum'>552</font>   
<font class='lnum'>553</font>   (define (union-set set1 set2)
<font class='lnum'>554</font>   	(if (null? set1) set2
<font class='lnum'>555</font>   		(union-set (cdr set1)
<font class='lnum'>556</font>   			   (adjoin-set (car set1) set2))
<font class='lnum'>557</font>   	)
<font class='lnum'>558</font>   )
<font class='lnum'>559</font>   
<font class='lnum'>560</font>   </fieldset></pre>
</div><p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('10');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('11');">
<font class='lnum'><i>(11)</i></font>&nbsp;A.2&nbsp;&nbsp;Object system</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 565)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='11'></a></legend></fieldset>
<p>
<div id="11" style="display:none">   
<ul>

<p>
<p>
It is natural to represent Lie algebras, root systems and representation as objects, so we need a class system. Since standard Scheme class systems such as TinyCLOS, GOOPS, SOS can not be used on LispMe due to the lack of hygienic macros, we use the minimal class system called LispMeObjects.<br>
<p>
Here is the original documentation:<br>
<p>
<pre>
&nbsp;&nbsp;
;&nbsp;Classes

&nbsp;;&nbsp;LispMeObjects
&nbsp;;&nbsp;http://c2.com/cgi/wiki?LispMeObjects
&nbsp;;&nbsp;written&nbsp;by&nbsp;Don&nbsp;Wells
&nbsp;;&nbsp;Create&nbsp;a&nbsp;new&nbsp;class&nbsp;with&nbsp;(class&nbsp;name&nbsp;super&nbsp;'(slot&nbsp;value)...&nbsp;'(method&nbsp;function)).
&nbsp;;&nbsp;Always&nbsp;use&nbsp;'object&nbsp;as&nbsp;the&nbsp;super
&nbsp;;&nbsp;class&nbsp;at&nbsp;the&nbsp;very&nbsp;least.
&nbsp;;&nbsp;a&nbsp;function&nbsp;used&nbsp;as&nbsp;a&nbsp;method&nbsp;
&nbsp;;&nbsp;will&nbsp;take&nbsp;at&nbsp;least&nbsp;one&nbsp;argument&nbsp;
&nbsp;;&nbsp;self,&nbsp;the&nbsp;object&nbsp;that&nbsp;originally
&nbsp;;&nbsp;received&nbsp;the&nbsp;method.
&nbsp;;&nbsp;Invoke&nbsp;a&nbsp;function&nbsp;by&nbsp;sending&nbsp;the&nbsp;
&nbsp;;&nbsp;name&nbsp;and&nbsp;arguments&nbsp;to&nbsp;an
&nbsp;;&nbsp;object.&nbsp;(e.g.&nbsp;(send&nbsp;anObject&nbsp;'add&nbsp;'sum&nbsp;10))
&nbsp;;&nbsp;where&nbsp;add&nbsp;is&nbsp;the&nbsp;method&nbsp;and&nbsp;sum&nbsp;and&nbsp;10
&nbsp;;&nbsp;are&nbsp;arguments)
&nbsp;;&nbsp;Get&nbsp;the&nbsp;value&nbsp;of&nbsp;a&nbsp;slot&nbsp;by&nbsp;sending
&nbsp;;&nbsp;the&nbsp;slot's&nbsp;name.
&nbsp;;&nbsp;(e.g.&nbsp;(send&nbsp;anObject&nbsp;'sum))
&nbsp;;&nbsp;Set&nbsp;the&nbsp;value&nbsp;of&nbsp;a&nbsp;slot&nbsp;by&nbsp;sending
&nbsp;;&nbsp;the&nbsp;set&nbsp;method&nbsp;defined&nbsp;on&nbsp;object.
&nbsp;;&nbsp;(e.g.&nbsp;(send&nbsp;anObject&nbsp;'set&nbsp;'sum&nbsp;20))
&nbsp;;&nbsp;Always&nbsp;evaluate&nbsp;(clearClasses)&nbsp;before
&nbsp;;&nbsp;doing&nbsp;anything.

&nbsp;;&nbsp;an&nbsp;object&nbsp;is&nbsp;(superName&nbsp;(slotname&nbsp;value)...&nbsp;(methodName&nbsp;closure)...)
&nbsp;;&nbsp;a&nbsp;class&nbsp;is&nbsp;(className&nbsp;.&nbsp;object)
</pre><br>
<p>
New classes are created with <br>
<p>
<pre>
(class&nbsp;'&lt;classname&#62;&nbsp;'&lt;superclass&#62;&nbsp;(list&nbsp;'&lt;fieldname&#62;&nbsp;&lt;default-value&#62;)&nbsp;...)
</pre><br>
Instances of classes:<br>
<p>
<pre>
(define&nbsp;&lt;instance-name&#62;&nbsp;(new&nbsp;'&lt;classname&#62;&nbsp;(list&nbsp;'&lt;fieldname&#62;&nbsp;&lt;value&#62;)&nbsp;...))
</pre><br>
<p>
<font class='lnum'>615</font>   
                <div id=codechunk615>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;LispMe Objects .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>616</font>   
<font class='lnum'>617</font>   (define *classes* '())
<font class='lnum'>618</font>   
<font class='lnum'>619</font>   
<font class='lnum'>620</font>    (define (clearClasses)
<font class='lnum'>621</font>     (set! *classes* 
<font class='lnum'>622</font>       `((object #f 
<font class='lnum'>623</font>         (set ,setSlot)
<font class='lnum'>624</font>         (super
<font class='lnum'>625</font>            ,(lambda (self)
<font class='lnum'>626</font>               (getClass (car self))))))))
<font class='lnum'>627</font>   
<font class='lnum'>628</font>   
<font class='lnum'>629</font>    (define (setSlot self aSlotName aValue)
<font class='lnum'>630</font>     (let ((slot (assoc aSlotName (cdr self))))
<font class='lnum'>631</font>       (cond
<font class='lnum'>632</font>         ((not slot) 
<font class='lnum'>633</font>           (set-cdr! self 
<font class='lnum'>634</font>             (cons 
<font class='lnum'>635</font>               (list aSlotName  aValue) 
<font class='lnum'>636</font>               (cdr self))))
<font class='lnum'>637</font>         (else
<font class='lnum'>638</font>           (set-car! (cdr slot) aValue))))
<font class='lnum'>639</font>     aValue)
<font class='lnum'>640</font>   
<font class='lnum'>641</font>   
<font class='lnum'>642</font>    (define (getClass aClass)
<font class='lnum'>643</font>     (let ((class (assoc aClass *classes*)))
<font class='lnum'>644</font>         (cond
<font class='lnum'>645</font>           ((not class) #f)
<font class='lnum'>646</font>           (else (cdr class)))))
<font class='lnum'>647</font>   
<font class='lnum'>648</font>   
<font class='lnum'>649</font>    (define (class aName aSuperName . aDefinition)
<font class='lnum'>650</font>     (set! *classes* 
<font class='lnum'>651</font>       (cons 
<font class='lnum'>652</font>         (cons aName (cons aSuperName aDefinition))
<font class='lnum'>653</font>         *classes*))
<font class='lnum'>654</font>     aName)
<font class='lnum'>655</font>   
<font class='lnum'>656</font>   
<font class='lnum'>657</font>    (define (new aSuperName . args)
<font class='lnum'>658</font>     (cons aSuperName args))
<font class='lnum'>659</font>   
<font class='lnum'>660</font>   
<font class='lnum'>661</font>    (define (send anObject aMessage . args)
<font class='lnum'>662</font>     (sendWithSelf anObject anObject aMessage args))
<font class='lnum'>663</font>   
<font class='lnum'>664</font>   
<font class='lnum'>665</font>    (define (sendWithSelf self anObject aMessage args)
<font class='lnum'>666</font>     (let 
<font class='lnum'>667</font>       ((superName (car anObject))
<font class='lnum'>668</font>        (slot (assoc aMessage (cdr anObject))))
<font class='lnum'>669</font>       (cond
<font class='lnum'>670</font>         (slot (valueOfSlot self slot args))
<font class='lnum'>671</font>         ((not superName) #f)
<font class='lnum'>672</font>         (else 
<font class='lnum'>673</font>           (let ((superClass (getClass superName)))
<font class='lnum'>674</font>             (cond
<font class='lnum'>675</font>               ((not superClass) #f)
<font class='lnum'>676</font>               (else
<font class='lnum'>677</font>                 (sendWithSelf self superClass aMessage args))))))))
<font class='lnum'>678</font>   
<font class='lnum'>679</font>   
<font class='lnum'>680</font>    (define (valueOfSlot self theSlot args)
<font class='lnum'>681</font>     (let ((value (cadr theSlot)))
<font class='lnum'>682</font>       (cond
<font class='lnum'>683</font>         ((procedure? value)
<font class='lnum'>684</font>           (apply value (cons self args)))
<font class='lnum'>685</font>         (else value))))
<font class='lnum'>686</font>   
<font class='lnum'>687</font>   
<font class='lnum'>688</font>   </fieldset></pre>
</div><p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('11');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('12');">
<font class='lnum'><i>(12)</i></font>&nbsp;A.3&nbsp;&nbsp;Vector and matrix manipulation</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 693)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='12'></a></legend></fieldset>
<p>
<div id="12" style="display:none">   
<ul>

<p>
<p>
Here we have colleced simple tools for manipulation with vectors and matrices. They are important for the portability, since one of our target Scheme implementations doesn't support full R5RS-Scheme ([]) and portable Scheme libraries such as SLIB. <br>
<p>
<font class='lnum'>698</font>   
                <div id=codechunk698>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Vector and matrix tools .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>699</font>   <font class='chunkref'>&lt;&lt;Vector operations .scm&gt;&gt;</font>
<font class='lnum'>700</font>   <font class='chunkref'>&lt;&lt;Matrix inverse .scm&gt;&gt;</font>
<font class='lnum'>701</font>   </fieldset></pre>
</div><p>
We represent vectors with lists since for now we don't want to have object system <a href="#sec:object-system">A.2</a> overhead. It can be changed in the future.<br>
<p>
<font class='lnum'>705</font>   
                <div id=codechunk705>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Vector operations .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>706</font>   (define (add a b)
<font class='lnum'>707</font>     (map-n + a b))
<font class='lnum'>708</font>   
<font class='lnum'>709</font>   (define (sum list)
<font class='lnum'>710</font>     (fold-left add (car list) (cdr list)))
<font class='lnum'>711</font>   
<font class='lnum'>712</font>   (define (sub a b)
<font class='lnum'>713</font>     (map-n - a b))
<font class='lnum'>714</font>   
<font class='lnum'>715</font>   (define (mul a b)
<font class='lnum'>716</font>     (cond ((and (list? a) (number? b)) (map (lambda (x) (* x b)) a))
<font class='lnum'>717</font>   	((and (number? a) (list? b)) (mul b a))
<font class='lnum'>718</font>   	((and (number? a) (number? b)) (* a b))
<font class='lnum'>719</font>   	(else (error "Can not multiply"))))
<font class='lnum'>720</font>   
<font class='lnum'>721</font>   (define (div a b)
<font class='lnum'>722</font>     (map (lambda (x) (/ x b)) a))
<font class='lnum'>723</font>     
<font class='lnum'>724</font>   (define (prod a b)
<font class='lnum'>725</font>     (fold-left + 0 (map-n * a b)))
<font class='lnum'>726</font>   </fieldset></pre>
</div><p>
For the matrix inverse and determinant we use the implementation with the cofactors extracted from the SLIB. It is not the fastest and should be replaced with the Gaussian elimination.<br>
<p>
<font class='lnum'>730</font>   
                <div id=codechunk730>
    <pre><fieldset class='codefieldset'><legend class='codelegend'>&lt;&lt;Matrix inverse .scm&gt;&gt<sub></sub>=</legend>
<font class='lnum'>731</font>   (define (matrix-cofactor mat i j)
<font class='lnum'>732</font>     (define (butnth n lst)
<font class='lnum'>733</font>       (if (&lt;= n 1)
<font class='lnum'>734</font>   	(cdr lst)
<font class='lnum'>735</font>   	(cons (car lst)
<font class='lnum'>736</font>   	      (butnth (+ -1 n) (cdr lst)))))
<font class='lnum'>737</font>     (define (minor matrix i j)
<font class='lnum'>738</font>       (map (lambda (x)
<font class='lnum'>739</font>   	   (butnth j x))
<font class='lnum'>740</font>   	 (butnth i mat)))
<font class='lnum'>741</font>     (* (if (odd? (+ i j)) -1 1)
<font class='lnum'>742</font>        (matrix-determinant (minor mat i j))))
<font class='lnum'>743</font>   
<font class='lnum'>744</font>   (define (matrix-determinant mat)
<font class='lnum'>745</font>     (let ((n (length mat)))
<font class='lnum'>746</font>       (if (eqv? 1 n) (caar mat)
<font class='lnum'>747</font>   	(do ((j n (+ -1 j))
<font class='lnum'>748</font>   	     (ans 0 (+ ans (* (list-ref (car mat) (+ -1 j))
<font class='lnum'>749</font>   			      (matrix-cofactor mat 1 j)))))
<font class='lnum'>750</font>   	    ((&lt;= j 0) ans)))))
<font class='lnum'>751</font>   
<font class='lnum'>752</font>   
<font class='lnum'>753</font>   (define (matrix-inverse mat)
<font class='lnum'>754</font>     (let* ((det (matrix-determinant mat))
<font class='lnum'>755</font>   	 (rank (length mat)))
<font class='lnum'>756</font>       (and (not (zero? det))
<font class='lnum'>757</font>   	 (do ((i rank (+ -1 i))
<font class='lnum'>758</font>   	      (inv '() (cons
<font class='lnum'>759</font>   			(do ((j rank (+ -1 j))
<font class='lnum'>760</font>   			     (row '()
<font class='lnum'>761</font>   				  (cons (/ (matrix-cofactor mat j i) det) row)))
<font class='lnum'>762</font>   			    ((&lt;= j 0) row))
<font class='lnum'>763</font>   			inv)))
<font class='lnum'>764</font>   	     ((&lt;= i 0) inv)))))
<font class='lnum'>765</font>   
<font class='lnum'>766</font>   </fieldset></pre>
</div><p>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('12');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('9');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>

        <fieldset><legend><a href="javascript:;" onmousedown="toggleCombined('13');">
<font class='lnum'><i>(13)</i></font>&nbsp;Footnotes:</a>&nbsp;<font class='lnum' size=-1><sub><i>(line 771)</i></sub></font> <font size=-2><i><a href='#tocancor'>toc</a></i></font><a name='13'></a></legend></fieldset>
<p>
<div id="13" style="display:none">   
<ul>

<p>
<p>
<a name="tthFtNtAAB"></a><a href="#tthFrefAAB"><sup>1</sup></a>There exist Scheme implementations for UNIX, Windows, Linux, Mac OS, Palm OS, Windows CE/Pocket PC/Windows Mobile, Java platform and even micro-controllers, see [some website] for the details<br>
<br /><br>
<p>
<p>
<p>
</ul>
<p>
<br>
<i><font size=-1>
<a href="javascript:;"onmousedown="toggleCombined('13');">
Close the subsection</a></font>
</i> -- <i><font size=-1>
<a href="javascript:;" onmousedown="showAll();">
expand all</a> -- 
<a href="javascript:;" onmousedown="hideAll();">
collapse all</a>
</font></i>

<p>
</div>


</td></tr></table></center></body></html>

------------orQNYLOGidVp88I2yKagMz
Content-Disposition: inline; filename=ASCIIMathML_with_modified_escapes.js
Content-Type: application/x-javascript; name=ASCIIMathML_with_modified_escapes.js
Content-Location: http://localhost:8000/012-weaver.MOLLY/DVLP_SPLIT/tmp-tests/anton_nazarov.at.lj/ASCIIMathML_with_modified_escapes.js
Content-Transfer-Encoding: Base64

LyoKQVNDSUlNYXRoTUwuanMKPT09PT09PT09PT09PT0KVGhpcyBmaWxlIGNvbnRh
aW5zIEphdmFTY3JpcHQgZnVuY3Rpb25zIHRvIGNvbnZlcnQgQVNDSUkgbWF0aCBu
b3RhdGlvbgphbmQgTGFUZVggdG8gUHJlc2VudGF0aW9uIE1hdGhNTC4gU2ltcGxl
IGdyYXBoaWNzIGNvbW1hbmRzIGFyZSBhbHNvCnRyYW5zbGF0ZWQgdG8gU1ZHIGlt
YWdlcy4gVGhlIGNvbnZlcnNpb24gaXMgZG9uZSB3aGlsZSB0aGUgKFgpSFRNTCAK
cGFnZSBsb2FkcywgYW5kIHNob3VsZCB3b3JrIHdpdGggRmlyZWZveC9Nb3ppbGxh
L05ldHNjYXBlIDcrIGFuZCBJbnRlcm5ldCAKRXhwbG9yZXIgNi83ICsgTWF0aFBs
YXllciAoaHR0cDovL3d3dy5kZXNzY2kuY29tL2VuL3Byb2R1Y3RzL21hdGhwbGF5
ZXIvKSArCkFkb2JlIFNWR3ZpZXcgMy4wMyAoaHR0cDovL3d3dy5hZG9iZS5jb20v
c3ZnL3ZpZXdlci9pbnN0YWxsLykuCgpKdXN0IGFkZCB0aGUgbmV4dCBsaW5lIHRv
IHlvdXIgKFgpSFRNTCBwYWdlIHdpdGggdGhpcyBmaWxlIGluIHRoZSBzYW1lIGZv
bGRlcjoKCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9IkFTQ0lJ
TWF0aE1MLmpzIj48L3NjcmlwdD4KCih1c2luZyB0aGUgZ3JhcGhpY3MgaW4gSUUg
YWxzbyByZXF1aXJlcyB0aGUgZmlsZSAiZC5zdmciIGluIHRoZSBzYW1lIGZvbGRl
cikuClRoaXMgaXMgYSBjb252ZW5pZW50IGFuZCBpbmV4cGVuc2l2ZSBzb2x1dGlv
biBmb3IgYXV0aG9yaW5nIE1hdGhNTCBhbmQgU1ZHLgoKVmVyc2lvbiAyLjAuMSBT
ZXB0IDI3LCAyMDA3LCAoYykgUGV0ZXIgSmlwc2VuIGh0dHA6Ly93d3cuY2hhcG1h
bi5lZHUvfmppcHNlbgpUaGlzIHZlcnNpb24gZXh0ZW5kcyBBU0NJSU1hdGhNTC5q
cyB3aXRoIExhVGVYTWF0aE1MLmpzIGFuZCBBU0NJSXN2Zy5qcy4KTGF0ZXN0IHZl
cnNpb24gYXQgaHR0cDovL3d3dy5jaGFwbWFuLmVkdS9+amlwc2VuL21hdGhtbC9B
U0NJSU1hdGhNTC5qcwpJZiB5b3UgdXNlIGl0IG9uIGEgd2VicGFnZSwgcGxlYXNl
IHNlbmQgdGhlIFVSTCB0byBqaXBzZW5AY2hhcG1hbi5lZHUKClRoZSBMYVRlWE1h
dGhNTCBtb2RpZmljYXRpb25zIHdlcmUgbWFkZSBieSBEb3VnbGFzIFdvb2RhbGws
IEp1bmUgMjAwNi4KKGZvciBkZXRhaWxzIHNlZSBoZWFkZXIgb24gdGhlIExhVGVY
TWF0aE1MIHBhcnQgaW4gbWlkZGxlIG9mIGZpbGUpCgpUaGlzIHByb2dyYW0gaXMg
ZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1v
ZGlmeQppdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJh
bCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKdGhlIEZyZWUgU29mdHdh
cmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNl
LCBvciAoYXQKeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgoKVGhpcyBw
cm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBi
ZSB1c2VmdWwsIGJ1dCBXSVRIT1VUIApBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZl
biB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklU
TkVTUyAKRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiBTZWUgdGhlIEdOVSBMZXNz
ZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSAKKGF0IGh0dHA6Ly93d3cuZ251Lm9y
Zy9saWNlbmNlcy9sZ3BsLmh0bWwpIGZvciBtb3JlIGRldGFpbHMuCiovCgoKLyog
IENIQU5HRVMgRk9SIE1PTExZIC0gdmVkbWVkCiAqCiAqICAxLiBJIHR1cm5lZCBv
biAicHJlc2VydmUgJCIgb3B0aW9uIC0gbWF5IGJlIGJhZCBmb3IgTGFUZVggdGhv
dWdoIAogKiAgCiAqICAyLiBUaGUgTWF0aE1MIEFTQ0lJIGNvZGluZyBzdHJpbmdz
IGNhbiBiZSB0dXJuZWQgb24gaW4gMiB3YXlzOgogKgktLSBpbnNpZGUgImFtYXRo
IC4uLiBlbmRhbWF0aCIgdGFncyAobm8gYnJhY2tldHMpCiAqCS0tIG9yIGZvciBz
dHJpbmdzIGluIGJhY2t0aWNrcwogKgogKiAgQXMgcHJvZ3JhbW1pbmcgbGFuZ3Vh
Z2VzIHVzZSBiYWNrdGlja3MgaW4gYWJ1bmRhbmNlLCBJIAogKiAgX19zdWJzdGl0
dXRlZF9fIGluIHRoZSB3aG9sZSBzY3JpcHQgd2l0aCBhIHJlZ2V4IGFsbCAKICog
IHNpbmdsZSBiYWNrdGlja3MgaW50byBET0JMRSBCQUNLVElDS1MuCiAqCiAqIFRo
ZSBhdXRob3JzIG9mIHRoZSBzY3JpcHQgaGFyZGNvZGVkIGJhY2t0aWNrcyBpbiB2
ZXJ5IG11Y2gsCiAqIGFuZCBtZWNoYW5pY2FsbHkgZG91YmxpbmcgdGhlbSBzZWVt
cyBub3QgdG8gYnJlYWsgdGhpbmcKICoKICogVGhpcyAiZG91YmxlLWJhY2t0aWNr
IiBzZWVtcyBzYWZlciBmb3IgcmVhbC1saWZlIGFwcGxpY2F0aW9ucy4KICogV2Vs
bCwgZm9yIG5vdyBhdCBsZWFzdC4gTmVlZCB0byBjaGVjay90ZXN0L2tlZXAgaW4g
bWluZCB0aGVzZQogKiBoYXJkY29kZWQgZGVjaXNpb25zIG5vdCB0byBnZXQgYmVm
dWRkbGVkIGxhdGVyCiAqCiAqIEl0IHNlZW1zIHByZXR0eSBkYW1uIGhhcmQgdG8g
ZmluZCBnb29kIGVzY2FwZXMgd2hpY2ggaGF2ZSBub3QKICogeWV0IGJlZW4gdXNl
ZCBvbmUgd2F5IG9yIGFub3RoZXIgaW4gdGVoIHR5cGVzIG9mIGxpbmUgbm9pc2UK
ICogd2Uga2VlcCBmb3IgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzLgogKgogKi8KCgoK
CgoKCnZhciBtYXRoY29sb3IgPSAiYmx1ZSI7ICAgICAgICAvLyBjaGFuZ2UgaXQg
dG8gIiIgKHRvIGluaGVyaXQpIG9yIGFub3RoZXIgY29sb3IKdmFyIG1hdGhmb250
c2l6ZSA9ICIxZW0iOyAgICAgIC8vIGNoYW5nZSB0byBlLmcuIDEuMmVtIGZvciBs
YXJnZXIgbWF0aAp2YXIgbWF0aGZvbnRmYW1pbHkgPSAic2VyaWYiOyAgLy8gY2hh
bmdlIHRvICIiIHRvIGluaGVyaXQgKHdvcmtzIGluIElFKSAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIC8vIG9yIGFub3RoZXIgZmFtaWx5IChlLmcuICJh
cmlhbCIpCnZhciBhdXRvbWF0aHJlY29nbml6ZSA9IGZhbHNlOyAvLyB3cml0aW5n
ICJhbWF0aCIgb24gcGFnZSBtYWtlcyB0aGlzIHRydWUKdmFyIGNoZWNrRm9yTWF0
aE1MID0gdHJ1ZTsgICAgIC8vIGNoZWNrIGlmIGJyb3dzZXIgY2FuIGRpc3BsYXkg
TWF0aE1MCgovLyB2YXIgbm90aWZ5SWZOb01hdGhNTCA9IHRydWU7ICAgLy8gZGlz
cGxheSBub3RlIGF0IHRvcCBpZiBubyBNYXRoTUwgY2FwYWJpbGl0eQp2YXIgbm90
aWZ5SWZOb01hdGhNTCA9IGZhbHNlOyAgIC8vIGRpc3BsYXkgbm90ZSBhdCB0b3Ag
aWYgbm8gTWF0aE1MIGNhcGFiaWxpdHkKCnZhciBhbGVydElmTm9NYXRoTUwgPSBm
YWxzZTsgICAvLyBzaG93IGFsZXJ0IGJveCBpZiBubyBNYXRoTUwgY2FwYWJpbGl0
eQp2YXIgdHJhbnNsYXRlT25Mb2FkID0gdHJ1ZTsgICAgLy8gc2V0IHRvIGZhbHNl
IHRvIGRvIGNhbGwgdHJhbnNsYXRvcnMgZnJvbSBqcyAKCi8vIHZhciB0cmFuc2xh
dGVMYVRlWCA9IHRydWU7ICAgICAvLyBmYWxzZSB0byBwcmVzZXJ2ZSAkLi4kLCAk
JC4uJCQKdmFyIHRyYW5zbGF0ZUxhVGVYID0gZmFsc2U7ICAgICAvLyBmYWxzZSB0
byBwcmVzZXJ2ZSAkLi4kLCAkJC4uJCQKCnZhciB0cmFuc2xhdGVMYVRlWGZvcm1h
dHRpbmcgPSB0cnVlOyAvLyBmYWxzZSB0byBwcmVzZXJ2ZSBcZW1waCxcYmVnaW57
fSxcZW5ke30KCi8vIHZhciB0cmFuc2xhdGVBU0NJSU1hdGggPSB0cnVlOyAvLyBm
YWxzZSB0byBwcmVzZXJ2ZSBgYC4uYGAKdmFyIHRyYW5zbGF0ZUFTQ0lJTWF0aCA9
IHRydWU7IC8vIGZhbHNlIHRvIHByZXNlcnZlIGBgLi5gYAoKdmFyIHRyYW5zbGF0
ZUFTQ0lJc3ZnID0gdHJ1ZTsgIC8vIGZhbHNlIHRvIHByZXNlcnZlIGFncmFwaC4u
LCBcYmVnaW57Z3JhcGh9Li4KdmFyIGF2b2lkaW5uZXJIVE1MID0gZmFsc2U7ICAg
Ly8gc2V0IHRydWUgaWYgYXNzaWduaW5nIHRvIGlubmVySFRNTCBnaXZlcyBlcnJv
cgp2YXIgZGlzcGxheXN0eWxlID0gdHJ1ZTsgICAgICAvLyBwdXRzIGxpbWl0cyBh
Ym92ZSBhbmQgYmVsb3cgbGFyZ2Ugb3BlcmF0b3JzCnZhciBzaG93YXNjaWlmb3Jt
dWxhb25ob3ZlciA9IHRydWU7IC8vIGhlbHBzIHN0dWRlbnRzIGxlYXJuIEFTQ0lJ
TWF0aAp2YXIgZGVjaW1hbHNpZ24gPSAiLiI7ICAgICAgICAvLyBjaGFuZ2UgdG8g
IiwiIGlmIHlvdSBsaWtlLCBiZXdhcmUgb2YgYGAoMSwyKWBgIQoKLy8gdmFyIEFN
ZGVsaW1pdGVyMSA9ICJgYCIsIEFNZXNjYXBlMSA9ICJcXFxcYGAiOyAvLyBjYW4g
dXNlIG90aGVyIGNoYXJhY3RlcnMKdmFyIEFNZGVsaW1pdGVyMSA9ICJgYCIsIEFN
ZXNjYXBlMSA9ICJcXFxcYGAiOyAvLyBjYW4gdXNlIG90aGVyIGNoYXJhY3RlcnMK
CnZhciBBTWRvY3VtZW50SWQgPSAid2lraXRleHQiIC8vIFBtV2lraSBlbGVtZW50
IGNvbnRhaW5pbmcgbWF0aCAoZGVmYXVsdD1ib2R5KQp2YXIgY2hlY2tmb3Jwcm9j
ZXNzYXNjaWltYXRoaW5tb29kbGUgPSBmYWxzZTsgLy8gdHJ1ZSBmb3Igc3lzdGVt
cyBsaWtlIE1vb2RsZQp2YXIgZHN2Z2xvY2F0aW9uID0gIiI7IC8vIHBhdGggdG8g
ZC5zdmcgKGJsYW5rIGlmIHNhbWUgYXMgQVNDSUlNYXRoTUwuanMgbG9jKQoKdmFy
IGlzSUUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlM9PW51bGw7CgppZiAoZG9j
dW1lbnQuZ2V0RWxlbWVudEJ5SWQ9PW51bGwpIAogIGFsZXJ0KCJUaGlzIHdlYnBh
Z2UgcmVxdWlyZXMgYSByZWNlbnQgYnJvd3NlciBzdWNoIGFzXApcbk1vemlsbGEv
TmV0c2NhcGUgNysgb3IgSW50ZXJuZXQgRXhwbG9yZXIgNitNYXRoUGxheWVyIikK
Ci8vIGFsbCBmdXJ0aGVyIEFTQ0lJTWF0aE1MIGdsb2JhbCB2YXJpYWJsZXMgc3Rh
cnQgd2l0aCAiQU0iCgpmdW5jdGlvbiBBTWNyZWF0ZUVsZW1lbnRYSFRNTCh0KSB7
CiAgaWYgKGlzSUUpIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHQpOwog
IGVsc2UgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3
dy53My5vcmcvMTk5OS94aHRtbCIsdCk7Cn0KCmZ1bmN0aW9uIEFNbm9NYXRoTUxO
b3RlKCkgewogIHZhciBuZCA9IEFNY3JlYXRlRWxlbWVudFhIVE1MKCJoMyIpOwog
IG5kLnNldEF0dHJpYnV0ZSgiYWxpZ24iLCJjZW50ZXIiKQogIG5kLmFwcGVuZENo
aWxkKEFNY3JlYXRlRWxlbWVudFhIVE1MKCJwIikpOwogIG5kLmFwcGVuZENoaWxk
KGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJUbyB2aWV3IHRoZSAiKSk7CiAgdmFy
IGFuID0gQU1jcmVhdGVFbGVtZW50WEhUTUwoImEiKTsKICBhbi5hcHBlbmRDaGls
ZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiQVNDSUlNYXRoTUwiKSk7CiAgYW4u
c2V0QXR0cmlidXRlKCJocmVmIiwiaHR0cDovL3d3dy5jaGFwbWFuLmVkdS9+amlw
c2VuL2FzY2lpbWF0aC5odG1sIik7CiAgbmQuYXBwZW5kQ2hpbGQoYW4pOwogIG5k
LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIgbm90YXRpb24g
dXNlIEludGVybmV0IEV4cGxvcmVyIDYrIikpOyAgCiAgYW4gPSBBTWNyZWF0ZUVs
ZW1lbnRYSFRNTCgiYSIpOwogIGFuLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0
ZVRleHROb2RlKCJNYXRoUGxheWVyIikpOwogIGFuLnNldEF0dHJpYnV0ZSgiaHJl
ZiIsImh0dHA6Ly93d3cuZGVzc2NpLmNvbS9lbi9wcm9kdWN0cy9tYXRocGxheWVy
L2Rvd25sb2FkLmh0bSIpOwogIG5kLmFwcGVuZENoaWxkKGFuKTsKICBuZC5hcHBl
bmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIG9yIE5ldHNjYXBlL01v
emlsbGEvRmlyZWZveCIpKTsKICBuZC5hcHBlbmRDaGlsZChBTWNyZWF0ZUVsZW1l
bnRYSFRNTCgicCIpKTsKICByZXR1cm4gbmQ7Cn0KCmZ1bmN0aW9uIEFNaXNNYXRo
TUxhdmFpbGFibGUoKSB7CiAgaWYgKG5hdmlnYXRvci5hcHBOYW1lLnNsaWNlKDAs
OCk9PSJOZXRzY2FwZSIpIAogICAgaWYgKG5hdmlnYXRvci5hcHBWZXJzaW9uLnNs
aWNlKDAsMSk+PSI1IikgcmV0dXJuIG51bGw7CiAgICBlbHNlIHJldHVybiBBTW5v
TWF0aE1MTm90ZSgpOwogIGVsc2UgaWYgKG5hdmlnYXRvci5hcHBOYW1lLnNsaWNl
KDAsOSk9PSJNaWNyb3NvZnQiKQogICAgdHJ5IHsKICAgICAgICB2YXIgQWN0aXZl
WCA9IG5ldyBBY3RpdmVYT2JqZWN0KCJNYXRoUGxheWVyLkZhY3RvcnkuMSIpOwog
ICAgICAgIHJldHVybiBudWxsOwogICAgfSBjYXRjaCAoZSkgewogICAgICAgIHJl
dHVybiBBTW5vTWF0aE1MTm90ZSgpOwogICAgfQogIGVsc2UgcmV0dXJuIEFNbm9N
YXRoTUxOb3RlKCk7Cn0KCi8vIGNoYXJhY3RlciBsaXN0cyBmb3IgTW96aWxsYS9O
ZXRzY2FwZSBmb250cwp2YXIgQU1jYWwgPSBbMHhFRjM1LDB4MjEyQywweEVGMzYs
MHhFRjM3LDB4MjEzMCwweDIxMzEsMHhFRjM4LDB4MjEwQiwweDIxMTAsMHhFRjM5
LDB4RUYzQSwweDIxMTIsMHgyMTMzLDB4RUYzQiwweEVGM0MsMHhFRjNELDB4RUYz
RSwweDIxMUIsMHhFRjNGLDB4RUY0MCwweEVGNDEsMHhFRjQyLDB4RUY0MywweEVG
NDQsMHhFRjQ1LDB4RUY0Nl07CnZhciBBTWZyayA9IFsweEVGNUQsMHhFRjVFLDB4
MjEyRCwweEVGNUYsMHhFRjYwLDB4RUY2MSwweEVGNjIsMHgyMTBDLDB4MjExMSww
eEVGNjMsMHhFRjY0LDB4RUY2NSwweEVGNjYsMHhFRjY3LDB4RUY2OCwweEVGNjks
MHhFRjZBLDB4MjExQywweEVGNkIsMHhFRjZDLDB4RUY2RCwweEVGNkUsMHhFRjZG
LDB4RUY3MCwweEVGNzEsMHgyMTI4XTsKdmFyIEFNYmJiID0gWzB4RUY4QywweEVG
OEQsMHgyMTAyLDB4RUY4RSwweEVGOEYsMHhFRjkwLDB4RUY5MSwweDIxMEQsMHhF
RjkyLDB4RUY5MywweEVGOTQsMHhFRjk1LDB4RUY5NiwweDIxMTUsMHhFRjk3LDB4
MjExOSwweDIxMUEsMHgyMTFELDB4RUY5OCwweEVGOTksMHhFRjlBLDB4RUY5Qiww
eEVGOUMsMHhFRjlELDB4RUY5RSwweDIxMjRdOwoKdmFyIENPTlNUID0gMCwgVU5B
UlkgPSAxLCBCSU5BUlkgPSAyLCBJTkZJWCA9IDMsIExFRlRCUkFDS0VUID0gNCwg
CiAgICBSSUdIVEJSQUNLRVQgPSA1LCBTUEFDRSA9IDYsIFVOREVST1ZFUiA9IDcs
IERFRklOSVRJT04gPSA4LAogICAgTEVGVFJJR0hUID0gOSwgVEVYVCA9IDEwOyAv
LyB0b2tlbiB0eXBlcwoKdmFyIEFNc3FydCA9IHtpbnB1dDoic3FydCIsIHRhZzoi
bXNxcnQiLCBvdXRwdXQ6InNxcnQiLCB0ZXg6bnVsbCwgdHR5cGU6VU5BUll9LAog
IEFNcm9vdCAgPSB7aW5wdXQ6InJvb3QiLCB0YWc6Im1yb290Iiwgb3V0cHV0OiJy
b290IiwgdGV4Om51bGwsIHR0eXBlOkJJTkFSWX0sCiAgQU1mcmFjICA9IHtpbnB1
dDoiZnJhYyIsIHRhZzoibWZyYWMiLCBvdXRwdXQ6Ii8iLCAgICB0ZXg6bnVsbCwg
dHR5cGU6QklOQVJZfSwKICBBTWRpdiAgID0ge2lucHV0OiIvIiwgICAgdGFnOiJt
ZnJhYyIsIG91dHB1dDoiLyIsICAgIHRleDpudWxsLCB0dHlwZTpJTkZJWH0sCiAg
QU1vdmVyICA9IHtpbnB1dDoic3RhY2tyZWwiLCB0YWc6Im1vdmVyIiwgb3V0cHV0
OiJzdGFja3JlbCIsIHRleDpudWxsLCB0dHlwZTpCSU5BUll9LAogIEFNc3ViICAg
PSB7aW5wdXQ6Il8iLCAgICB0YWc6Im1zdWIiLCAgb3V0cHV0OiJfIiwgICAgdGV4
Om51bGwsIHR0eXBlOklORklYfSwKICBBTXN1cCAgID0ge2lucHV0OiJeIiwgICAg
dGFnOiJtc3VwIiwgIG91dHB1dDoiXiIsICAgIHRleDpudWxsLCB0dHlwZTpJTkZJ
WH0sCiAgQU10ZXh0ICA9IHtpbnB1dDoidGV4dCIsIHRhZzoibXRleHQiLCBvdXRw
dXQ6InRleHQiLCB0ZXg6bnVsbCwgdHR5cGU6VEVYVH0sCiAgQU1tYm94ICA9IHtp
bnB1dDoibWJveCIsIHRhZzoibXRleHQiLCBvdXRwdXQ6Im1ib3giLCB0ZXg6bnVs
bCwgdHR5cGU6VEVYVH0sCiAgQU1xdW90ZSA9IHtpbnB1dDoiXCIiLCAgIHRhZzoi
bXRleHQiLCBvdXRwdXQ6Im1ib3giLCB0ZXg6bnVsbCwgdHR5cGU6VEVYVH07Cgp2
YXIgQU1zeW1ib2xzID0gWwovL3NvbWUgZ3JlZWsgc3ltYm9scwp7aW5wdXQ6ImFs
cGhhIiwgIHRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNCMSIsIHRleDpudWxsLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiYmV0YSIsICAgdGFnOiJtaSIsIG91dHB1dDoiXHUw
M0IyIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJjaGkiLCAgICB0
YWc6Im1pIiwgb3V0cHV0OiJcdTAzQzciLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9
LAp7aW5wdXQ6ImRlbHRhIiwgIHRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNCNCIsIHRl
eDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiRGVsdGEiLCAgdGFnOiJtbyIs
IG91dHB1dDoiXHUwMzk0IiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0
OiJlcHNpIiwgICB0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQjUiLCB0ZXg6ImVwc2ls
b24iLCB0dHlwZTpDT05TVH0sCntpbnB1dDoidmFyZXBzaWxvbiIsIHRhZzoibWki
LCBvdXRwdXQ6Ilx1MDI1QiIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiZXRhIiwgICAgdGFnOiJtaSIsIG91dHB1dDoiXHUwM0I3IiwgdGV4Om51bGws
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiJnYW1tYSIsICB0YWc6Im1pIiwgb3V0cHV0
OiJcdTAzQjMiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IkdhbW1h
IiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MDM5MyIsIHRleDpudWxsLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoiaW90YSIsICAgdGFnOiJtaSIsIG91dHB1dDoiXHUwM0I5
IiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJrYXBwYSIsICB0YWc6
Im1pIiwgb3V0cHV0OiJcdTAzQkEiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6ImxhbWJkYSIsIHRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNCQiIsIHRleDpu
dWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiTGFtYmRhIiwgdGFnOiJtbyIsIG91
dHB1dDoiXHUwMzlCIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJt
dSIsICAgICB0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQkMiLCB0ZXg6bnVsbCwgdHR5
cGU6Q09OU1R9LAp7aW5wdXQ6Im51IiwgICAgIHRhZzoibWkiLCBvdXRwdXQ6Ilx1
MDNCRCIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoib21lZ2EiLCAg
dGFnOiJtaSIsIG91dHB1dDoiXHUwM0M5IiwgdGV4Om51bGwsIHR0eXBlOkNPTlNU
fSwKe2lucHV0OiJPbWVnYSIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTAzQTkiLCB0
ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InBoaSIsICAgIHRhZzoibWki
LCBvdXRwdXQ6Ilx1MDNDNiIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoidmFycGhpIiwgdGFnOiJtaSIsIG91dHB1dDoiXHUwM0Q1IiwgdGV4Om51bGws
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiJQaGkiLCAgICB0YWc6Im1vIiwgb3V0cHV0
OiJcdTAzQTYiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InBpIiwg
ICAgIHRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNDMCIsIHRleDpudWxsLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoiUGkiLCAgICAgdGFnOiJtbyIsIG91dHB1dDoiXHUwM0Ew
IiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJwc2kiLCAgICB0YWc6
Im1pIiwgb3V0cHV0OiJcdTAzQzgiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlBzaSIsICAgIHRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNBOCIsIHRleDpu
dWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoicmhvIiwgICAgdGFnOiJtaSIsIG91
dHB1dDoiXHUwM0MxIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJz
aWdtYSIsICB0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQzMiLCB0ZXg6bnVsbCwgdHR5
cGU6Q09OU1R9LAp7aW5wdXQ6IlNpZ21hIiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1
MDNBMyIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoidGF1IiwgICAg
dGFnOiJtaSIsIG91dHB1dDoiXHUwM0M0IiwgdGV4Om51bGwsIHR0eXBlOkNPTlNU
fSwKe2lucHV0OiJ0aGV0YSIsICB0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQjgiLCB0
ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InZhcnRoZXRhIiwgdGFnOiJt
aSIsIG91dHB1dDoiXHUwM0QxIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lu
cHV0OiJUaGV0YSIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTAzOTgiLCB0ZXg6bnVs
bCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InVwc2lsb24iLCB0YWc6Im1pIiwgb3V0
cHV0OiJcdTAzQzUiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Inhp
IiwgICAgIHRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNCRSIsIHRleDpudWxsLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiWGkiLCAgICAgdGFnOiJtbyIsIG91dHB1dDoiXHUw
MzlFIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJ6ZXRhIiwgICB0
YWc6Im1pIiwgb3V0cHV0OiJcdTAzQjYiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9
LAoKLy9iaW5hcnkgb3BlcmF0aW9uIHN5bWJvbHMKLy97aW5wdXQ6Ii0iLCAgdGFn
OiJtbyIsIG91dHB1dDoiXHUwMDk2IiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiIqIiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJDNSIsIHRleDoiY2Rv
dCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiIqKiIsIHRhZzoibW8iLCBvdXRwdXQ6
Ilx1MjJDNiIsIHRleDoic3RhciIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiIvLyIs
IHRhZzoibW8iLCBvdXRwdXQ6Ii8iLCAgICAgIHRleDpudWxsLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiXFxcXCIsIHRhZzoibW8iLCBvdXRwdXQ6IlxcIiwgICB0ZXg6
ImJhY2tzbGFzaCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJzZXRtaW51cyIsIHRh
ZzoibW8iLCBvdXRwdXQ6IlxcIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lu
cHV0OiJ4eCIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MDBENyIsIHRleDoidGltZXMi
LCB0dHlwZTpDT05TVH0sCntpbnB1dDoiLToiLCB0YWc6Im1vIiwgb3V0cHV0OiJc
dTAwRjciLCB0ZXg6ImRpdmlkZSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJAIiwg
IHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIxOCIsIHRleDoiY2lyYyIsIHR0eXBlOkNP
TlNUfSwKe2lucHV0OiJvKyIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjI5NSIsIHRl
eDoib3BsdXMiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoib3giLCB0YWc6Im1vIiwg
b3V0cHV0OiJcdTIyOTciLCB0ZXg6Im90aW1lcyIsIHR0eXBlOkNPTlNUfSwKe2lu
cHV0OiJvLiIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjI5OSIsIHRleDoib2RvdCIs
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiJzdW0iLCB0YWc6Im1vIiwgb3V0cHV0OiJc
dTIyMTEiLCB0ZXg6bnVsbCwgdHR5cGU6VU5ERVJPVkVSfSwKe2lucHV0OiJwcm9k
IiwgdGFnOiJtbyIsIG91dHB1dDoiXHUyMjBGIiwgdGV4Om51bGwsIHR0eXBlOlVO
REVST1ZFUn0sCntpbnB1dDoiXl4iLCAgdGFnOiJtbyIsIG91dHB1dDoiXHUyMjI3
IiwgdGV4OiJ3ZWRnZSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJeXl4iLCB0YWc6
Im1vIiwgb3V0cHV0OiJcdTIyQzAiLCB0ZXg6ImJpZ3dlZGdlIiwgdHR5cGU6VU5E
RVJPVkVSfSwKe2lucHV0OiJ2diIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMjgi
LCB0ZXg6InZlZSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJ2dnYiLCB0YWc6Im1v
Iiwgb3V0cHV0OiJcdTIyQzEiLCB0ZXg6ImJpZ3ZlZSIsIHR0eXBlOlVOREVST1ZF
Un0sCntpbnB1dDoibm4iLCAgdGFnOiJtbyIsIG91dHB1dDoiXHUyMjI5IiwgdGV4
OiJjYXAiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoibm5uIiwgdGFnOiJtbyIsIG91
dHB1dDoiXHUyMkMyIiwgdGV4OiJiaWdjYXAiLCB0dHlwZTpVTkRFUk9WRVJ9LAp7
aW5wdXQ6InV1IiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIyQSIsIHRleDoiY3Vw
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InV1dSIsIHRhZzoibW8iLCBvdXRwdXQ6
Ilx1MjJDMyIsIHRleDoiYmlnY3VwIiwgdHR5cGU6VU5ERVJPVkVSfSwKCi8vYmlu
YXJ5IHJlbGF0aW9uIHN5bWJvbHMKe2lucHV0OiIhPSIsICB0YWc6Im1vIiwgb3V0
cHV0OiJcdTIyNjAiLCB0ZXg6Im5lIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ijo9
IiwgIHRhZzoibW8iLCBvdXRwdXQ6Ijo9IiwgICAgIHRleDpudWxsLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoibHQiLCAgdGFnOiJtbyIsIG91dHB1dDoiPCIsICAgICAg
dGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiI8PSIsICB0YWc6Im1vIiwg
b3V0cHV0OiJcdTIyNjQiLCB0ZXg6ImxlIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
Imx0PSIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjI2NCIsIHRleDoibGVxIiwgdHR5
cGU6Q09OU1R9LAp7aW5wdXQ6Ij49IiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjI2
NSIsIHRleDoiZ2UiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiZ2VxIiwgdGFnOiJt
byIsIG91dHB1dDoiXHUyMjY1IiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lu
cHV0OiItPCIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyN0EiLCB0ZXg6InByZWMi
LCB0dHlwZTpDT05TVH0sCntpbnB1dDoiLWx0IiwgdGFnOiJtbyIsIG91dHB1dDoi
XHUyMjdBIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiI+LSIsICB0
YWc6Im1vIiwgb3V0cHV0OiJcdTIyN0IiLCB0ZXg6InN1Y2MiLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiLTw9IiwgdGFnOiJtbyIsIG91dHB1dDoiXHUyQUFGIiwgdGV4
OiJwcmVjZXEiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiPi09IiwgdGFnOiJtbyIs
IG91dHB1dDoiXHUyQUIwIiwgdGV4OiJzdWNjZXEiLCB0dHlwZTpDT05TVH0sCntp
bnB1dDoiaW4iLCAgdGFnOiJtbyIsIG91dHB1dDoiXHUyMjA4IiwgdGV4Om51bGws
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiIhaW4iLCB0YWc6Im1vIiwgb3V0cHV0OiJc
dTIyMDkiLCB0ZXg6Im5vdGluIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InN1YiIs
IHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjI4MiIsIHRleDoic3Vic2V0IiwgdHR5cGU6
Q09OU1R9LAp7aW5wdXQ6InN1cCIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjI4MyIs
IHRleDoic3Vwc2V0IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InN1YmUiLCB0YWc6
Im1vIiwgb3V0cHV0OiJcdTIyODYiLCB0ZXg6InN1YnNldGVxIiwgdHR5cGU6Q09O
U1R9LAp7aW5wdXQ6InN1cGUiLCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyODciLCB0
ZXg6InN1cHNldGVxIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ii09IiwgIHRhZzoi
bW8iLCBvdXRwdXQ6Ilx1MjI2MSIsIHRleDoiZXF1aXYiLCB0dHlwZTpDT05TVH0s
CntpbnB1dDoifj0iLCAgdGFnOiJtbyIsIG91dHB1dDoiXHUyMjQ1IiwgdGV4OiJj
b25nIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6In5+IiwgIHRhZzoibW8iLCBvdXRw
dXQ6Ilx1MjI0OCIsIHRleDoiYXBwcm94IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
InByb3AiLCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMUQiLCB0ZXg6InByb3B0byIs
IHR0eXBlOkNPTlNUfSwKCi8vbG9naWNhbCBzeW1ib2xzCntpbnB1dDoiYW5kIiwg
dGFnOiJtdGV4dCIsIG91dHB1dDoiYW5kIiwgdGV4Om51bGwsIHR0eXBlOlNQQUNF
fSwKe2lucHV0OiJvciIsICB0YWc6Im10ZXh0Iiwgb3V0cHV0OiJvciIsICB0ZXg6
bnVsbCwgdHR5cGU6U1BBQ0V9LAp7aW5wdXQ6Im5vdCIsIHRhZzoibW8iLCBvdXRw
dXQ6Ilx1MDBBQyIsIHRleDoibmVnIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ij0+
IiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjFEMiIsIHRleDoiaW1wbGllcyIsIHR0
eXBlOkNPTlNUfSwKe2lucHV0OiJpZiIsICB0YWc6Im1vIiwgb3V0cHV0OiJpZiIs
ICAgICB0ZXg6bnVsbCwgdHR5cGU6U1BBQ0V9LAp7aW5wdXQ6Ijw9PiIsIHRhZzoi
bW8iLCBvdXRwdXQ6Ilx1MjFENCIsIHRleDoiaWZmIiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IkFBIiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIwMCIsIHRleDoiZm9y
YWxsIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IkVFIiwgIHRhZzoibW8iLCBvdXRw
dXQ6Ilx1MjIwMyIsIHRleDoiZXhpc3RzIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
Il98XyIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJBNSIsIHRleDoiYm90IiwgdHR5
cGU6Q09OU1R9LAp7aW5wdXQ6IlRUIiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJB
NCIsIHRleDoidG9wIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InwtLSIsICB0YWc6
Im1vIiwgb3V0cHV0OiJcdTIyQTIiLCB0ZXg6InZkYXNoIiwgdHR5cGU6Q09OU1R9
LAp7aW5wdXQ6Inw9PSIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyQTgiLCB0ZXg6
Im1vZGVscyIsIHR0eXBlOkNPTlNUfSwKCi8vZ3JvdXBpbmcgYnJhY2tldHMKe2lu
cHV0OiIoIiwgdGFnOiJtbyIsIG91dHB1dDoiKCIsIHRleDpudWxsLCB0dHlwZTpM
RUZUQlJBQ0tFVH0sCntpbnB1dDoiKSIsIHRhZzoibW8iLCBvdXRwdXQ6IikiLCB0
ZXg6bnVsbCwgdHR5cGU6UklHSFRCUkFDS0VUfSwKe2lucHV0OiJbIiwgdGFnOiJt
byIsIG91dHB1dDoiWyIsIHRleDpudWxsLCB0dHlwZTpMRUZUQlJBQ0tFVH0sCntp
bnB1dDoiXSIsIHRhZzoibW8iLCBvdXRwdXQ6Il0iLCB0ZXg6bnVsbCwgdHR5cGU6
UklHSFRCUkFDS0VUfSwKe2lucHV0OiJ7IiwgdGFnOiJtbyIsIG91dHB1dDoieyIs
IHRleDpudWxsLCB0dHlwZTpMRUZUQlJBQ0tFVH0sCntpbnB1dDoifSIsIHRhZzoi
bW8iLCBvdXRwdXQ6In0iLCB0ZXg6bnVsbCwgdHR5cGU6UklHSFRCUkFDS0VUfSwK
e2lucHV0OiJ8IiwgdGFnOiJtbyIsIG91dHB1dDoifCIsIHRleDpudWxsLCB0dHlw
ZTpMRUZUUklHSFR9LAovL3tpbnB1dDoifHwiLCB0YWc6Im1vIiwgb3V0cHV0OiJ8
fCIsIHRleDpudWxsLCB0dHlwZTpMRUZUUklHSFR9LAp7aW5wdXQ6Iig6IiwgdGFn
OiJtbyIsIG91dHB1dDoiXHUyMzI5IiwgdGV4OiJsYW5nbGUiLCB0dHlwZTpMRUZU
QlJBQ0tFVH0sCntpbnB1dDoiOikiLCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIzMkEi
LCB0ZXg6InJhbmdsZSIsIHR0eXBlOlJJR0hUQlJBQ0tFVH0sCntpbnB1dDoiPDwi
LCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIzMjkiLCB0ZXg6bnVsbCwgdHR5cGU6TEVG
VEJSQUNLRVR9LAp7aW5wdXQ6Ij4+IiwgdGFnOiJtbyIsIG91dHB1dDoiXHUyMzJB
IiwgdGV4Om51bGwsIHR0eXBlOlJJR0hUQlJBQ0tFVH0sCntpbnB1dDoiezoiLCB0
YWc6Im1vIiwgb3V0cHV0OiJ7OiIsIHRleDpudWxsLCB0dHlwZTpMRUZUQlJBQ0tF
VCwgaW52aXNpYmxlOnRydWV9LAp7aW5wdXQ6Ijp9IiwgdGFnOiJtbyIsIG91dHB1
dDoiOn0iLCB0ZXg6bnVsbCwgdHR5cGU6UklHSFRCUkFDS0VULCBpbnZpc2libGU6
dHJ1ZX0sCgovL21pc2NlbGxhbmVvdXMgc3ltYm9scwp7aW5wdXQ6ImludCIsICB0
YWc6Im1vIiwgb3V0cHV0OiJcdTIyMkIiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9
LAp7aW5wdXQ6ImR4IiwgICB0YWc6Im1pIiwgb3V0cHV0OiJ7OmQgeDp9IiwgdGV4
Om51bGwsIHR0eXBlOkRFRklOSVRJT059LAp7aW5wdXQ6ImR5IiwgICB0YWc6Im1p
Iiwgb3V0cHV0OiJ7OmQgeTp9IiwgdGV4Om51bGwsIHR0eXBlOkRFRklOSVRJT059
LAp7aW5wdXQ6ImR6IiwgICB0YWc6Im1pIiwgb3V0cHV0OiJ7OmQgejp9IiwgdGV4
Om51bGwsIHR0eXBlOkRFRklOSVRJT059LAp7aW5wdXQ6ImR0IiwgICB0YWc6Im1p
Iiwgb3V0cHV0OiJ7OmQgdDp9IiwgdGV4Om51bGwsIHR0eXBlOkRFRklOSVRJT059
LAp7aW5wdXQ6Im9pbnQiLCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMkUiLCB0ZXg6
bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6ImRlbCIsICB0YWc6Im1vIiwgb3V0
cHV0OiJcdTIyMDIiLCB0ZXg6InBhcnRpYWwiLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiZ3JhZCIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIwNyIsIHRleDoibmFibGEi
LCB0dHlwZTpDT05TVH0sCntpbnB1dDoiKy0iLCAgIHRhZzoibW8iLCBvdXRwdXQ6
Ilx1MDBCMSIsIHRleDoicG0iLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiTy8iLCAg
IHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIwNSIsIHRleDoiZW1wdHlzZXQiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoib28iLCAgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIx
RSIsIHRleDoiaW5mdHkiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiYWxlcGgiLCB0
YWc6Im1vIiwgb3V0cHV0OiJcdTIxMzUiLCB0ZXg6bnVsbCwgdHR5cGU6Q09OU1R9
LAp7aW5wdXQ6Ii4uLiIsICB0YWc6Im1vIiwgb3V0cHV0OiIuLi4iLCAgICB0ZXg6
Imxkb3RzIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IjouIiwgIHRhZzoibW8iLCBv
dXRwdXQ6Ilx1MjIzNCIsICB0ZXg6InRoZXJlZm9yZSIsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiIvXyIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMjAiLCAgdGV4OiJh
bmdsZSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXCAiLCAgdGFnOiJtbyIsIG91
dHB1dDoiXHUwMEEwIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJx
dWFkIiwgdGFnOiJtbyIsIG91dHB1dDoiXHUwMEEwXHUwMEEwIiwgdGV4Om51bGws
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiJxcXVhZCIsIHRhZzoibW8iLCBvdXRwdXQ6
Ilx1MDBBMFx1MDBBMFx1MDBBMFx1MDBBMCIsIHRleDpudWxsLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiY2RvdHMiLCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIyRUYiLCB0
ZXg6bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InZkb3RzIiwgdGFnOiJtbyIs
IG91dHB1dDoiXHUyMkVFIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0
OiJkZG90cyIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJGMSIsIHRleDpudWxsLCB0
dHlwZTpDT05TVH0sCntpbnB1dDoiZGlhbW9uZCIsIHRhZzoibW8iLCBvdXRwdXQ6
Ilx1MjJDNCIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoic3F1YXJl
IiwgdGFnOiJtbyIsIG91dHB1dDoiXHUyNUExIiwgdGV4Om51bGwsIHR0eXBlOkNP
TlNUfSwKe2lucHV0OiJ8X18iLCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIzMEEiLCAg
dGV4OiJsZmxvb3IiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiX198IiwgdGFnOiJt
byIsIG91dHB1dDoiXHUyMzBCIiwgIHRleDoicmZsb29yIiwgdHR5cGU6Q09OU1R9
LAp7aW5wdXQ6Inx+IiwgdGFnOiJtbyIsIG91dHB1dDoiXHUyMzA4IiwgIHRleDoi
bGNlaWxpbmciLCB0dHlwZTpDT05TVH0sCntpbnB1dDoifnwiLCB0YWc6Im1vIiwg
b3V0cHV0OiJcdTIzMDkiLCAgdGV4OiJyY2VpbGluZyIsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiJDQyIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTIxMDIiLCB0ZXg6bnVs
bCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ik5OIiwgIHRhZzoibW8iLCBvdXRwdXQ6
Ilx1MjExNSIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiUVEiLCAg
dGFnOiJtbyIsIG91dHB1dDoiXHUyMTFBIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNU
fSwKe2lucHV0OiJSUiIsICB0YWc6Im1vIiwgb3V0cHV0OiJcdTIxMUQiLCB0ZXg6
bnVsbCwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlpaIiwgIHRhZzoibW8iLCBvdXRw
dXQ6Ilx1MjEyNCIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiZiIs
ICAgdGFnOiJtaSIsIG91dHB1dDoiZiIsICAgICAgdGV4Om51bGwsIHR0eXBlOlVO
QVJZLCBmdW5jOnRydWV9LAp7aW5wdXQ6ImciLCAgIHRhZzoibWkiLCBvdXRwdXQ6
ImciLCAgICAgIHRleDpudWxsLCB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKCi8v
c3RhbmRhcmQgZnVuY3Rpb25zCntpbnB1dDoibGltIiwgIHRhZzoibW8iLCBvdXRw
dXQ6ImxpbSIsIHRleDpudWxsLCB0dHlwZTpVTkRFUk9WRVJ9LAp7aW5wdXQ6Ikxp
bSIsICB0YWc6Im1vIiwgb3V0cHV0OiJMaW0iLCB0ZXg6bnVsbCwgdHR5cGU6VU5E
RVJPVkVSfSwKe2lucHV0OiJzaW4iLCAgdGFnOiJtbyIsIG91dHB1dDoic2luIiwg
dGV4Om51bGwsIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5wdXQ6ImNvcyIs
ICB0YWc6Im1vIiwgb3V0cHV0OiJjb3MiLCB0ZXg6bnVsbCwgdHR5cGU6VU5BUlks
IGZ1bmM6dHJ1ZX0sCntpbnB1dDoidGFuIiwgIHRhZzoibW8iLCBvdXRwdXQ6InRh
biIsIHRleDpudWxsLCB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJz
aW5oIiwgdGFnOiJtbyIsIG91dHB1dDoic2luaCIsIHRleDpudWxsLCB0dHlwZTpV
TkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJjb3NoIiwgdGFnOiJtbyIsIG91dHB1
dDoiY29zaCIsIHRleDpudWxsLCB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lu
cHV0OiJ0YW5oIiwgdGFnOiJtbyIsIG91dHB1dDoidGFuaCIsIHRleDpudWxsLCB0
dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJjb3QiLCAgdGFnOiJtbyIs
IG91dHB1dDoiY290IiwgdGV4Om51bGwsIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9
LAp7aW5wdXQ6InNlYyIsICB0YWc6Im1vIiwgb3V0cHV0OiJzZWMiLCB0ZXg6bnVs
bCwgdHR5cGU6VU5BUlksIGZ1bmM6dHJ1ZX0sCntpbnB1dDoiY3NjIiwgIHRhZzoi
bW8iLCBvdXRwdXQ6ImNzYyIsIHRleDpudWxsLCB0dHlwZTpVTkFSWSwgZnVuYzp0
cnVlfSwKe2lucHV0OiJsb2ciLCAgdGFnOiJtbyIsIG91dHB1dDoibG9nIiwgdGV4
Om51bGwsIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5wdXQ6ImxuIiwgICB0
YWc6Im1vIiwgb3V0cHV0OiJsbiIsICB0ZXg6bnVsbCwgdHR5cGU6VU5BUlksIGZ1
bmM6dHJ1ZX0sCntpbnB1dDoiZGV0IiwgIHRhZzoibW8iLCBvdXRwdXQ6ImRldCIs
IHRleDpudWxsLCB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJkaW0i
LCAgdGFnOiJtbyIsIG91dHB1dDoiZGltIiwgdGV4Om51bGwsIHR0eXBlOkNPTlNU
fSwKe2lucHV0OiJtb2QiLCAgdGFnOiJtbyIsIG91dHB1dDoibW9kIiwgdGV4Om51
bGwsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJnY2QiLCAgdGFnOiJtbyIsIG91dHB1
dDoiZ2NkIiwgdGV4Om51bGwsIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5w
dXQ6ImxjbSIsICB0YWc6Im1vIiwgb3V0cHV0OiJsY20iLCB0ZXg6bnVsbCwgdHR5
cGU6VU5BUlksIGZ1bmM6dHJ1ZX0sCntpbnB1dDoibHViIiwgIHRhZzoibW8iLCBv
dXRwdXQ6Imx1YiIsIHRleDpudWxsLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiZ2xi
IiwgIHRhZzoibW8iLCBvdXRwdXQ6ImdsYiIsIHRleDpudWxsLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoibWluIiwgIHRhZzoibW8iLCBvdXRwdXQ6Im1pbiIsIHRleDpu
dWxsLCB0dHlwZTpVTkRFUk9WRVJ9LAp7aW5wdXQ6Im1heCIsICB0YWc6Im1vIiwg
b3V0cHV0OiJtYXgiLCB0ZXg6bnVsbCwgdHR5cGU6VU5ERVJPVkVSfSwKCi8vYXJy
b3dzCntpbnB1dDoidWFyciIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjE5MSIsIHRl
eDoidXBhcnJvdyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJkYXJyIiwgdGFnOiJt
byIsIG91dHB1dDoiXHUyMTkzIiwgdGV4OiJkb3duYXJyb3ciLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoicmFyciIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjE5MiIsIHRl
eDoicmlnaHRhcnJvdyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiItPiIsICAgdGFn
OiJtbyIsIG91dHB1dDoiXHUyMTkyIiwgdGV4OiJ0byIsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiJ8LT4iLCAgdGFnOiJtbyIsIG91dHB1dDoiXHUyMUE2IiwgdGV4OiJt
YXBzdG8iLCB0dHlwZTpDT05TVH0sCntpbnB1dDoibGFyciIsIHRhZzoibW8iLCBv
dXRwdXQ6Ilx1MjE5MCIsIHRleDoibGVmdGFycm93IiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6ImhhcnIiLCB0YWc6Im1vIiwgb3V0cHV0OiJcdTIxOTQiLCB0ZXg6Imxl
ZnRyaWdodGFycm93IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6InJBcnIiLCB0YWc6
Im1vIiwgb3V0cHV0OiJcdTIxRDIiLCB0ZXg6IlJpZ2h0YXJyb3ciLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoibEFyciIsIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjFEMCIs
IHRleDoiTGVmdGFycm93IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6ImhBcnIiLCB0
YWc6Im1vIiwgb3V0cHV0OiJcdTIxRDQiLCB0ZXg6IkxlZnRyaWdodGFycm93Iiwg
dHR5cGU6Q09OU1R9LAoKLy9jb21tYW5kcyB3aXRoIGFyZ3VtZW50CkFNc3FydCwg
QU1yb290LCBBTWZyYWMsIEFNZGl2LCBBTW92ZXIsIEFNc3ViLCBBTXN1cCwKe2lu
cHV0OiJoYXQiLCB0YWc6Im1vdmVyIiwgb3V0cHV0OiJcdTAwNUUiLCB0ZXg6bnVs
bCwgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKe2lucHV0OiJiYXIiLCB0YWc6Im1v
dmVyIiwgb3V0cHV0OiJcdTAwQUYiLCB0ZXg6Im92ZXJsaW5lIiwgdHR5cGU6VU5B
UlksIGFjYzp0cnVlfSwKe2lucHV0OiJ2ZWMiLCB0YWc6Im1vdmVyIiwgb3V0cHV0
OiJcdTIxOTIiLCB0ZXg6bnVsbCwgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKe2lu
cHV0OiJkb3QiLCB0YWc6Im1vdmVyIiwgb3V0cHV0OiIuIiwgICAgICB0ZXg6bnVs
bCwgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKe2lucHV0OiJkZG90IiwgdGFnOiJt
b3ZlciIsIG91dHB1dDoiLi4iLCAgICB0ZXg6bnVsbCwgdHR5cGU6VU5BUlksIGFj
Yzp0cnVlfSwKe2lucHV0OiJ1bCIsIHRhZzoibXVuZGVyIiwgb3V0cHV0OiJcdTAz
MzIiLCB0ZXg6InVuZGVybGluZSIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0sCkFN
dGV4dCwgQU1tYm94LCBBTXF1b3RlLAp7aW5wdXQ6ImJiIiwgdGFnOiJtc3R5bGUi
LCBhdG5hbWU6ImZvbnR3ZWlnaHQiLCBhdHZhbDoiYm9sZCIsIG91dHB1dDoiYmIi
LCB0ZXg6bnVsbCwgdHR5cGU6VU5BUll9LAp7aW5wdXQ6Im1hdGhiZiIsIHRhZzoi
bXN0eWxlIiwgYXRuYW1lOiJmb250d2VpZ2h0IiwgYXR2YWw6ImJvbGQiLCBvdXRw
dXQ6Im1hdGhiZiIsIHRleDpudWxsLCB0dHlwZTpVTkFSWX0sCntpbnB1dDoic2Yi
LCB0YWc6Im1zdHlsZSIsIGF0bmFtZToiZm9udGZhbWlseSIsIGF0dmFsOiJzYW5z
LXNlcmlmIiwgb3V0cHV0OiJzZiIsIHRleDpudWxsLCB0dHlwZTpVTkFSWX0sCntp
bnB1dDoibWF0aHNmIiwgdGFnOiJtc3R5bGUiLCBhdG5hbWU6ImZvbnRmYW1pbHki
LCBhdHZhbDoic2Fucy1zZXJpZiIsIG91dHB1dDoibWF0aHNmIiwgdGV4Om51bGws
IHR0eXBlOlVOQVJZfSwKe2lucHV0OiJiYmIiLCB0YWc6Im1zdHlsZSIsIGF0bmFt
ZToibWF0aHZhcmlhbnQiLCBhdHZhbDoiZG91YmxlLXN0cnVjayIsIG91dHB1dDoi
YmJiIiwgdGV4Om51bGwsIHR0eXBlOlVOQVJZLCBjb2RlczpBTWJiYn0sCntpbnB1
dDoibWF0aGJiIiwgdGFnOiJtc3R5bGUiLCBhdG5hbWU6Im1hdGh2YXJpYW50Iiwg
YXR2YWw6ImRvdWJsZS1zdHJ1Y2siLCBvdXRwdXQ6Im1hdGhiYiIsIHRleDpudWxs
LCB0dHlwZTpVTkFSWSwgY29kZXM6QU1iYmJ9LAp7aW5wdXQ6ImNjIiwgIHRhZzoi
bXN0eWxlIiwgYXRuYW1lOiJtYXRodmFyaWFudCIsIGF0dmFsOiJzY3JpcHQiLCBv
dXRwdXQ6ImNjIiwgdGV4Om51bGwsIHR0eXBlOlVOQVJZLCBjb2RlczpBTWNhbH0s
CntpbnB1dDoibWF0aGNhbCIsIHRhZzoibXN0eWxlIiwgYXRuYW1lOiJtYXRodmFy
aWFudCIsIGF0dmFsOiJzY3JpcHQiLCBvdXRwdXQ6Im1hdGhjYWwiLCB0ZXg6bnVs
bCwgdHR5cGU6VU5BUlksIGNvZGVzOkFNY2FsfSwKe2lucHV0OiJ0dCIsICB0YWc6
Im1zdHlsZSIsIGF0bmFtZToiZm9udGZhbWlseSIsIGF0dmFsOiJtb25vc3BhY2Ui
LCBvdXRwdXQ6InR0IiwgdGV4Om51bGwsIHR0eXBlOlVOQVJZfSwKe2lucHV0OiJt
YXRodHQiLCB0YWc6Im1zdHlsZSIsIGF0bmFtZToiZm9udGZhbWlseSIsIGF0dmFs
OiJtb25vc3BhY2UiLCBvdXRwdXQ6Im1hdGh0dCIsIHRleDpudWxsLCB0dHlwZTpV
TkFSWX0sCntpbnB1dDoiZnIiLCAgdGFnOiJtc3R5bGUiLCBhdG5hbWU6Im1hdGh2
YXJpYW50IiwgYXR2YWw6ImZyYWt0dXIiLCBvdXRwdXQ6ImZyIiwgdGV4Om51bGws
IHR0eXBlOlVOQVJZLCBjb2RlczpBTWZya30sCntpbnB1dDoibWF0aGZyYWsiLCAg
dGFnOiJtc3R5bGUiLCBhdG5hbWU6Im1hdGh2YXJpYW50IiwgYXR2YWw6ImZyYWt0
dXIiLCBvdXRwdXQ6Im1hdGhmcmFrIiwgdGV4Om51bGwsIHR0eXBlOlVOQVJZLCBj
b2RlczpBTWZya30KXTsKCmZ1bmN0aW9uIGNvbXBhcmVOYW1lcyhzMSxzMikgewog
IGlmIChzMS5pbnB1dCA+IHMyLmlucHV0KSByZXR1cm4gMQogIGVsc2UgcmV0dXJu
IC0xOwp9Cgp2YXIgQU1uYW1lcyA9IFtdOyAvL2xpc3Qgb2YgaW5wdXQgc3ltYm9s
cwoKZnVuY3Rpb24gQU1pbml0U3ltYm9scygpIHsKICB2YXIgdGV4c3ltYm9scyA9
IFtdLCBpOwogIGZvciAoaT0wOyBpPEFNc3ltYm9scy5sZW5ndGg7IGkrKykKICAg
IGlmIChBTXN5bWJvbHNbaV0udGV4KSAKICAgICAgdGV4c3ltYm9sc1t0ZXhzeW1i
b2xzLmxlbmd0aF0gPSB7aW5wdXQ6QU1zeW1ib2xzW2ldLnRleCwgCiAgICAgICAg
dGFnOkFNc3ltYm9sc1tpXS50YWcsIG91dHB1dDpBTXN5bWJvbHNbaV0ub3V0cHV0
LCB0dHlwZTpBTXN5bWJvbHNbaV0udHR5cGV9OwogIEFNc3ltYm9scyA9IEFNc3lt
Ym9scy5jb25jYXQodGV4c3ltYm9scyk7CiAgQU1zeW1ib2xzLnNvcnQoY29tcGFy
ZU5hbWVzKTsKICBmb3IgKGk9MDsgaTxBTXN5bWJvbHMubGVuZ3RoOyBpKyspIEFN
bmFtZXNbaV0gPSBBTXN5bWJvbHNbaV0uaW5wdXQ7Cn0KCnZhciBBTW1hdGhtbCA9
ICJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MIjsKCmZ1bmN0aW9u
IEFNY3JlYXRlRWxlbWVudE1hdGhNTCh0KSB7CiAgaWYgKGlzSUUpIHJldHVybiBk
b2N1bWVudC5jcmVhdGVFbGVtZW50KCJtOiIrdCk7CiAgZWxzZSByZXR1cm4gZG9j
dW1lbnQuY3JlYXRlRWxlbWVudE5TKEFNbWF0aG1sLHQpOwp9CgpmdW5jdGlvbiBB
TWNyZWF0ZU1tbE5vZGUodCxmcmFnKSB7Ci8vICB2YXIgbm9kZSA9IEFNY3JlYXRl
RWxlbWVudE1hdGhNTChuYW1lKTsKICBpZiAoaXNJRSkgdmFyIG5vZGUgPSBkb2N1
bWVudC5jcmVhdGVFbGVtZW50KCJtOiIrdCk7CiAgZWxzZSB2YXIgbm9kZSA9IGRv
Y3VtZW50LmNyZWF0ZUVsZW1lbnROUyhBTW1hdGhtbCx0KTsKICBub2RlLmFwcGVu
ZENoaWxkKGZyYWcpOwogIHJldHVybiBub2RlOwp9CgpmdW5jdGlvbiBkZWZpbmUo
b2xkc3RyLG5ld3N0cikgewogIEFNc3ltYm9scyA9IEFNc3ltYm9scy5jb25jYXQo
W3tpbnB1dDpvbGRzdHIsIHRhZzoibW8iLCBvdXRwdXQ6bmV3c3RyLCAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4Om51bGwsIHR0eXBlOkRFRklO
SVRJT059XSk7CiAgQU1zeW1ib2xzLnNvcnQoY29tcGFyZU5hbWVzKTsKICBmb3Ig
KGk9MDsgaTxBTXN5bWJvbHMubGVuZ3RoOyBpKyspIEFNbmFtZXNbaV0gPSBBTXN5
bWJvbHNbaV0uaW5wdXQ7Cn0KCmZ1bmN0aW9uIEFNcmVtb3ZlQ2hhcnNBbmRCbGFu
a3Moc3RyLG4pIHsKLy9yZW1vdmUgbiBjaGFyYWN0ZXJzIGFuZCBhbnkgZm9sbG93
aW5nIGJsYW5rcwogIHZhciBzdDsKICBpZiAoc3RyLmNoYXJBdChuKT09IlxcIiAm
JiBzdHIuY2hhckF0KG4rMSkhPSJcXCIgJiYgc3RyLmNoYXJBdChuKzEpIT0iICIp
IAogICAgc3QgPSBzdHIuc2xpY2UobisxKTsKICBlbHNlIHN0ID0gc3RyLnNsaWNl
KG4pOwogIGZvciAodmFyIGk9MDsgaTxzdC5sZW5ndGggJiYgc3QuY2hhckNvZGVB
dChpKTw9MzI7IGk9aSsxKTsKICByZXR1cm4gc3Quc2xpY2UoaSk7Cn0KCmZ1bmN0
aW9uIEFNcG9zaXRpb24oYXJyLCBzdHIsIG4pIHsgCi8vIHJldHVybiBwb3NpdGlv
biA+PW4gd2hlcmUgc3RyIGFwcGVhcnMgb3Igd291bGQgYmUgaW5zZXJ0ZWQKLy8g
YXNzdW1lcyBhcnIgaXMgc29ydGVkCiAgaWYgKG49PTApIHsKICAgIHZhciBoLG07
CiAgICBuID0gLTE7CiAgICBoID0gYXJyLmxlbmd0aDsKICAgIHdoaWxlIChuKzE8
aCkgewogICAgICBtID0gKG4raCkgPj4gMTsKICAgICAgaWYgKGFyclttXTxzdHIp
IG4gPSBtOyBlbHNlIGggPSBtOwogICAgfQogICAgcmV0dXJuIGg7CiAgfSBlbHNl
CiAgICBmb3IgKHZhciBpPW47IGk8YXJyLmxlbmd0aCAmJiBhcnJbaV08c3RyOyBp
KyspOwogIHJldHVybiBpOyAvLyBpPWFyci5sZW5ndGggfHwgYXJyW2ldPj1zdHIK
fQoKZnVuY3Rpb24gQU1nZXRTeW1ib2woc3RyKSB7Ci8vcmV0dXJuIG1heGltYWwg
aW5pdGlhbCBzdWJzdHJpbmcgb2Ygc3RyIHRoYXQgYXBwZWFycyBpbiBuYW1lcwov
L3JldHVybiBudWxsIGlmIHRoZXJlIGlzIG5vbmUKICB2YXIgayA9IDA7IC8vbmV3
IHBvcwogIHZhciBqID0gMDsgLy9vbGQgcG9zCiAgdmFyIG1rOyAvL21hdGNoIHBv
cwogIHZhciBzdDsKICB2YXIgdGFnc3Q7CiAgdmFyIG1hdGNoID0gIiI7CiAgdmFy
IG1vcmUgPSB0cnVlOwogIGZvciAodmFyIGk9MTsgaTw9c3RyLmxlbmd0aCAmJiBt
b3JlOyBpKyspIHsKICAgIHN0ID0gc3RyLnNsaWNlKDAsaSk7IC8vaW5pdGlhbCBz
dWJzdHJpbmcgb2YgbGVuZ3RoIGkKICAgIGogPSBrOwogICAgayA9IEFNcG9zaXRp
b24oQU1uYW1lcywgc3QsIGopOwogICAgaWYgKGs8QU1uYW1lcy5sZW5ndGggJiYg
c3RyLnNsaWNlKDAsQU1uYW1lc1trXS5sZW5ndGgpPT1BTW5hbWVzW2tdKXsKICAg
ICAgbWF0Y2ggPSBBTW5hbWVzW2tdOwogICAgICBtayA9IGs7CiAgICAgIGkgPSBt
YXRjaC5sZW5ndGg7CiAgICB9CiAgICBtb3JlID0gazxBTW5hbWVzLmxlbmd0aCAm
JiBzdHIuc2xpY2UoMCxBTW5hbWVzW2tdLmxlbmd0aCk+PUFNbmFtZXNba107CiAg
fQogIEFNcHJldmlvdXNTeW1ib2w9QU1jdXJyZW50U3ltYm9sOwogIGlmIChtYXRj
aCE9IiIpewogICAgQU1jdXJyZW50U3ltYm9sPUFNc3ltYm9sc1tta10udHR5cGU7
CiAgICByZXR1cm4gQU1zeW1ib2xzW21rXTsgCiAgfQovLyBpZiBzdHJbMF0gaXMg
YSBkaWdpdCBvciAtIHJldHVybiBtYXhzdWJzdHJpbmcgb2YgZGlnaXRzLmRpZ2l0
cwogIEFNY3VycmVudFN5bWJvbD1DT05TVDsKICBrID0gMTsKICBzdCA9IHN0ci5z
bGljZSgwLDEpOwogIHZhciBpbnRlZyA9IHRydWU7CiAgd2hpbGUgKCIwIjw9c3Qg
JiYgc3Q8PSI5IiAmJiBrPD1zdHIubGVuZ3RoKSB7CiAgICBzdCA9IHN0ci5zbGlj
ZShrLGsrMSk7CiAgICBrKys7CiAgfQogIGlmIChzdCA9PSBkZWNpbWFsc2lnbikg
ewogICAgc3QgPSBzdHIuc2xpY2UoayxrKzEpOwogICAgaWYgKCIwIjw9c3QgJiYg
c3Q8PSI5IikgewogICAgICBpbnRlZyA9IGZhbHNlOwogICAgICBrKys7CiAgICAg
IHdoaWxlICgiMCI8PXN0ICYmIHN0PD0iOSIgJiYgazw9c3RyLmxlbmd0aCkgewog
ICAgICAgIHN0ID0gc3RyLnNsaWNlKGssaysxKTsKICAgICAgICBrKys7CiAgICAg
IH0KICAgIH0KICB9CiAgaWYgKChpbnRlZyAmJiBrPjEpIHx8IGs+MikgewogICAg
c3QgPSBzdHIuc2xpY2UoMCxrLTEpOwogICAgdGFnc3QgPSAibW4iOwogIH0gZWxz
ZSB7CiAgICBrID0gMjsKICAgIHN0ID0gc3RyLnNsaWNlKDAsMSk7IC8vdGFrZSAx
IGNoYXJhY3RlcgogICAgdGFnc3QgPSAoKCJBIj5zdCB8fCBzdD4iWiIpICYmICgi
YSI+c3QgfHwgc3Q+InoiKT8ibW8iOiJtaSIpOwogIH0KICBpZiAoc3Q9PSItIiAm
JiBBTXByZXZpb3VzU3ltYm9sPT1JTkZJWCkgewogICAgQU1jdXJyZW50U3ltYm9s
ID0gSU5GSVg7ICAvL3RyaWNrICIvIiBpbnRvIHJlY29nbml6aW5nICItIiBvbiBz
ZWNvbmQgcGFyc2UKICAgIHJldHVybiB7aW5wdXQ6c3QsIHRhZzp0YWdzdCwgb3V0
cHV0OnN0LCB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfTsKICB9CiAgcmV0dXJuIHtp
bnB1dDpzdCwgdGFnOnRhZ3N0LCBvdXRwdXQ6c3QsIHR0eXBlOkNPTlNUfTsKfQoK
ZnVuY3Rpb24gQU1yZW1vdmVCcmFja2V0cyhub2RlKSB7CiAgdmFyIHN0OwogIGlm
IChub2RlLm5vZGVOYW1lPT0ibXJvdyIpIHsKICAgIHN0ID0gbm9kZS5maXJzdENo
aWxkLmZpcnN0Q2hpbGQubm9kZVZhbHVlOwogICAgaWYgKHN0PT0iKCIgfHwgc3Q9
PSJbIiB8fCBzdD09InsiKSBub2RlLnJlbW92ZUNoaWxkKG5vZGUuZmlyc3RDaGls
ZCk7CiAgfQogIGlmIChub2RlLm5vZGVOYW1lPT0ibXJvdyIpIHsKICAgIHN0ID0g
bm9kZS5sYXN0Q2hpbGQuZmlyc3RDaGlsZC5ub2RlVmFsdWU7CiAgICBpZiAoc3Q9
PSIpIiB8fCBzdD09Il0iIHx8IHN0PT0ifSIpIG5vZGUucmVtb3ZlQ2hpbGQobm9k
ZS5sYXN0Q2hpbGQpOwogIH0KfQoKLypQYXJzaW5nIEFTQ0lJIG1hdGggZXhwcmVz
c2lvbnMgd2l0aCB0aGUgZm9sbG93aW5nIGdyYW1tYXIKdiA6Oj0gW0EtWmEtel0g
fCBncmVlayBsZXR0ZXJzIHwgbnVtYmVycyB8IG90aGVyIGNvbnN0YW50IHN5bWJv
bHMKdSA6Oj0gc3FydCB8IHRleHQgfCBiYiB8IG90aGVyIHVuYXJ5IHN5bWJvbHMg
Zm9yIGZvbnQgY29tbWFuZHMKYiA6Oj0gZnJhYyB8IHJvb3QgfCBzdGFja3JlbCAg
ICAgICAgIGJpbmFyeSBzeW1ib2xzCmwgOjo9ICggfCBbIHwgeyB8ICg6IHwgezog
ICAgICAgICAgICBsZWZ0IGJyYWNrZXRzCnIgOjo9ICkgfCBdIHwgfSB8IDopIHwg
On0gICAgICAgICAgICByaWdodCBicmFja2V0cwpTIDo6PSB2IHwgbEVyIHwgdVMg
fCBiU1MgICAgICAgICAgICAgU2ltcGxlIGV4cHJlc3Npb24KSSA6Oj0gU19TIHwg
U15TIHwgU19TXlMgfCBTICAgICAgICAgIEludGVybWVkaWF0ZSBleHByZXNzaW9u
CkUgOjo9IElFIHwgSS9JICAgICAgICAgICAgICAgICAgICAgICBFeHByZXNzaW9u
CkVhY2ggdGVybWluYWwgc3ltYm9sIGlzIHRyYW5zbGF0ZWQgaW50byBhIGNvcnJl
c3BvbmRpbmcgbWF0aG1sIG5vZGUuKi8KCnZhciBBTW5lc3RpbmdEZXB0aCxBTXBy
ZXZpb3VzU3ltYm9sLEFNY3VycmVudFN5bWJvbDsKCmZ1bmN0aW9uIEFNcGFyc2VT
ZXhwcihzdHIpIHsgLy9wYXJzZXMgc3RyIGFuZCByZXR1cm5zIFtub2RlLHRhaWxz
dHJdCiAgdmFyIHN5bWJvbCwgbm9kZSwgcmVzdWx0LCBpLCBzdCwvLyByaWdodHZl
cnQgPSBmYWxzZSwKICAgIG5ld0ZyYWcgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVu
dEZyYWdtZW50KCk7CiAgc3RyID0gQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIs
MCk7CiAgc3ltYm9sID0gQU1nZXRTeW1ib2woc3RyKTsgICAgICAgICAgICAgLy9l
aXRoZXIgYSB0b2tlbiBvciBhIGJyYWNrZXQgb3IgZW1wdHkKICBpZiAoc3ltYm9s
ID09IG51bGwgfHwgc3ltYm9sLnR0eXBlID09IFJJR0hUQlJBQ0tFVCAmJiBBTW5l
c3RpbmdEZXB0aCA+IDApIHsKICAgIHJldHVybiBbbnVsbCxzdHJdOwogIH0KICBp
ZiAoc3ltYm9sLnR0eXBlID09IERFRklOSVRJT04pIHsKICAgIHN0ciA9IHN5bWJv
bC5vdXRwdXQrQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0
Lmxlbmd0aCk7IAogICAgc3ltYm9sID0gQU1nZXRTeW1ib2woc3RyKTsKICB9CiAg
c3dpdGNoIChzeW1ib2wudHR5cGUpIHsKICBjYXNlIFVOREVST1ZFUjoKICBjYXNl
IENPTlNUOgogICAgc3RyID0gQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsc3lt
Ym9sLmlucHV0Lmxlbmd0aCk7IAogICAgcmV0dXJuIFtBTWNyZWF0ZU1tbE5vZGUo
c3ltYm9sLnRhZywgICAgICAgIC8vaXRzIGEgY29uc3RhbnQKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wu
b3V0cHV0KSksc3RyXTsKICBjYXNlIExFRlRCUkFDS0VUOiAgIC8vcmVhZCAoZXhw
cispCiAgICBBTW5lc3RpbmdEZXB0aCsrOwogICAgc3RyID0gQU1yZW1vdmVDaGFy
c0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7IAogICAgcmVzdWx0
ID0gQU1wYXJzZUV4cHIoc3RyLHRydWUpOwogICAgQU1uZXN0aW5nRGVwdGgtLTsK
ICAgIGlmICh0eXBlb2Ygc3ltYm9sLmludmlzaWJsZSA9PSAiYm9vbGVhbiIgJiYg
c3ltYm9sLmludmlzaWJsZSkgCiAgICAgIG5vZGUgPSBBTWNyZWF0ZU1tbE5vZGUo
Im1yb3ciLHJlc3VsdFswXSk7CiAgICBlbHNlIHsKICAgICAgbm9kZSA9IEFNY3Jl
YXRlTW1sTm9kZSgibW8iLGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN5bWJvbC5v
dXRwdXQpKTsKICAgICAgbm9kZSA9IEFNY3JlYXRlTW1sTm9kZSgibXJvdyIsbm9k
ZSk7CiAgICAgIG5vZGUuYXBwZW5kQ2hpbGQocmVzdWx0WzBdKTsKICAgIH0KICAg
IHJldHVybiBbbm9kZSxyZXN1bHRbMV1dOwogIGNhc2UgVEVYVDoKICAgICAgaWYg
KHN5bWJvbCE9QU1xdW90ZSkgc3RyID0gQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhz
dHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7CiAgICAgIGlmIChzdHIuY2hhckF0KDAp
PT0ieyIpIGk9c3RyLmluZGV4T2YoIn0iKTsKICAgICAgZWxzZSBpZiAoc3RyLmNo
YXJBdCgwKT09IigiKSBpPXN0ci5pbmRleE9mKCIpIik7CiAgICAgIGVsc2UgaWYg
KHN0ci5jaGFyQXQoMCk9PSJbIikgaT1zdHIuaW5kZXhPZigiXSIpOwogICAgICBl
bHNlIGlmIChzeW1ib2w9PUFNcXVvdGUpIGk9c3RyLnNsaWNlKDEpLmluZGV4T2Yo
IlwiIikrMTsKICAgICAgZWxzZSBpID0gMDsKICAgICAgaWYgKGk9PS0xKSBpID0g
c3RyLmxlbmd0aDsKICAgICAgc3QgPSBzdHIuc2xpY2UoMSxpKTsKICAgICAgaWYg
KHN0LmNoYXJBdCgwKSA9PSAiICIpIHsKICAgICAgICBub2RlID0gQU1jcmVhdGVF
bGVtZW50TWF0aE1MKCJtc3BhY2UiKTsKICAgICAgICBub2RlLnNldEF0dHJpYnV0
ZSgid2lkdGgiLCIxZXgiKTsKICAgICAgICBuZXdGcmFnLmFwcGVuZENoaWxkKG5v
ZGUpOwogICAgICB9CiAgICAgIG5ld0ZyYWcuYXBwZW5kQ2hpbGQoCiAgICAgICAg
QU1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcsZG9jdW1lbnQuY3JlYXRlVGV4dE5v
ZGUoc3QpKSk7CiAgICAgIGlmIChzdC5jaGFyQXQoc3QubGVuZ3RoLTEpID09ICIg
IikgewogICAgICAgIG5vZGUgPSBBTWNyZWF0ZUVsZW1lbnRNYXRoTUwoIm1zcGFj
ZSIpOwogICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCJ3aWR0aCIsIjFleCIpOwog
ICAgICAgIG5ld0ZyYWcuYXBwZW5kQ2hpbGQobm9kZSk7CiAgICAgIH0KICAgICAg
c3RyID0gQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsaSsxKTsKICAgICAgcmV0
dXJuIFtBTWNyZWF0ZU1tbE5vZGUoIm1yb3ciLG5ld0ZyYWcpLHN0cl07CiAgY2Fz
ZSBVTkFSWToKICAgICAgc3RyID0gQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIs
c3ltYm9sLmlucHV0Lmxlbmd0aCk7IAogICAgICByZXN1bHQgPSBBTXBhcnNlU2V4
cHIoc3RyKTsKICAgICAgaWYgKHJlc3VsdFswXT09bnVsbCkgcmV0dXJuIFtBTWNy
ZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZywKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wub3V0cHV0KSksc3Ry
XTsKICAgICAgaWYgKHR5cGVvZiBzeW1ib2wuZnVuYyA9PSAiYm9vbGVhbiIgJiYg
c3ltYm9sLmZ1bmMpIHsgLy8gZnVuY3Rpb25zIGhhY2sKICAgICAgICBzdCA9IHN0
ci5jaGFyQXQoMCk7CiAgICAgICAgaWYgKHN0PT0iXiIgfHwgc3Q9PSJfIiB8fCBz
dD09Ii8iIHx8IHN0PT0ifCIgfHwgc3Q9PSIsIikgewogICAgICAgICAgcmV0dXJu
IFtBTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZywKICAgICAgICAgICAgICAgICAg
ICBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wub3V0cHV0KSksc3RyXTsK
ICAgICAgICB9IGVsc2UgewogICAgICAgICAgbm9kZSA9IEFNY3JlYXRlTW1sTm9k
ZSgibXJvdyIsCiAgICAgICAgICAgQU1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcs
ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc3ltYm9sLm91dHB1dCkpKTsKICAgICAg
ICAgIG5vZGUuYXBwZW5kQ2hpbGQocmVzdWx0WzBdKTsKICAgICAgICAgIHJldHVy
biBbbm9kZSxyZXN1bHRbMV1dOwogICAgICAgIH0KICAgICAgfQogICAgICBBTXJl
bW92ZUJyYWNrZXRzKHJlc3VsdFswXSk7CiAgICAgIGlmIChzeW1ib2wuaW5wdXQg
PT0gInNxcnQiKSB7ICAgICAgICAgICAvLyBzcXJ0CiAgICAgICAgcmV0dXJuIFtB
TWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZyxyZXN1bHRbMF0pLHJlc3VsdFsxXV07
CiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHN5bWJvbC5hY2MgPT0gImJvb2xlYW4i
ICYmIHN5bWJvbC5hY2MpIHsgICAvLyBhY2NlbnQKICAgICAgICBub2RlID0gQU1j
cmVhdGVNbWxOb2RlKHN5bWJvbC50YWcscmVzdWx0WzBdKTsKICAgICAgICBub2Rl
LmFwcGVuZENoaWxkKEFNY3JlYXRlTW1sTm9kZSgibW8iLGRvY3VtZW50LmNyZWF0
ZVRleHROb2RlKHN5bWJvbC5vdXRwdXQpKSk7CiAgICAgICAgcmV0dXJuIFtub2Rl
LHJlc3VsdFsxXV07CiAgICAgIH0gZWxzZSB7ICAgICAgICAgICAgICAgICAgICAg
ICAgLy8gZm9udCBjaGFuZ2UgY29tbWFuZAogICAgICAgIGlmICghaXNJRSAmJiB0
eXBlb2Ygc3ltYm9sLmNvZGVzICE9ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICBm
b3IgKGk9MDsgaTxyZXN1bHRbMF0uY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykKICAg
ICAgICAgICAgaWYgKHJlc3VsdFswXS5jaGlsZE5vZGVzW2ldLm5vZGVOYW1lPT0i
bWkiIHx8IHJlc3VsdFswXS5ub2RlTmFtZT09Im1pIikgewogICAgICAgICAgICAg
IHN0ID0gKHJlc3VsdFswXS5ub2RlTmFtZT09Im1pIj9yZXN1bHRbMF0uZmlyc3RD
aGlsZC5ub2RlVmFsdWU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJl
c3VsdFswXS5jaGlsZE5vZGVzW2ldLmZpcnN0Q2hpbGQubm9kZVZhbHVlKTsKICAg
ICAgICAgICAgICB2YXIgbmV3c3QgPSBbXTsKICAgICAgICAgICAgICBmb3IgKHZh
ciBqPTA7IGo8c3QubGVuZ3RoOyBqKyspCiAgICAgICAgICAgICAgICBpZiAoc3Qu
Y2hhckNvZGVBdChqKT42NCAmJiBzdC5jaGFyQ29kZUF0KGopPDkxKSBuZXdzdCA9
IG5ld3N0ICsKICAgICAgICAgICAgICAgICAgU3RyaW5nLmZyb21DaGFyQ29kZShz
eW1ib2wuY29kZXNbc3QuY2hhckNvZGVBdChqKS02NV0pOwogICAgICAgICAgICAg
ICAgZWxzZSBuZXdzdCA9IG5ld3N0ICsgc3QuY2hhckF0KGopOwogICAgICAgICAg
ICAgIGlmIChyZXN1bHRbMF0ubm9kZU5hbWU9PSJtaSIpCiAgICAgICAgICAgICAg
ICByZXN1bHRbMF09QU1jcmVhdGVFbGVtZW50TWF0aE1MKCJtbyIpLgogICAgICAg
ICAgICAgICAgICAgICAgICAgIGFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRl
eHROb2RlKG5ld3N0KSk7CiAgICAgICAgICAgICAgZWxzZSByZXN1bHRbMF0ucmVw
bGFjZUNoaWxkKEFNY3JlYXRlRWxlbWVudE1hdGhNTCgibW8iKS4KICAgICAgICAg
IGFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG5ld3N0KSkscmVz
dWx0WzBdLmNoaWxkTm9kZXNbaV0pOwogICAgICAgICAgICB9CiAgICAgICAgfQog
ICAgICAgIG5vZGUgPSBBTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZyxyZXN1bHRb
MF0pOwogICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKHN5bWJvbC5hdG5hbWUsc3lt
Ym9sLmF0dmFsKTsKICAgICAgICByZXR1cm4gW25vZGUscmVzdWx0WzFdXTsKICAg
ICAgfQogIGNhc2UgQklOQVJZOgogICAgc3RyID0gQU1yZW1vdmVDaGFyc0FuZEJs
YW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7IAogICAgcmVzdWx0ID0gQU1w
YXJzZVNleHByKHN0cik7CiAgICBpZiAocmVzdWx0WzBdPT1udWxsKSByZXR1cm4g
W0FNY3JlYXRlTW1sTm9kZSgibW8iLAogICAgICAgICAgICAgICAgICAgICAgICAg
ICBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wuaW5wdXQpKSxzdHJdOwog
ICAgQU1yZW1vdmVCcmFja2V0cyhyZXN1bHRbMF0pOwogICAgdmFyIHJlc3VsdDIg
PSBBTXBhcnNlU2V4cHIocmVzdWx0WzFdKTsKICAgIGlmIChyZXN1bHQyWzBdPT1u
dWxsKSByZXR1cm4gW0FNY3JlYXRlTW1sTm9kZSgibW8iLAogICAgICAgICAgICAg
ICAgICAgICAgICAgICBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wuaW5w
dXQpKSxzdHJdOwogICAgQU1yZW1vdmVCcmFja2V0cyhyZXN1bHQyWzBdKTsKICAg
IGlmIChzeW1ib2wuaW5wdXQ9PSJyb290IiB8fCBzeW1ib2wuaW5wdXQ9PSJzdGFj
a3JlbCIpIAogICAgICBuZXdGcmFnLmFwcGVuZENoaWxkKHJlc3VsdDJbMF0pOwog
ICAgbmV3RnJhZy5hcHBlbmRDaGlsZChyZXN1bHRbMF0pOwogICAgaWYgKHN5bWJv
bC5pbnB1dD09ImZyYWMiKSBuZXdGcmFnLmFwcGVuZENoaWxkKHJlc3VsdDJbMF0p
OwogICAgcmV0dXJuIFtBTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZyxuZXdGcmFn
KSxyZXN1bHQyWzFdXTsKICBjYXNlIElORklYOgogICAgc3RyID0gQU1yZW1vdmVD
aGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7IAogICAgcmV0
dXJuIFtBTWNyZWF0ZU1tbE5vZGUoIm1vIixkb2N1bWVudC5jcmVhdGVUZXh0Tm9k
ZShzeW1ib2wub3V0cHV0KSksc3RyXTsKICBjYXNlIFNQQUNFOgogICAgc3RyID0g
QU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7
IAogICAgbm9kZSA9IEFNY3JlYXRlRWxlbWVudE1hdGhNTCgibXNwYWNlIik7CiAg
ICBub2RlLnNldEF0dHJpYnV0ZSgid2lkdGgiLCIxZXgiKTsKICAgIG5ld0ZyYWcu
YXBwZW5kQ2hpbGQobm9kZSk7CiAgICBuZXdGcmFnLmFwcGVuZENoaWxkKAogICAg
ICBBTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZyxkb2N1bWVudC5jcmVhdGVUZXh0
Tm9kZShzeW1ib2wub3V0cHV0KSkpOwogICAgbm9kZSA9IEFNY3JlYXRlRWxlbWVu
dE1hdGhNTCgibXNwYWNlIik7CiAgICBub2RlLnNldEF0dHJpYnV0ZSgid2lkdGgi
LCIxZXgiKTsKICAgIG5ld0ZyYWcuYXBwZW5kQ2hpbGQobm9kZSk7CiAgICByZXR1
cm4gW0FNY3JlYXRlTW1sTm9kZSgibXJvdyIsbmV3RnJhZyksc3RyXTsKICBjYXNl
IExFRlRSSUdIVDoKLy8gICAgaWYgKHJpZ2h0dmVydCkgcmV0dXJuIFtudWxsLHN0
cl07IGVsc2UgcmlnaHR2ZXJ0ID0gdHJ1ZTsKICAgIEFNbmVzdGluZ0RlcHRoKys7
CiAgICBzdHIgPSBBTXJlbW92ZUNoYXJzQW5kQmxhbmtzKHN0cixzeW1ib2wuaW5w
dXQubGVuZ3RoKTsgCiAgICByZXN1bHQgPSBBTXBhcnNlRXhwcihzdHIsZmFsc2Up
OwogICAgQU1uZXN0aW5nRGVwdGgtLTsKICAgIHZhciBzdCA9ICIiOwogICAgaWYg
KHJlc3VsdFswXS5sYXN0Q2hpbGQhPW51bGwpCiAgICAgIHN0ID0gcmVzdWx0WzBd
Lmxhc3RDaGlsZC5maXJzdENoaWxkLm5vZGVWYWx1ZTsKICAgIGlmIChzdCA9PSAi
fCIpIHsgLy8gaXRzIGFuIGFic29sdXRlIHZhbHVlIHN1YnRlcm0KICAgICAgbm9k
ZSA9IEFNY3JlYXRlTW1sTm9kZSgibW8iLGRvY3VtZW50LmNyZWF0ZVRleHROb2Rl
KHN5bWJvbC5vdXRwdXQpKTsKICAgICAgbm9kZSA9IEFNY3JlYXRlTW1sTm9kZSgi
bXJvdyIsbm9kZSk7CiAgICAgIG5vZGUuYXBwZW5kQ2hpbGQocmVzdWx0WzBdKTsK
ICAgICAgcmV0dXJuIFtub2RlLHJlc3VsdFsxXV07CiAgICB9IGVsc2UgeyAvLyB0
aGUgInwiIGlzIGEgXG1pZAogICAgICBub2RlID0gQU1jcmVhdGVNbWxOb2RlKCJt
byIsZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc3ltYm9sLm91dHB1dCkpOwogICAg
ICBub2RlID0gQU1jcmVhdGVNbWxOb2RlKCJtcm93Iixub2RlKTsKICAgICAgcmV0
dXJuIFtub2RlLHN0cl07CiAgICB9CiAgZGVmYXVsdDoKLy9hbGVydCgiZGVmYXVs
dCIpOwogICAgc3RyID0gQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9s
LmlucHV0Lmxlbmd0aCk7IAogICAgcmV0dXJuIFtBTWNyZWF0ZU1tbE5vZGUoc3lt
Ym9sLnRhZywgICAgICAgIC8vaXRzIGEgY29uc3RhbnQKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wub3V0
cHV0KSksc3RyXTsKICB9Cn0KCmZ1bmN0aW9uIEFNcGFyc2VJZXhwcihzdHIpIHsK
ICB2YXIgc3ltYm9sLCBzeW0xLCBzeW0yLCBub2RlLCByZXN1bHQsIHVuZGVyb3Zl
cjsKICBzdHIgPSBBTXJlbW92ZUNoYXJzQW5kQmxhbmtzKHN0ciwwKTsKICBzeW0x
ID0gQU1nZXRTeW1ib2woc3RyKTsKICByZXN1bHQgPSBBTXBhcnNlU2V4cHIoc3Ry
KTsKICBub2RlID0gcmVzdWx0WzBdOwogIHN0ciA9IHJlc3VsdFsxXTsKICBzeW1i
b2wgPSBBTWdldFN5bWJvbChzdHIpOwogIGlmIChzeW1ib2wudHR5cGUgPT0gSU5G
SVggJiYgc3ltYm9sLmlucHV0ICE9ICIvIikgewogICAgc3RyID0gQU1yZW1vdmVD
aGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7Ci8vICAgIGlm
IChzeW1ib2wuaW5wdXQgPT0gIi8iKSByZXN1bHQgPSBBTXBhcnNlSWV4cHIoc3Ry
KTsgZWxzZSAuLi4KICAgIHJlc3VsdCA9IEFNcGFyc2VTZXhwcihzdHIpOwogICAg
aWYgKHJlc3VsdFswXSA9PSBudWxsKSAvLyBzaG93IGJveCBpbiBwbGFjZSBvZiBt
aXNzaW5nIGFyZ3VtZW50CiAgICAgIHJlc3VsdFswXSA9IEFNY3JlYXRlTW1sTm9k
ZSgibW8iLGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJcdTI1QTEiKSk7CiAgICBl
bHNlIEFNcmVtb3ZlQnJhY2tldHMocmVzdWx0WzBdKTsKICAgIHN0ciA9IHJlc3Vs
dFsxXTsKLy8gICAgaWYgKHN5bWJvbC5pbnB1dCA9PSAiLyIpIEFNcmVtb3ZlQnJh
Y2tldHMobm9kZSk7CiAgICBpZiAoc3ltYm9sLmlucHV0ID09ICJfIikgewogICAg
ICBzeW0yID0gQU1nZXRTeW1ib2woc3RyKTsKICAgICAgdW5kZXJvdmVyID0gKHN5
bTEudHR5cGUgPT0gVU5ERVJPVkVSKTsKICAgICAgaWYgKHN5bTIuaW5wdXQgPT0g
Il4iKSB7CiAgICAgICAgc3RyID0gQU1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIs
c3ltMi5pbnB1dC5sZW5ndGgpOwogICAgICAgIHZhciByZXMyID0gQU1wYXJzZVNl
eHByKHN0cik7CiAgICAgICAgQU1yZW1vdmVCcmFja2V0cyhyZXMyWzBdKTsKICAg
ICAgICBzdHIgPSByZXMyWzFdOwogICAgICAgIG5vZGUgPSBBTWNyZWF0ZU1tbE5v
ZGUoKHVuZGVyb3Zlcj8ibXVuZGVyb3ZlciI6Im1zdWJzdXAiKSxub2RlKTsKICAg
ICAgICBub2RlLmFwcGVuZENoaWxkKHJlc3VsdFswXSk7CiAgICAgICAgbm9kZS5h
cHBlbmRDaGlsZChyZXMyWzBdKTsKICAgICAgICBub2RlID0gQU1jcmVhdGVNbWxO
b2RlKCJtcm93Iixub2RlKTsgLy8gc28gc3VtIGRvZXMgbm90IHN0cmV0Y2gKICAg
ICAgfSBlbHNlIHsKICAgICAgICBub2RlID0gQU1jcmVhdGVNbWxOb2RlKCh1bmRl
cm92ZXI/Im11bmRlciI6Im1zdWIiKSxub2RlKTsKICAgICAgICBub2RlLmFwcGVu
ZENoaWxkKHJlc3VsdFswXSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIG5v
ZGUgPSBBTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZyxub2RlKTsKICAgICAgbm9k
ZS5hcHBlbmRDaGlsZChyZXN1bHRbMF0pOwogICAgfQogIH0KICByZXR1cm4gW25v
ZGUsc3RyXTsKfQoKZnVuY3Rpb24gQU1wYXJzZUV4cHIoc3RyLHJpZ2h0YnJhY2tl
dCkgewogIHZhciBzeW1ib2wsIG5vZGUsIHJlc3VsdCwgaSwgbm9kZUxpc3QgPSBb
XSwKICBuZXdGcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgp
OwogIGRvIHsKICAgIHN0ciA9IEFNcmVtb3ZlQ2hhcnNBbmRCbGFua3Moc3RyLDAp
OwogICAgcmVzdWx0ID0gQU1wYXJzZUlleHByKHN0cik7CiAgICBub2RlID0gcmVz
dWx0WzBdOwogICAgc3RyID0gcmVzdWx0WzFdOwogICAgc3ltYm9sID0gQU1nZXRT
eW1ib2woc3RyKTsKICAgIGlmIChzeW1ib2wudHR5cGUgPT0gSU5GSVggJiYgc3lt
Ym9sLmlucHV0ID09ICIvIikgewogICAgICBzdHIgPSBBTXJlbW92ZUNoYXJzQW5k
QmxhbmtzKHN0cixzeW1ib2wuaW5wdXQubGVuZ3RoKTsKICAgICAgcmVzdWx0ID0g
QU1wYXJzZUlleHByKHN0cik7CiAgICAgIGlmIChyZXN1bHRbMF0gPT0gbnVsbCkg
Ly8gc2hvdyBib3ggaW4gcGxhY2Ugb2YgbWlzc2luZyBhcmd1bWVudAogICAgICAg
IHJlc3VsdFswXSA9IEFNY3JlYXRlTW1sTm9kZSgibW8iLGRvY3VtZW50LmNyZWF0
ZVRleHROb2RlKCJcdTI1QTEiKSk7CiAgICAgIGVsc2UgQU1yZW1vdmVCcmFja2V0
cyhyZXN1bHRbMF0pOwogICAgICBzdHIgPSByZXN1bHRbMV07CiAgICAgIEFNcmVt
b3ZlQnJhY2tldHMobm9kZSk7CiAgICAgIG5vZGUgPSBBTWNyZWF0ZU1tbE5vZGUo
c3ltYm9sLnRhZyxub2RlKTsKICAgICAgbm9kZS5hcHBlbmRDaGlsZChyZXN1bHRb
MF0pOwogICAgICBuZXdGcmFnLmFwcGVuZENoaWxkKG5vZGUpOwogICAgICBzeW1i
b2wgPSBBTWdldFN5bWJvbChzdHIpOwogICAgfSAKICAgIGVsc2UgaWYgKG5vZGUh
PXVuZGVmaW5lZCkgbmV3RnJhZy5hcHBlbmRDaGlsZChub2RlKTsKICB9IHdoaWxl
ICgoc3ltYm9sLnR0eXBlICE9IFJJR0hUQlJBQ0tFVCAmJiAKICAgICAgICAgICAo
c3ltYm9sLnR0eXBlICE9IExFRlRSSUdIVCB8fCByaWdodGJyYWNrZXQpCiAgICAg
ICAgICAgfHwgQU1uZXN0aW5nRGVwdGggPT0gMCkgJiYgc3ltYm9sIT1udWxsICYm
IHN5bWJvbC5vdXRwdXQhPSIiKTsKICBpZiAoc3ltYm9sLnR0eXBlID09IFJJR0hU
QlJBQ0tFVCB8fCBzeW1ib2wudHR5cGUgPT0gTEVGVFJJR0hUKSB7Ci8vICAgIGlm
IChBTW5lc3RpbmdEZXB0aCA+IDApIEFNbmVzdGluZ0RlcHRoLS07CiAgICB2YXIg
bGVuID0gbmV3RnJhZy5jaGlsZE5vZGVzLmxlbmd0aDsKICAgIGlmIChsZW4+MCAm
JiBuZXdGcmFnLmNoaWxkTm9kZXNbbGVuLTFdLm5vZGVOYW1lID09ICJtcm93IiAm
JiBsZW4+MSAmJgogICAgICBuZXdGcmFnLmNoaWxkTm9kZXNbbGVuLTJdLm5vZGVO
YW1lID09ICJtbyIgJiYKICAgICAgbmV3RnJhZy5jaGlsZE5vZGVzW2xlbi0yXS5m
aXJzdENoaWxkLm5vZGVWYWx1ZSA9PSAiLCIpIHsgLy9tYXRyaXgKICAgICAgdmFy
IHJpZ2h0ID0gbmV3RnJhZy5jaGlsZE5vZGVzW2xlbi0xXS5sYXN0Q2hpbGQuZmly
c3RDaGlsZC5ub2RlVmFsdWU7CiAgICAgIGlmIChyaWdodD09IikiIHx8IHJpZ2h0
PT0iXSIpIHsKICAgICAgICB2YXIgbGVmdCA9IG5ld0ZyYWcuY2hpbGROb2Rlc1ts
ZW4tMV0uZmlyc3RDaGlsZC5maXJzdENoaWxkLm5vZGVWYWx1ZTsKICAgICAgICBp
ZiAobGVmdD09IigiICYmIHJpZ2h0PT0iKSIgJiYgc3ltYm9sLm91dHB1dCAhPSAi
fSIgfHwgCiAgICAgICAgICAgIGxlZnQ9PSJbIiAmJiByaWdodD09Il0iKSB7CiAg
ICAgICAgdmFyIHBvcyA9IFtdOyAvLyBwb3NpdGlvbnMgb2YgY29tbWFzCiAgICAg
ICAgdmFyIG1hdHJpeCA9IHRydWU7CiAgICAgICAgdmFyIG0gPSBuZXdGcmFnLmNo
aWxkTm9kZXMubGVuZ3RoOwogICAgICAgIGZvciAoaT0wOyBtYXRyaXggJiYgaTxt
OyBpPWkrMikgewogICAgICAgICAgcG9zW2ldID0gW107CiAgICAgICAgICBub2Rl
ID0gbmV3RnJhZy5jaGlsZE5vZGVzW2ldOwogICAgICAgICAgaWYgKG1hdHJpeCkg
bWF0cml4ID0gbm9kZS5ub2RlTmFtZT09Im1yb3ciICYmIAogICAgICAgICAgICAo
aT09bS0xIHx8IG5vZGUubmV4dFNpYmxpbmcubm9kZU5hbWU9PSJtbyIgJiYgCiAg
ICAgICAgICAgIG5vZGUubmV4dFNpYmxpbmcuZmlyc3RDaGlsZC5ub2RlVmFsdWU9
PSIsIikmJgogICAgICAgICAgICBub2RlLmZpcnN0Q2hpbGQuZmlyc3RDaGlsZC5u
b2RlVmFsdWU9PWxlZnQgJiYKICAgICAgICAgICAgbm9kZS5sYXN0Q2hpbGQuZmly
c3RDaGlsZC5ub2RlVmFsdWU9PXJpZ2h0OwogICAgICAgICAgaWYgKG1hdHJpeCkg
CiAgICAgICAgICAgIGZvciAodmFyIGo9MDsgajxub2RlLmNoaWxkTm9kZXMubGVu
Z3RoOyBqKyspCiAgICAgICAgICAgICAgaWYgKG5vZGUuY2hpbGROb2Rlc1tqXS5m
aXJzdENoaWxkLm5vZGVWYWx1ZT09IiwiKQogICAgICAgICAgICAgICAgcG9zW2ld
W3Bvc1tpXS5sZW5ndGhdPWo7CiAgICAgICAgICBpZiAobWF0cml4ICYmIGk+MSkg
bWF0cml4ID0gcG9zW2ldLmxlbmd0aCA9PSBwb3NbaS0yXS5sZW5ndGg7CiAgICAg
ICAgfQogICAgICAgIGlmIChtYXRyaXgpIHsKICAgICAgICAgIHZhciByb3csIGZy
YWcsIG4sIGssIHRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVu
dCgpOwogICAgICAgICAgZm9yIChpPTA7IGk8bTsgaT1pKzIpIHsKICAgICAgICAg
ICAgcm93ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpOwogICAg
ICAgICAgICBmcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgp
OwogICAgICAgICAgICBub2RlID0gbmV3RnJhZy5maXJzdENoaWxkOyAvLyA8bXJv
dz4oLSwtLC4uLiwtLC0pPC9tcm93PgogICAgICAgICAgICBuID0gbm9kZS5jaGls
ZE5vZGVzLmxlbmd0aDsKICAgICAgICAgICAgayA9IDA7CiAgICAgICAgICAgIG5v
ZGUucmVtb3ZlQ2hpbGQobm9kZS5maXJzdENoaWxkKTsgLy9yZW1vdmUgKAogICAg
ICAgICAgICBmb3IgKGo9MTsgajxuLTE7IGorKykgewogICAgICAgICAgICAgIGlm
ICh0eXBlb2YgcG9zW2ldW2tdICE9ICJ1bmRlZmluZWQiICYmIGo9PXBvc1tpXVtr
XSl7CiAgICAgICAgICAgICAgICBub2RlLnJlbW92ZUNoaWxkKG5vZGUuZmlyc3RD
aGlsZCk7IC8vcmVtb3ZlICwKICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGls
ZChBTWNyZWF0ZU1tbE5vZGUoIm10ZCIsZnJhZykpOwogICAgICAgICAgICAgICAg
aysrOwogICAgICAgICAgICAgIH0gZWxzZSBmcmFnLmFwcGVuZENoaWxkKG5vZGUu
Zmlyc3RDaGlsZCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcm93LmFwcGVu
ZENoaWxkKEFNY3JlYXRlTW1sTm9kZSgibXRkIixmcmFnKSk7CiAgICAgICAgICAg
IGlmIChuZXdGcmFnLmNoaWxkTm9kZXMubGVuZ3RoPjIpIHsKICAgICAgICAgICAg
ICBuZXdGcmFnLnJlbW92ZUNoaWxkKG5ld0ZyYWcuZmlyc3RDaGlsZCk7IC8vcmVt
b3ZlIDxtcm93Pik8L21yb3c+CiAgICAgICAgICAgICAgbmV3RnJhZy5yZW1vdmVD
aGlsZChuZXdGcmFnLmZpcnN0Q2hpbGQpOyAvL3JlbW92ZSA8bW8+LDwvbW8+CiAg
ICAgICAgICAgIH0KICAgICAgICAgICAgdGFibGUuYXBwZW5kQ2hpbGQoQU1jcmVh
dGVNbWxOb2RlKCJtdHIiLHJvdykpOwogICAgICAgICAgfQogICAgICAgICAgbm9k
ZSA9IEFNY3JlYXRlTW1sTm9kZSgibXRhYmxlIix0YWJsZSk7CiAgICAgICAgICBp
ZiAodHlwZW9mIHN5bWJvbC5pbnZpc2libGUgPT0gImJvb2xlYW4iICYmIHN5bWJv
bC5pbnZpc2libGUpIG5vZGUuc2V0QXR0cmlidXRlKCJjb2x1bW5hbGlnbiIsImxl
ZnQiKTsKICAgICAgICAgIG5ld0ZyYWcucmVwbGFjZUNoaWxkKG5vZGUsbmV3RnJh
Zy5maXJzdENoaWxkKTsKICAgICAgICB9CiAgICAgICB9CiAgICAgIH0KICAgIH0K
ICAgIHN0ciA9IEFNcmVtb3ZlQ2hhcnNBbmRCbGFua3Moc3RyLHN5bWJvbC5pbnB1
dC5sZW5ndGgpOwogICAgaWYgKHR5cGVvZiBzeW1ib2wuaW52aXNpYmxlICE9ICJi
b29sZWFuIiB8fCAhc3ltYm9sLmludmlzaWJsZSkgewogICAgICBub2RlID0gQU1j
cmVhdGVNbWxOb2RlKCJtbyIsZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc3ltYm9s
Lm91dHB1dCkpOwogICAgICBuZXdGcmFnLmFwcGVuZENoaWxkKG5vZGUpOwogICAg
fQogIH0KICByZXR1cm4gW25ld0ZyYWcsc3RyXTsKfQoKZnVuY3Rpb24gQU1wYXJz
ZU1hdGgoc3RyKSB7CiAgdmFyIHJlc3VsdCwgbm9kZSA9IEFNY3JlYXRlRWxlbWVu
dE1hdGhNTCgibXN0eWxlIik7CiAgaWYgKG1hdGhjb2xvciAhPSAiIikgbm9kZS5z
ZXRBdHRyaWJ1dGUoIm1hdGhjb2xvciIsbWF0aGNvbG9yKTsKICBpZiAoZGlzcGxh
eXN0eWxlKSBub2RlLnNldEF0dHJpYnV0ZSgiZGlzcGxheXN0eWxlIiwidHJ1ZSIp
OwogIGlmIChtYXRoZm9udGZhbWlseSAhPSAiIikgbm9kZS5zZXRBdHRyaWJ1dGUo
ImZvbnRmYW1pbHkiLG1hdGhmb250ZmFtaWx5KTsKICBBTW5lc3RpbmdEZXB0aCA9
IDA7CiAgbm9kZS5hcHBlbmRDaGlsZChBTXBhcnNlRXhwcihzdHIucmVwbGFjZSgv
XlxzKy9nLCIiKSxmYWxzZSlbMF0pOwogIG5vZGUgPSBBTWNyZWF0ZU1tbE5vZGUo
Im1hdGgiLG5vZGUpOwogIGlmIChzaG93YXNjaWlmb3JtdWxhb25ob3ZlcikgICAg
ICAgICAgICAgICAgICAgICAgLy9maXhlZCBieSBkamhzdSBzbyBuZXdsaW5lCiAg
ICBub2RlLnNldEF0dHJpYnV0ZSgidGl0bGUiLHN0ci5yZXBsYWNlKC9ccysvZywi
ICIpKTsvL2RvZXMgbm90IHNob3cgaW4gR2Vja28KICB2YXIgZm5vZGUgPSBBTWNy
ZWF0ZUVsZW1lbnRYSFRNTCgic3BhbiIpOwogIGZub2RlLnN0eWxlLmZvbnRTaXpl
ID0gbWF0aGZvbnRzaXplOwogIGlmIChtYXRoZm9udGZhbWlseSAhPSAiIikgZm5v
ZGUuc3R5bGUuZm9udEZhbWlseSA9IG1hdGhmb250ZmFtaWx5OwogIGZub2RlLmFw
cGVuZENoaWxkKG5vZGUpOwogIHJldHVybiBmbm9kZTsKfQoKZnVuY3Rpb24gQU1z
dHJhcnIyZG9jRnJhZyhhcnIsIGxpbmVicmVha3MpIHsKICB2YXIgbmV3RnJhZz1k
b2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CiAgdmFyIGV4cHIgPSBm
YWxzZTsKICBmb3IgKHZhciBpPTA7IGk8YXJyLmxlbmd0aDsgaSsrKSB7CiAgICBp
ZiAoZXhwcikgbmV3RnJhZy5hcHBlbmRDaGlsZChBTXBhcnNlTWF0aChhcnJbaV0p
KTsKICAgIGVsc2UgewogICAgICB2YXIgYXJyaSA9IChsaW5lYnJlYWtzID8gYXJy
W2ldLnNwbGl0KCJcblxuIikgOiBbYXJyW2ldXSk7CiAgICAgIG5ld0ZyYWcuYXBw
ZW5kQ2hpbGQoQU1jcmVhdGVFbGVtZW50WEhUTUwoInNwYW4iKS4KICAgICAgYXBw
ZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoYXJyaVswXSkpKTsKICAg
ICAgZm9yICh2YXIgaj0xOyBqPGFycmkubGVuZ3RoOyBqKyspIHsKICAgICAgICBu
ZXdGcmFnLmFwcGVuZENoaWxkKEFNY3JlYXRlRWxlbWVudFhIVE1MKCJwIikpOwog
ICAgICAgIG5ld0ZyYWcuYXBwZW5kQ2hpbGQoQU1jcmVhdGVFbGVtZW50WEhUTUwo
InNwYW4iKS4KICAgICAgICBhcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0
Tm9kZShhcnJpW2pdKSkpOwogICAgICB9CiAgICB9CiAgICBleHByID0gIWV4cHI7
CiAgfQogIHJldHVybiBuZXdGcmFnOwp9CgpmdW5jdGlvbiBBTWF1dG9tYXRocmVj
KHN0cikgewovL2Zvcm11bGEgaXMgYSBzcGFjZSAob3Igc3RhcnQgb2Ygc3RyKSBm
b2xsb3dlZCBieSBhIG1heGltYWwgc2VxdWVuY2Ugb2YgKnR3byogb3IgbW9yZSB0
b2tlbnMsIHBvc3NpYmx5IHNlcGFyYXRlZCBieSBydW5zIG9mIGRpZ2l0cyBhbmQv
b3Igc3BhY2UuCi8vdG9rZW5zIGFyZSBzaW5nbGUgbGV0dGVycyAoZXhjZXB0IGEs
IEEsIEkpIGFuZCBBU0NJSU1hdGhNTCB0b2tlbnMKICB2YXIgdGV4Y29tbWFuZCA9
ICJcXFxcW2EtekEtWl0rfFxcXFxcXHN8IjsKICB2YXIgYW1iaWdBTXRva2VuID0g
IlxcYig/Om9vfGxpbXxsbnxpbnR8b2ludHxkZWx8Z3JhZHxhbGVwaHxwcm9kfHBy
b3B8c2luaHxjb3NofHRhbmh8Y29zfHNlY3xwaXx0dHxmcnxzZnxzdWJlfHN1cGV8
c3VifHN1cHxkZXR8bW9kfGdjZHxsY218bWlufG1heHx2ZWN8ZGRvdHx1bHxjaGl8
ZXRhfG51fG11KSg/IVthLXpdKXwiOwogIHZhciBlbmdsaXNoQU10b2tlbiA9ICJc
XGIoPzpzdW18b3h8bG9nfHNpbnx0YW58ZGltfGhhdHxiYXJ8ZG90KSg/IVthLXpd
KXwiOwogIHZhciBzZWNvbmRlbmdsaXNoQU10b2tlbiA9ICJ8XFxiSVxcYnxcXGJp
blxcYnxcXGJ0ZXh0XFxiIjsgLy8gdG9vayBpZiBhbmQgb3Igbm90IG91dAogIHZh
ciBzaW1wbGVBTXRva2VuID0gIk5OfFpafFFRfFJSfENDfFRUfEFBfEVFfHNxcnR8
ZHh8ZHl8ZHp8ZHR8eHh8dnZ8dXV8bm58YmJ8Y2N8Y3NjfGNvdHxhbHBoYXxiZXRh
fGRlbHRhfERlbHRhfGVwc2lsb258Z2FtbWF8R2FtbWF8a2FwcGF8bGFtYmRhfExh
bWJkYXxvbWVnYXxwaGl8UGhpfFBpfHBzaXxQc2l8cmhvfHNpZ21hfFNpZ21hfHRh
dXx0aGV0YXxUaGV0YXx4aXxYaXx6ZXRhIjsgLy8gdXV1IG5ubj8KICB2YXIgbGV0
dGVyID0gIlthLXpBLUhKLVpdKD89KD86W15hLXpBLVpdfCR8IithbWJpZ0FNdG9r
ZW4rZW5nbGlzaEFNdG9rZW4rc2ltcGxlQU10b2tlbisiKSl8IjsKICB2YXIgdG9r
ZW4gPSBsZXR0ZXIrdGV4Y29tbWFuZCsiXFxkK3xbLSgpW1xcXXt9Kz0qJl5fJUAv
PD4sXFx8ITo7J35dfFxcLig/ISg/Olx4MjB8JCkpfCIrYW1iaWdBTXRva2VuK2Vu
Z2xpc2hBTXRva2VuK3NpbXBsZUFNdG9rZW47CiAgdmFyIHJlID0gbmV3IFJlZ0V4
cCgiKF58XFxzKSgoKCIrdG9rZW4rIilcXHM/KSgoIit0b2tlbitzZWNvbmRlbmds
aXNoQU10b2tlbisiKVxccz8pKykoWywuP10/KD89XFxzfCQpKSIsImciKTsKICBz
dHIgPSBzdHIucmVwbGFjZShyZSwiIGBgJDJgYCQ3Iik7CiAgdmFyIGFyciA9IHN0
ci5zcGxpdChBTWRlbGltaXRlcjEpOwogIHZhciByZTEgPSBuZXcgUmVnRXhwKCIo
XnxcXHMpKFtiLXpCLUhKLVorKjw+XXwiK3RleGNvbW1hbmQrYW1iaWdBTXRva2Vu
K3NpbXBsZUFNdG9rZW4rIikoXFxzfFxcbnwkKSIsImciKTsKICB2YXIgcmUyID0g
bmV3IFJlZ0V4cCgiKF58XFxzKShbYS16XXwiK3RleGNvbW1hbmQrYW1iaWdBTXRv
a2VuK3NpbXBsZUFNdG9rZW4rIikoWywuXSkiLCJnIik7IC8vIHJlbW92ZWQgfFxk
KyBmb3Igbm93CiAgZm9yIChpPTA7IGk8YXJyLmxlbmd0aDsgaSsrKSAgIC8vc2lu
Z2xlIG5vbmVuZ2xpc2ggdG9rZW5zCiAgICBpZiAoaSUyPT0wKSB7CiAgICAgIGFy
cltpXSA9IGFycltpXS5yZXBsYWNlKHJlMSwiIGBgJDJgYCQzIik7CiAgICAgIGFy
cltpXSA9IGFycltpXS5yZXBsYWNlKHJlMiwiIGBgJDJgYCQzIik7CiAgICAgIGFy
cltpXSA9IGFycltpXS5yZXBsYWNlKC8oW3t9W1xdXSkvLCJgYCQxYGAiKTsKICAg
IH0KICBzdHIgPSBhcnIuam9pbihBTWRlbGltaXRlcjEpOwogIHN0ciA9IHN0ci5y
ZXBsYWNlKC8oXChbYS16QS1aXXsyLH0uKj8pXClgYC9nLCIkMWBgKSIpOyAgLy9m
aXggcGFyZW50aGVzZXMKICBzdHIgPSBzdHIucmVwbGFjZSgvYGAoXCgoYVxzfGlu
XHMpKSguKj9bYS16QS1aXXsyLH1cKSkvZywiJDFgYCQzIik7ICAvL2ZpeCBwYXJl
bnRoZXNlcwogIHN0ciA9IHN0ci5yZXBsYWNlKC9cc2luYGAvZywiYGAgaW4iKTsK
ICBzdHIgPSBzdHIucmVwbGFjZSgvYGAoXChcd1wpWywuXT8oXHN8XG58JCkpL2cs
IiQxYGAiKTsKICBzdHIgPSBzdHIucmVwbGFjZSgvYGAoWzAtOS5dK3xlLmcpYGAo
XFwuKS9naSwiJDEkMiIpOwogIHN0ciA9IHN0ci5yZXBsYWNlKC9gYChbMC05Ll06
KWBgL2csIiQxIik7CiAgcmV0dXJuIHN0cjsKfQoKZnVuY3Rpb24gQU1wcm9jZXNz
Tm9kZVIobiwgbGluZWJyZWFrcykgewogIHZhciBtdGNoLCBzdHIsIGFyciwgZnJn
LCBpOwogIGlmIChuLmNoaWxkTm9kZXMubGVuZ3RoID09IDApIHsKICAgaWYgKChu
Lm5vZGVUeXBlIT04IHx8IGxpbmVicmVha3MpICYmCiAgICBuLnBhcmVudE5vZGUu
bm9kZU5hbWUhPSJmb3JtIiAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUhPSJGT1JN
IiAmJgogICAgbi5wYXJlbnROb2RlLm5vZGVOYW1lIT0idGV4dGFyZWEiICYmIG4u
cGFyZW50Tm9kZS5ub2RlTmFtZSE9IlRFWFRBUkVBIiAmJgogICAgbi5wYXJlbnRO
b2RlLm5vZGVOYW1lIT0icHJlIiAmJiBuLnBhcmVudE5vZGUubm9kZU5hbWUhPSJQ
UkUiKSB7CiAgICBzdHIgPSBuLm5vZGVWYWx1ZTsKICAgIGlmICghKHN0ciA9PSBu
dWxsKSkgewogICAgICBzdHIgPSBzdHIucmVwbGFjZSgvXHJcblxyXG4vZywiXG5c
biIpOwogICAgICBzdHIgPSBzdHIucmVwbGFjZSgvXHgyMCsvZywiICIpOwogICAg
ICBzdHIgPSBzdHIucmVwbGFjZSgvXHMqXHJcbi9nLCIgIik7CiAgICAgIG10Y2gg
PSBmYWxzZTsKICAgICAgc3RyID0gc3RyLnJlcGxhY2UobmV3IFJlZ0V4cChBTWVz
Y2FwZTEsICJnIiksCiAgICAgICAgICAgICAgZnVuY3Rpb24oKXttdGNoID0gdHJ1
ZTsgcmV0dXJuICJBTWVzY2FwZTEifSk7CiAgICAgIHN0ciA9IHN0ci5yZXBsYWNl
KC9cXD9lbmR7P2E/bWF0aH0/L2ksCiAgICAgICAgICAgICAgZnVuY3Rpb24oKXth
dXRvbWF0aHJlY29nbml6ZSA9IGZhbHNlOyBtdGNoID0gdHJ1ZTsgcmV0dXJuICIi
fSk7CiAgICAgIHN0ciA9IHN0ci5yZXBsYWNlKC9hbWF0aHxcXGJlZ2lue2E/bWF0
aH0vaSwKICAgICAgICAgICAgICBmdW5jdGlvbigpe2F1dG9tYXRocmVjb2duaXpl
ID0gdHJ1ZTsgbXRjaCA9IHRydWU7IHJldHVybiAiIn0pOwogICAgICBhcnIgPSBz
dHIuc3BsaXQoQU1kZWxpbWl0ZXIxKTsKICAgICAgaWYgKGF1dG9tYXRocmVjb2du
aXplKQogICAgICAgIGZvciAoaT0wOyBpPGFyci5sZW5ndGg7IGkrKykKICAgICAg
ICAgIGlmIChpJTI9PTApIGFycltpXSA9IEFNYXV0b21hdGhyZWMoYXJyW2ldKTsK
ICAgICAgc3RyID0gYXJyLmpvaW4oQU1kZWxpbWl0ZXIxKTsKICAgICAgYXJyID0g
c3RyLnNwbGl0KEFNZGVsaW1pdGVyMSk7CiAgICAgIGZvciAoaT0wOyBpPGFyci5s
ZW5ndGg7IGkrKykgLy8gdGhpcyBpcyBhIHByb2JsZW0gKioqKioqKioqKioqCiAg
ICAgICAgYXJyW2ldPWFycltpXS5yZXBsYWNlKC9BTWVzY2FwZTEvZyxBTWRlbGlt
aXRlcjEpOwogICAgICBpZiAoYXJyLmxlbmd0aD4xIHx8IG10Y2gpIHsKICAgICAg
ICBpZiAoY2hlY2tGb3JNYXRoTUwpIHsKICAgICAgICAgIGNoZWNrRm9yTWF0aE1M
ID0gZmFsc2U7CiAgICAgICAgICB2YXIgbmQgPSBBTWlzTWF0aE1MYXZhaWxhYmxl
KCk7CiAgICAgICAgICBBTW5vTWF0aE1MID0gbmQgIT0gbnVsbDsKICAgICAgICAg
IGlmIChBTW5vTWF0aE1MICYmIG5vdGlmeUlmTm9NYXRoTUwpIAogICAgICAgICAg
ICBpZiAoYWxlcnRJZk5vTWF0aE1MKQogICAgICAgICAgICAgIGFsZXJ0KCJUbyB2
aWV3IHRoZSBBU0NJSU1hdGhNTCBub3RhdGlvbiB1c2UgSW50ZXJuZXQgRXhwbG9y
ZXIgNiArXG5NYXRoUGxheWVyIChmcmVlIGZyb20gd3d3LmRlc3NjaS5jb20pXG5c
CiAgICAgICAgICAgICAgICBvciBGaXJlZm94L01vemlsbGEvTmV0c2NhcGUiKTsK
ICAgICAgICAgICAgZWxzZSBBTWJvZHkuaW5zZXJ0QmVmb3JlKG5kLEFNYm9keS5j
aGlsZE5vZGVzWzBdKTsKICAgICAgICB9CiAgICAgICAgaWYgKCFBTW5vTWF0aE1M
KSB7CiAgICAgICAgICBmcmcgPSBBTXN0cmFycjJkb2NGcmFnKGFycixuLm5vZGVU
eXBlPT04KTsKICAgICAgICAgIHZhciBsZW4gPSBmcmcuY2hpbGROb2Rlcy5sZW5n
dGg7CiAgICAgICAgICBuLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGZyZyxuKTsK
ICAgICAgICAgIHJldHVybiBsZW4tMTsKICAgICAgICB9IGVsc2UgcmV0dXJuIDA7
CiAgICAgIH0KICAgIH0KICAgfSBlbHNlIHJldHVybiAwOwogIH0gZWxzZSBpZiAo
bi5ub2RlTmFtZSE9Im1hdGgiKSB7CiAgICBmb3IgKGk9MDsgaTxuLmNoaWxkTm9k
ZXMubGVuZ3RoOyBpKyspCiAgICAgIGkgKz0gQU1wcm9jZXNzTm9kZVIobi5jaGls
ZE5vZGVzW2ldLCBsaW5lYnJlYWtzKTsKICB9CiAgcmV0dXJuIDA7Cn0KCmZ1bmN0
aW9uIEFNcHJvY2Vzc05vZGUobiwgbGluZWJyZWFrcywgc3BhbmNsYXNzQU0pIHsK
ICB2YXIgZnJhZyxzdDsKICBpZiAoc3BhbmNsYXNzQU0hPW51bGwpIHsKICAgIGZy
YWcgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic3BhbiIpCiAgICBm
b3IgKHZhciBpPTA7aTxmcmFnLmxlbmd0aDtpKyspCiAgICAgIGlmIChmcmFnW2ld
LmNsYXNzTmFtZSA9PSAiQU0iKQogICAgICAgIEFNcHJvY2Vzc05vZGVSKGZyYWdb
aV0sbGluZWJyZWFrcyk7CiAgfSBlbHNlIHsKICAgIHRyeSB7CiAgICAgIHN0ID0g
bi5pbm5lckhUTUw7IC8vIGxvb2sgZm9yIEFNZGVsaW1pdGVyIG9uIHBhZ2UKICAg
IH0gY2F0Y2goZXJyKSB7fQogICAgaWYgKHN0PT1udWxsIHx8IC9hbWF0aHxcXGJl
Z2lue2E/bWF0aH0vaS50ZXN0KHN0KSB8fAogICAgICBzdC5pbmRleE9mKEFNZGVs
aW1pdGVyMSsiICIpIT0tMSB8fCBzdC5zbGljZSgtMSk9PUFNZGVsaW1pdGVyMSB8
fAogICAgICBzdC5pbmRleE9mKEFNZGVsaW1pdGVyMSsiPCIpIT0tMSB8fCBzdC5p
bmRleE9mKEFNZGVsaW1pdGVyMSsiXG4iKSE9LTEpIHsKICAgICAgQU1wcm9jZXNz
Tm9kZVIobixsaW5lYnJlYWtzKTsKICAgIH0KICB9CiAgaWYgKGlzSUUpIHsgLy9u
ZWVkZWQgdG8gbWF0Y2ggc2l6ZSBhbmQgZm9udCBvZiBmb3JtdWxhIHRvIHN1cnJv
dW5kaW5nIHRleHQKICAgIGZyYWcgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFn
TmFtZSgnbWF0aCcpOwogICAgZm9yICh2YXIgaT0wO2k8ZnJhZy5sZW5ndGg7aSsr
KSBmcmFnW2ldLnVwZGF0ZSgpCiAgfQp9Cgp2YXIgQU1ib2R5Owp2YXIgQU1ub01h
dGhNTCA9IGZhbHNlLCBBTXRyYW5zbGF0ZWQgPSBmYWxzZTsKCmZ1bmN0aW9uIHRy
YW5zbGF0ZShzcGFuY2xhc3NBTSkgewogIGlmICghQU10cmFuc2xhdGVkKSB7IC8v
IHJ1biB0aGlzIG9ubHkgb25jZQogICAgQU10cmFuc2xhdGVkID0gdHJ1ZTsKICAg
IEFNYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5Iilb
MF07CiAgICB2YXIgcHJvY2Vzc04gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChB
TWRvY3VtZW50SWQpOwovLyAgICB2YXIgcHJvY2Vzc04gPSBnZXRFbGVtZW50c0J5
Q2xhc3MoQU1ib2R5LCJkaXYiLEFNZG9jdW1lbnRDbGFzcyk7CiAgICBBTXByb2Nl
c3NOb2RlKChwcm9jZXNzTiE9bnVsbD9wcm9jZXNzTjpBTWJvZHkpLCBmYWxzZSwg
c3BhbmNsYXNzQU0pOwogIH0KfQoKQU1pbml0U3ltYm9scygpOwoKLyoKTGFUZVhN
YXRoTUwuanMKPT09PT09PT09PT09PT0KClZlcnNpb24gMS4xLCBKdWx5IDIwLCAy
MDA3IChjKSBtb2RpZmljYXRpb25zIGJ5IFBldGVyIEppcHNlbgoKKGNoYW5nZXM6
IHJlbmFtZWQgZ2xvYmFsIHZhcmlhYmxlcyBmcm9tIEFNLi4uIHRvIExNLi4uIHNv
IHRoYXQKTGFUZVhNYXRoTUwgYW5kIEFTQ0lJTWF0aE1MIGNhbiBiZSB1c2VkIHNp
bXVsdGFuZW91c2x5KQoKUHJldmlvdXMgaGVhZGVyIG5vdGljZToKVGhpcyBmaWxl
IChWZXJzaW9uIDEuMCksIGlzIGR1ZSB0byBEb3VnbGFzIFdvb2RhbGwsIEp1bmUg
MjAwNi4KSXQgY29udGFpbnMgSmF2YVNjcmlwdCBmdW5jdGlvbnMgdG8gY29udmVy
dCAobW9zdCBzaW1wbGUpIExhVGVYCm1hdGggbm90YXRpb24gdG8gUHJlc2VudGF0
aW9uIE1hdGhNTC4gIEl0IHdhcyBvYnRhaW5lZCBieQpkb3dubG9hZGluZyB0aGUg
ZmlsZSBBU0NJSU1hdGhNTC5qcyBmcm9tCglodHRwOi8vd3d3MS5jaGFwbWFuLmVk
dS9+amlwc2VuL21hdGhtbC9hc2NpaW1hdGhkb3dubG9hZC8KYW5kIG1vZGlmeWlu
ZyBpdCBzbyB0aGF0IGl0IGNhcnJpZXMgb3V0IE9OTFkgdGhvc2UgY29udmVyc2lv
bnMKdGhhdCB3b3VsZCBiZSBjYXJyaWVkIG91dCBpbiBMYVRlWC4gIEEgZGVzY3Jp
cHRpb24gb2YgdGhlIG9yaWdpbmFsCmZpbGUsIHdpdGggZXhhbXBsZXMsIGNhbiBi
ZSBmb3VuZCBhdAoJd3d3MS5jaGFwbWFuLmVkdS9+amlwc2VuL21hdGhtbC9hc2Np
aW1hdGguaHRtbAoJQVNDSUlNYXRoTUw6IE1hdGggb24gdGhlIHdlYiBmb3IgZXZl
cnlvbmUKCkhlcmUgaXMgdGhlIGhlYWRlciBub3RpY2UgZnJvbSB0aGUgb3JpZ2lu
YWwgZmlsZToKCkFTQ0lJTWF0aE1MLmpzCj09PT09PT09PT09PT09ClRoaXMgZmls
ZSBjb250YWlucyBKYXZhU2NyaXB0IGZ1bmN0aW9ucyB0byBjb252ZXJ0IEFTQ0lJ
IG1hdGggbm90YXRpb24KdG8gUHJlc2VudGF0aW9uIE1hdGhNTC4gVGhlIGNvbnZl
cnNpb24gaXMgZG9uZSB3aGlsZSB0aGUgKFgpSFRNTCBwYWdlCmxvYWRzLCBhbmQg
c2hvdWxkIHdvcmsgd2l0aCBGaXJlZm94L01vemlsbGEvTmV0c2NhcGUgNysgYW5k
IEludGVybmV0CkV4cGxvcmVyIDYrTWF0aFBsYXllciAoaHR0cDovL3d3dy5kZXNz
Y2kuY29tL2VuL3Byb2R1Y3RzL21hdGhwbGF5ZXIvKS4KSnVzdCBhZGQgdGhlIG5l
eHQgbGluZSB0byB5b3VyIChYKUhUTUwgcGFnZSB3aXRoIHRoaXMgZmlsZSBpbiB0
aGUgc2FtZSBmb2xkZXI6CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBz
cmM9IkFTQ0lJTWF0aE1MLmpzIj48L3NjcmlwdD4KVGhpcyBpcyBhIGNvbnZlbmll
bnQgYW5kIGluZXhwZW5zaXZlIHNvbHV0aW9uIGZvciBhdXRob3JpbmcgTWF0aE1M
LgoKVmVyc2lvbiAxLjQuNyBEZWMgMTUsIDIwMDUsIChjKSBQZXRlciBKaXBzZW4g
aHR0cDovL3d3dy5jaGFwbWFuLmVkdS9+amlwc2VuCkxhdGVzdCB2ZXJzaW9uIGF0
IGh0dHA6Ly93d3cuY2hhcG1hbi5lZHUvfmppcHNlbi9tYXRobWwvQVNDSUlNYXRo
TUwuanMKRm9yIGNoYW5nZXMgc2VlIGh0dHA6Ly93d3cuY2hhcG1hbi5lZHUvfmpp
cHNlbi9tYXRobWwvYXNjaWltYXRoY2hhbmdlcy50eHQKSWYgeW91IHVzZSBpdCBv
biBhIHdlYnBhZ2UsIHBsZWFzZSBzZW5kIHRoZSBVUkwgdG8gamlwc2VuQGNoYXBt
YW4uZWR1CgpUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiBy
ZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQppdCB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJs
aXNoZWQgYnkKdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZl
cnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQKeW91ciBvcHRpb24pIGFu
eSBsYXRlciB2ZXJzaW9uLgoKVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGlu
IHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCmJ1dCBXSVRIT1VUIEFO
WSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9m
Ck1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVS
UE9TRS4gU2VlIHRoZSBHTlUgTGVzc2VyCkdlbmVyYWwgUHVibGljIExpY2Vuc2Ug
KGF0IGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlL2xncGwuaHRtbCkKZm9yIG1v
cmUgZGV0YWlscy4KCkxhVGVYTWF0aE1MLmpzIChjdGQpCj09PT09PT09PT09PT09
CgpDb250ZW50IGJldHdlZW4gJC4uLiQgYW5kICQkLi4uJCQgaXMgY29udmVydGVk
IGJ5IHRoaXMgcGFydCBvZiB0aGUgZmlsZQoqLwoKdmFyIExNY2hlY2tGb3JNYXRo
TUwgPSB0cnVlOyAgIC8vIGNoZWNrIGlmIGJyb3dzZXIgY2FuIGRpc3BsYXkgTWF0
aE1MCnZhciBMTW5vdGlmeUlmTm9NYXRoTUwgPSB0cnVlOyAvLyBkaXNwbGF5IG5v
dGUgaWYgbm8gTWF0aE1MIGNhcGFiaWxpdHkKdmFyIExNYWxlcnRJZk5vTWF0aE1M
ID0gZmFsc2U7ICAvLyBzaG93IGFsZXJ0IGJveCBpZiBubyBNYXRoTUwgY2FwYWJp
bGl0eQp2YXIgTE1tYXRoY29sb3IgPSAiIjsJICAgICAvLyAiIiAodG8gaW5oZXJp
dCkgb3IgY2hhbmdlIHRvIGFub3RoZXIgY29sb3IKdmFyIExNbWF0aGZvbnRmYW1p
bHkgPSAic2VyaWYiOyAvLyBjaGFuZ2UgdG8gIiIgdG8gaW5oZXJpdCAod29ya3Mg
aW4gSUUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb3IgYW5v
dGhlciBmYW1pbHkgKGUuZy4gImFyaWFsIikKdmFyIExNc2hvd2FzY2lpZm9ybXVs
YW9uaG92ZXIgPSB0cnVlOyAvLyBoZWxwcyBzdHVkZW50cyBsZWFybiBMYVRlWAoK
Ly8gYWxsIGZ1cnRoZXIgZ2xvYmFsIHZhcmlhYmxlcyBzdGFydCB3aXRoICJMTSIK
CmZ1bmN0aW9uIExNY3JlYXRlRWxlbWVudFhIVE1MKHQpIHsKICBpZiAoaXNJRSkg
cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodCk7CiAgZWxzZSByZXR1cm4g
ZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5
L3hodG1sIix0KTsKfQoKZnVuY3Rpb24gTE1ub01hdGhNTE5vdGUoKSB7CiAgdmFy
IG5kID0gTE1jcmVhdGVFbGVtZW50WEhUTUwoImgzIik7CiAgbmQuc2V0QXR0cmli
dXRlKCJhbGlnbiIsImNlbnRlciIpCiAgbmQuYXBwZW5kQ2hpbGQoTE1jcmVhdGVF
bGVtZW50WEhUTUwoInAiKSk7CiAgbmQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3Jl
YXRlVGV4dE5vZGUoIlRvIHZpZXcgdGhlICIpKTsKICB2YXIgYW4gPSBMTWNyZWF0
ZUVsZW1lbnRYSFRNTCgiYSIpOwogIGFuLmFwcGVuZENoaWxkKGRvY3VtZW50LmNy
ZWF0ZVRleHROb2RlKCJMYVRlWE1hdGhNTCIpKTsKICBhbi5zZXRBdHRyaWJ1dGUo
ImhyZWYiLCJodHRwOi8vd3d3Lm1hdGhzLm5vdHQuYWMudWsvcGVyc29uYWwvZHJ3
L2xtLmh0bWwiKTsKICBuZC5hcHBlbmRDaGlsZChhbik7CiAgbmQuYXBwZW5kQ2hp
bGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiBub3RhdGlvbiB1c2UgSW50ZXJu
ZXQgRXhwbG9yZXIgNisiKSk7IAogIGFuID0gTE1jcmVhdGVFbGVtZW50WEhUTUwo
ImEiKTsKICBhbi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgi
TWF0aFBsYXllciIpKTsKICBhbi5zZXRBdHRyaWJ1dGUoImhyZWYiLCJodHRwOi8v
d3d3LmRlc3NjaS5jb20vZW4vcHJvZHVjdHMvbWF0aHBsYXllci9kb3dubG9hZC5o
dG0iKTsKICBuZC5hcHBlbmRDaGlsZChhbik7CiAgbmQuYXBwZW5kQ2hpbGQoZG9j
dW1lbnQuY3JlYXRlVGV4dE5vZGUoIiBvciBOZXRzY2FwZS9Nb3ppbGxhL0ZpcmVm
b3giKSk7CiAgbmQuYXBwZW5kQ2hpbGQoTE1jcmVhdGVFbGVtZW50WEhUTUwoInAi
KSk7CiAgcmV0dXJuIG5kOwp9CgpmdW5jdGlvbiBMTWlzTWF0aE1MYXZhaWxhYmxl
KCkgewogIGlmIChuYXZpZ2F0b3IuYXBwTmFtZS5zbGljZSgwLDgpPT0iTmV0c2Nh
cGUiKQogICAgaWYgKG5hdmlnYXRvci5hcHBWZXJzaW9uLnNsaWNlKDAsMSk+PSI1
IikgcmV0dXJuIG51bGw7CiAgICBlbHNlIHJldHVybiBMTW5vTWF0aE1MTm90ZSgp
OwogIGVsc2UgaWYgKG5hdmlnYXRvci5hcHBOYW1lLnNsaWNlKDAsOSk9PSJNaWNy
b3NvZnQiKQogICAgdHJ5IHsKICAgICAgICB2YXIgQWN0aXZlWCA9IG5ldyBBY3Rp
dmVYT2JqZWN0KCJNYXRoUGxheWVyLkZhY3RvcnkuMSIpOwogICAgICAgIHJldHVy
biBudWxsOwogICAgfSBjYXRjaCAoZSkgewogICAgICAgIHJldHVybiBMTW5vTWF0
aE1MTm90ZSgpOwogICAgfQogIGVsc2UgcmV0dXJuIExNbm9NYXRoTUxOb3RlKCk7
Cn0KCi8vIGNoYXJhY3RlciBsaXN0cyBmb3IgTW96aWxsYS9OZXRzY2FwZSBmb250
cwp2YXIgTE1jYWwgPSBbMHhFRjM1LDB4MjEyQywweEVGMzYsMHhFRjM3LDB4MjEz
MCwweDIxMzEsMHhFRjM4LDB4MjEwQiwweDIxMTAsMHhFRjM5LDB4RUYzQSwweDIx
MTIsMHgyMTMzLDB4RUYzQiwweEVGM0MsMHhFRjNELDB4RUYzRSwweDIxMUIsMHhF
RjNGLDB4RUY0MCwweEVGNDEsMHhFRjQyLDB4RUY0MywweEVGNDQsMHhFRjQ1LDB4
RUY0Nl07CnZhciBMTWZyayA9IFsweEVGNUQsMHhFRjVFLDB4MjEyRCwweEVGNUYs
MHhFRjYwLDB4RUY2MSwweEVGNjIsMHgyMTBDLDB4MjExMSwweEVGNjMsMHhFRjY0
LDB4RUY2NSwweEVGNjYsMHhFRjY3LDB4RUY2OCwweEVGNjksMHhFRjZBLDB4MjEx
QywweEVGNkIsMHhFRjZDLDB4RUY2RCwweEVGNkUsMHhFRjZGLDB4RUY3MCwweEVG
NzEsMHgyMTI4XTsKdmFyIExNYmJiID0gWzB4RUY4QywweEVGOEQsMHgyMTAyLDB4
RUY4RSwweEVGOEYsMHhFRjkwLDB4RUY5MSwweDIxMEQsMHhFRjkyLDB4RUY5Myww
eEVGOTQsMHhFRjk1LDB4RUY5NiwweDIxMTUsMHhFRjk3LDB4MjExOSwweDIxMUEs
MHgyMTFELDB4RUY5OCwweEVGOTksMHhFRjlBLDB4RUY5QiwweEVGOUMsMHhFRjlE
LDB4RUY5RSwweDIxMjRdOwoKLy92YXIgQ09OU1QgPSAwLCBVTkFSWSA9IDEsIEJJ
TkFSWSA9IDIsIElORklYID0gMywgTEVGVEJSQUNLRVQgPSA0LAovLyAgICBSSUdI
VEJSQUNLRVQgPSA1LCBTUEFDRSA9IDYsIFVOREVST1ZFUiA9IDcsIERFRklOSVRJ
T04gPSA4LCBURVhUID0gMTAsIAp2YXIgQklHID0gMTEsIExPTkcgPSAxMiwgU1RS
RVRDSFkgPSAxMywgTUFUUklYID0gMTQ7IC8vIHRva2VuIHR5cGVzCgp2YXIgTE1z
cXJ0ID0ge2lucHV0OiJcXHNxcnQiLAl0YWc6Im1zcXJ0Iiwgb3V0cHV0OiJzcXJ0
IiwJdHR5cGU6VU5BUll9LAogIExNcm9vdCA9IHtpbnB1dDoiXFxyb290IiwJdGFn
OiJtcm9vdCIsIG91dHB1dDoicm9vdCIsCXR0eXBlOkJJTkFSWX0sCiAgTE1mcmFj
ID0ge2lucHV0OiJcXGZyYWMiLAl0YWc6Im1mcmFjIiwgb3V0cHV0OiIvIiwJdHR5
cGU6QklOQVJZfSwKICBMTW92ZXIgPSB7aW5wdXQ6Ilxcc3RhY2tyZWwiLCB0YWc6
Im1vdmVyIiwgb3V0cHV0OiJzdGFja3JlbCIsIHR0eXBlOkJJTkFSWX0sCiAgTE1h
dG9wID0ge2lucHV0OiJcXGF0b3AiLAl0YWc6Im1mcmFjIiwgb3V0cHV0OiIiLAkJ
dHR5cGU6SU5GSVh9LAogIExNY2hvb3NlID0ge2lucHV0OiJcXGNob29zZSIsIHRh
ZzoibWZyYWMiLCBvdXRwdXQ6IiIsCQl0dHlwZTpJTkZJWH0sCiAgTE1zdWIgID0g
e2lucHV0OiJfIiwJCXRhZzoibXN1YiIsICBvdXRwdXQ6Il8iLAl0dHlwZTpJTkZJ
WH0sCiAgTE1zdXAgID0ge2lucHV0OiJeIiwJCXRhZzoibXN1cCIsICBvdXRwdXQ6
Il4iLAl0dHlwZTpJTkZJWH0sCiAgTE10ZXh0ID0ge2lucHV0OiJcXG1hdGhybSIs
CXRhZzoibXRleHQiLCBvdXRwdXQ6InRleHQiLAl0dHlwZTpURVhUfSwKICBMTW1i
b3ggPSB7aW5wdXQ6IlxcbWJveCIsCXRhZzoibXRleHQiLCBvdXRwdXQ6Im1ib3gi
LAl0dHlwZTpURVhUfTsKCi8vIENvbW1lbnRlZCBvdXQgYnkgRFJXIHRvIHByZXZl
bnQgMS8yIHR1cm5pbmcgaW50byBhIDItbGluZSBmcmFjdGlvbgovLyBMTWRpdiAg
ID0ge2lucHV0OiIvIiwJIHRhZzoibWZyYWMiLCBvdXRwdXQ6Ii8iLCAgICB0dHlw
ZTpJTkZJWH0sCi8vIENvbW1lbnRlZCBvdXQgYnkgRFJXIHNvIHRoYXQgIiBwcmlu
dHMgbGl0ZXJhbGx5IGluIGVxdWF0aW9ucwovLyBMTXF1b3RlID0ge2lucHV0OiJc
IiIsCSB0YWc6Im10ZXh0Iiwgb3V0cHV0OiJtYm94IiwgdHR5cGU6VEVYVH07Cgp2
YXIgTE1zeW1ib2xzID0gWwovL0dyZWVrIGxldHRlcnMKe2lucHV0OiJcXGFscGhh
IiwJdGFnOiJtaSIsIG91dHB1dDoiXHUwM0IxIiwgdHR5cGU6Q09OU1R9LAp7aW5w
dXQ6IlxcYmV0YSIsCXRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNCMiIsIHR0eXBlOkNP
TlNUfSwKe2lucHV0OiJcXGdhbW1hIiwJdGFnOiJtaSIsIG91dHB1dDoiXHUwM0Iz
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZGVsdGEiLAl0YWc6Im1pIiwgb3V0
cHV0OiJcdTAzQjQiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxlcHNpbG9uIiwJ
dGFnOiJtaSIsIG91dHB1dDoiXHUwM0I1IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
IlxcdmFyZXBzaWxvbiIsICB0YWc6Im1pIiwgb3V0cHV0OiJcdTAyNUIiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiXFx6ZXRhIiwJdGFnOiJtaSIsIG91dHB1dDoiXHUw
M0I2IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZXRhIiwJCXRhZzoibWkiLCBv
dXRwdXQ6Ilx1MDNCNyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHRoZXRhIiwJ
dGFnOiJtaSIsIG91dHB1dDoiXHUwM0I4IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
IlxcdmFydGhldGEiLAl0YWc6Im1pIiwgb3V0cHV0OiJcdTAzRDEiLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoiXFxpb3RhIiwJdGFnOiJtaSIsIG91dHB1dDoiXHUwM0I5
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxca2FwcGEiLAl0YWc6Im1pIiwgb3V0
cHV0OiJcdTAzQkEiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxsYW1iZGEiLAl0
YWc6Im1pIiwgb3V0cHV0OiJcdTAzQkIiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoi
XFxtdSIsCQl0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQkMiLCB0dHlwZTpDT05TVH0s
CntpbnB1dDoiXFxudSIsCQl0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQkQiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiXFx4aSIsCQl0YWc6Im1pIiwgb3V0cHV0OiJcdTAz
QkUiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxwaSIsCQl0YWc6Im1pIiwgb3V0
cHV0OiJcdTAzQzAiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFx2YXJwaSIsCXRh
ZzoibWkiLCBvdXRwdXQ6Ilx1MDNENiIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJc
XHJobyIsCQl0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQzEiLCB0dHlwZTpDT05TVH0s
CntpbnB1dDoiXFx2YXJyaG8iLAl0YWc6Im1pIiwgb3V0cHV0OiJcdTAzRjEiLCB0
dHlwZTpDT05TVH0sCntpbnB1dDoiXFx2YXJzaWdtYSIsCXRhZzoibWkiLCBvdXRw
dXQ6Ilx1MDNDMiIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHNpZ21hIiwJdGFn
OiJtaSIsIG91dHB1dDoiXHUwM0MzIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxc
dGF1IiwJCXRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNDNCIsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiJcXHVwc2lsb24iLAl0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQzUiLCB0
dHlwZTpDT05TVH0sCntpbnB1dDoiXFxwaGkiLAkJdGFnOiJtaSIsIG91dHB1dDoi
XHUwM0M2IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcdmFycGhpIiwJdGFnOiJt
aSIsIG91dHB1dDoiXHUwM0Q1IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcY2hp
IiwJCXRhZzoibWkiLCBvdXRwdXQ6Ilx1MDNDNyIsIHR0eXBlOkNPTlNUfSwKe2lu
cHV0OiJcXHBzaSIsCQl0YWc6Im1pIiwgb3V0cHV0OiJcdTAzQzgiLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoiXFxvbWVnYSIsCXRhZzoibWkiLCBvdXRwdXQ6Ilx1MDND
OSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXEdhbW1hIiwJdGFnOiJtbyIsIG91
dHB1dDoiXHUwMzkzIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcRGVsdGEiLAl0
YWc6Im1vIiwgb3V0cHV0OiJcdTAzOTQiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoi
XFxUaGV0YSIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MDM5OCIsIHR0eXBlOkNPTlNU
fSwKe2lucHV0OiJcXExhbWJkYSIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MDM5QiIs
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXFhpIiwJCXRhZzoibW8iLCBvdXRwdXQ6
Ilx1MDM5RSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXFBpIiwJCXRhZzoibW8i
LCBvdXRwdXQ6Ilx1MDNBMCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXFNpZ21h
IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUwM0EzIiwgdHR5cGU6Q09OU1R9LAp7aW5w
dXQ6IlxcVXBzaWxvbiIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MDNBNSIsIHR0eXBl
OkNPTlNUfSwKe2lucHV0OiJcXFBoaSIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTAz
QTYiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxQc2kiLAkJdGFnOiJtbyIsIG91
dHB1dDoiXHUwM0E4IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcT21lZ2EiLAl0
YWc6Im1vIiwgb3V0cHV0OiJcdTAzQTkiLCB0dHlwZTpDT05TVH0sCgovL2ZyYWN0
aW9ucwp7aW5wdXQ6IlxcZnJhYzEyIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUwMEJE
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzE0IiwJdGFnOiJtbyIsIG91
dHB1dDoiXHUwMEJDIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzM0IiwJ
dGFnOiJtbyIsIG91dHB1dDoiXHUwMEJFIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
IlxcZnJhYzEzIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTUzIiwgdHR5cGU6Q09O
U1R9LAp7aW5wdXQ6IlxcZnJhYzIzIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTU0
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzE1IiwJdGFnOiJtbyIsIG91
dHB1dDoiXHUyMTU1IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzI1IiwJ
dGFnOiJtbyIsIG91dHB1dDoiXHUyMTU2IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
IlxcZnJhYzM1IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTU3IiwgdHR5cGU6Q09O
U1R9LAp7aW5wdXQ6IlxcZnJhYzQ1IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTU4
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzE2IiwJdGFnOiJtbyIsIG91
dHB1dDoiXHUyMTU5IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzU2IiwJ
dGFnOiJtbyIsIG91dHB1dDoiXHUyMTVBIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
IlxcZnJhYzE4IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTVCIiwgdHR5cGU6Q09O
U1R9LAp7aW5wdXQ6IlxcZnJhYzM4IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTVD
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzU4IiwJdGFnOiJtbyIsIG91
dHB1dDoiXHUyMTVEIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZnJhYzc4IiwJ
dGFnOiJtbyIsIG91dHB1dDoiXHUyMTVFIiwgdHR5cGU6Q09OU1R9LAoKLy9iaW5h
cnkgb3BlcmF0aW9uIHN5bWJvbHMKe2lucHV0OiJcXHBtIiwJCXRhZzoibW8iLCBv
dXRwdXQ6Ilx1MDBCMSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXG1wIiwJCXRh
ZzoibW8iLCBvdXRwdXQ6Ilx1MjIxMyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJc
XHRyaWFuZ2xlbGVmdCIsdGFnOiJtbyIsIG91dHB1dDoiXHUyMkIyIiwgdHR5cGU6
Q09OU1R9LAp7aW5wdXQ6IlxcdHJpYW5nbGVyaWdodCIsdGFnOiJtbyIsb3V0cHV0
OiJcdTIyQjMiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxjZG90IiwJdGFnOiJt
byIsIG91dHB1dDoiXHUyMkM1IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxcc3Rh
ciIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJDNiIsIHR0eXBlOkNPTlNUfSwKe2lu
cHV0OiJcXGFzdCIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTAwMkEiLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoiXFx0aW1lcyIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MDBE
NyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGRpdiIsCQl0YWc6Im1vIiwgb3V0
cHV0OiJcdTAwRjciLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxjaXJjIiwJdGFn
OiJtbyIsIG91dHB1dDoiXHUyMjE4IiwgdHR5cGU6Q09OU1R9LAovL3tpbnB1dDoi
XFxidWxsZXQiLAkgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIxOSIsIHR0eXBlOkNP
TlNUfSwKe2lucHV0OiJcXGJ1bGxldCIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjAy
MiIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXG9wbHVzIiwJdGFnOiJtbyIsIG91
dHB1dDoiXHUyMjk1IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxcb21pbnVzIiwJ
dGFnOiJtbyIsIG91dHB1dDoiXHUyMjk2IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6
Ilxcb3RpbWVzIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjk3IiwgdHR5cGU6Q09O
U1R9LAp7aW5wdXQ6IlxcYmlnY2lyYyIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjVD
QiIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXG9zbGFzaCIsCXRhZzoibW8iLCBv
dXRwdXQ6Ilx1MjI5OCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXG9kb3QiLAl0
YWc6Im1vIiwgb3V0cHV0OiJcdTIyOTkiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoi
XFxsYW5kIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjI3IiwgdHR5cGU6Q09OU1R9
LAp7aW5wdXQ6Ilxcd2VkZ2UiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMjciLCB0
dHlwZTpDT05TVH0sCntpbnB1dDoiXFxsb3IiLAkJdGFnOiJtbyIsIG91dHB1dDoi
XHUyMjI4IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcdmVlIiwJCXRhZzoibW8i
LCBvdXRwdXQ6Ilx1MjIyOCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGNhcCIs
CQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMjkiLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiXFxjdXAiLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjJBIiwgdHR5cGU6Q09O
U1R9LAp7aW5wdXQ6Ilxcc3FjYXAiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyOTMi
LCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxzcWN1cCIsCXRhZzoibW8iLCBvdXRw
dXQ6Ilx1MjI5NCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHVwbHVzIiwJdGFn
OiJtbyIsIG91dHB1dDoiXHUyMjhFIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxc
YW1hbGciLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMTAiLCB0dHlwZTpDT05TVH0s
CntpbnB1dDoiXFxiaWd0cmlhbmdsZXVwIix0YWc6Im1vIixvdXRwdXQ6Ilx1MjVC
MyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGJpZ3RyaWFuZ2xlZG93biIsdGFn
OiJtbyIsb3V0cHV0OiJcdTI1QkQiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxk
YWciLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMDIwIiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlxcZGFnZ2VyIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMDIwIiwgdHR5
cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZGRhZyIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1
MjAyMSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGRkYWdnZXIiLAl0YWc6Im1v
Iiwgb3V0cHV0OiJcdTIwMjEiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxsaGQi
LAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMkIyIiwgdHR5cGU6Q09OU1R9LAp7aW5w
dXQ6IlxccmhkIiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJCMyIsIHR0eXBlOkNP
TlNUfSwKe2lucHV0OiJcXHVubGhkIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMkI0
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcdW5yaGQiLAl0YWc6Im1vIiwgb3V0
cHV0OiJcdTIyQjUiLCB0dHlwZTpDT05TVH0sCgoKLy9CSUcgT3BlcmF0b3JzCntp
bnB1dDoiXFxzdW0iLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjExIiwgdHR5cGU6
VU5ERVJPVkVSfSwKe2lucHV0OiJcXHByb2QiLAl0YWc6Im1vIiwgb3V0cHV0OiJc
dTIyMEYiLCB0dHlwZTpVTkRFUk9WRVJ9LAp7aW5wdXQ6IlxcYmlnY2FwIiwJdGFn
OiJtbyIsIG91dHB1dDoiXHUyMkMyIiwgdHR5cGU6VU5ERVJPVkVSfSwKe2lucHV0
OiJcXGJpZ2N1cCIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJDMyIsIHR0eXBlOlVO
REVST1ZFUn0sCntpbnB1dDoiXFxiaWd3ZWRnZSIsCXRhZzoibW8iLCBvdXRwdXQ6
Ilx1MjJDMCIsIHR0eXBlOlVOREVST1ZFUn0sCntpbnB1dDoiXFxiaWd2ZWUiLAl0
YWc6Im1vIiwgb3V0cHV0OiJcdTIyQzEiLCB0dHlwZTpVTkRFUk9WRVJ9LAp7aW5w
dXQ6IlxcYmlnc3FjYXAiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTJBMDUiLCB0dHlw
ZTpVTkRFUk9WRVJ9LAp7aW5wdXQ6IlxcYmlnc3FjdXAiLAl0YWc6Im1vIiwgb3V0
cHV0OiJcdTJBMDYiLCB0dHlwZTpVTkRFUk9WRVJ9LAp7aW5wdXQ6IlxcY29wcm9k
IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjEwIiwgdHR5cGU6VU5ERVJPVkVSfSwK
e2lucHV0OiJcXGJpZ29wbHVzIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyQTAxIiwg
dHR5cGU6VU5ERVJPVkVSfSwKe2lucHV0OiJcXGJpZ290aW1lcyIsCXRhZzoibW8i
LCBvdXRwdXQ6Ilx1MkEwMiIsIHR0eXBlOlVOREVST1ZFUn0sCntpbnB1dDoiXFxi
aWdvZG90IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyQTAwIiwgdHR5cGU6VU5ERVJP
VkVSfSwKe2lucHV0OiJcXGJpZ3VwbHVzIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUy
QTA0IiwgdHR5cGU6VU5ERVJPVkVSfSwKe2lucHV0OiJcXGludCIsCQl0YWc6Im1v
Iiwgb3V0cHV0OiJcdTIyMkIiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxvaW50
IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjJFIiwgdHR5cGU6Q09OU1R9LAoKLy9i
aW5hcnkgcmVsYXRpb24gc3ltYm9scwp7aW5wdXQ6Ijo9IiwJCXRhZzoibW8iLCBv
dXRwdXQ6Ijo9IiwJICAgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcbHQiLAkJdGFn
OiJtbyIsIG91dHB1dDoiPCIsCSAgIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGd0
IiwJCXRhZzoibW8iLCBvdXRwdXQ6Ij4iLAkgICB0dHlwZTpDT05TVH0sCntpbnB1
dDoiXFxuZSIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyNjAiLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiXFxuZXEiLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjYwIiwg
dHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcbGUiLAkJdGFnOiJtbyIsIG91dHB1dDoi
XHUyMjY0IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcbGVxIiwJCXRhZzoibW8i
LCBvdXRwdXQ6Ilx1MjI2NCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGxlcXNs
YW50IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjY0IiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlxcZ2UiLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjY1IiwgdHR5cGU6
Q09OU1R9LAp7aW5wdXQ6IlxcZ2VxIiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjI2
NSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGdlcXNsYW50IiwJdGFnOiJtbyIs
IG91dHB1dDoiXHUyMjY1IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcZXF1aXYi
LAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyNjEiLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiXFxsbCIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyNkEiLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiXFxnZyIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyNkIiLCB0
dHlwZTpDT05TVH0sCntpbnB1dDoiXFxkb3RlcSIsCXRhZzoibW8iLCBvdXRwdXQ6
Ilx1MjI1MCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHByZWMiLAl0YWc6Im1v
Iiwgb3V0cHV0OiJcdTIyN0EiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxzdWNj
IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjdCIiwgdHR5cGU6Q09OU1R9LAp7aW5w
dXQ6IlxccHJlY2VxIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjdDIiwgdHR5cGU6
Q09OU1R9LAp7aW5wdXQ6Ilxcc3VjY2VxIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUy
MjdEIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxcc3Vic2V0IiwJdGFnOiJtbyIs
IG91dHB1dDoiXHUyMjgyIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxcc3Vwc2V0
IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjgzIiwgdHR5cGU6Q09OU1R9LAp7aW5w
dXQ6Ilxcc3Vic2V0ZXEiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyODYiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiXFxzdXBzZXRlcSIsCXRhZzoibW8iLCBvdXRwdXQ6
Ilx1MjI4NyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHNxc3Vic2V0IiwJdGFn
OiJtbyIsIG91dHB1dDoiXHUyMjhGIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxc
c3FzdXBzZXQiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyOTAiLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiXFxzcXN1YnNldGVxIiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1
MjI5MSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHNxc3Vwc2V0ZXEiLCAgdGFn
OiJtbyIsIG91dHB1dDoiXHUyMjkyIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxc
c2ltIiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIzQyIsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiJcXHNpbWVxIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjQzIiwgdHR5
cGU6Q09OU1R9LAp7aW5wdXQ6IlxcYXBwcm94IiwJdGFnOiJtbyIsIG91dHB1dDoi
XHUyMjQ4IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcY29uZyIsCXRhZzoibW8i
LCBvdXRwdXQ6Ilx1MjI0NSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXEpvaW4i
LAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyQzgiLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiXFxib3d0aWUiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyQzgiLCB0dHlwZTpD
T05TVH0sCntpbnB1dDoiXFxpbiIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMDgi
LCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxuaSIsCQl0YWc6Im1vIiwgb3V0cHV0
OiJcdTIyMEIiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxvd25zIiwJdGFnOiJt
byIsIG91dHB1dDoiXHUyMjBCIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxccHJv
cHRvIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjFEIiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlxcdmRhc2giLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyQTIiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiXFxkYXNodiIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1
MjJBMyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXG1vZGVscyIsCXRhZzoibW8i
LCBvdXRwdXQ6Ilx1MjJBOCIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHBlcnAi
LAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyQTUiLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiXFxzbWlsZSIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjMyMyIsIHR0eXBlOkNP
TlNUfSwKe2lucHV0OiJcXGZyb3duIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMzIy
IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcYXN5bXAiLAl0YWc6Im1vIiwgb3V0
cHV0OiJcdTIyNEQiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxub3RpbiIsCXRh
ZzoibW8iLCBvdXRwdXQ6Ilx1MjIwOSIsIHR0eXBlOkNPTlNUfSwKCi8vbWF0cmlj
ZXMKe2lucHV0OiJcXGJlZ2lue2VxbmFycmF5fSIsCW91dHB1dDoiWCIsCXR0eXBl
Ok1BVFJJWCwgaW52aXNpYmxlOnRydWV9LAp7aW5wdXQ6IlxcYmVnaW57YXJyYXl9
IiwJb3V0cHV0OiJYIiwJdHR5cGU6TUFUUklYLCBpbnZpc2libGU6dHJ1ZX0sCntp
bnB1dDoiXFxcXCIsCQkJb3V0cHV0OiJ9JnsiLAl0dHlwZTpERUZJTklUSU9OfSwK
e2lucHV0OiJcXGVuZHtlcW5hcnJheX0iLAlvdXRwdXQ6In19IiwJdHR5cGU6REVG
SU5JVElPTn0sCntpbnB1dDoiXFxlbmR7YXJyYXl9IiwJCW91dHB1dDoifX0iLAl0
dHlwZTpERUZJTklUSU9OfSwKCi8vZ3JvdXBpbmcgYW5kIGxpdGVyYWwgYnJhY2tl
dHMgLS0gaWV2YWwgaXMgZm9yIElFCntpbnB1dDoiXFxiaWciLAkgICB0YWc6Im1v
Iiwgb3V0cHV0OiJYIiwgYXR2YWw6IjEuMiIsIGlldmFsOiIyLjIiLCB0dHlwZTpC
SUd9LAp7aW5wdXQ6IlxcQmlnIiwJICAgdGFnOiJtbyIsIG91dHB1dDoiWCIsIGF0
dmFsOiIxLjYiLCBpZXZhbDoiMi42IiwgdHR5cGU6QklHfSwKe2lucHV0OiJcXGJp
Z2ciLCAgIHRhZzoibW8iLCBvdXRwdXQ6IlgiLCBhdHZhbDoiMi4yIiwgaWV2YWw6
IjMuMiIsIHR0eXBlOkJJR30sCntpbnB1dDoiXFxCaWdnIiwgICB0YWc6Im1vIiwg
b3V0cHV0OiJYIiwgYXR2YWw6IjIuOSIsIGlldmFsOiIzLjkiLCB0dHlwZTpCSUd9
LAp7aW5wdXQ6IlxcbGVmdCIsICAgdGFnOiJtbyIsIG91dHB1dDoiWCIsIHR0eXBl
OkxFRlRCUkFDS0VUfSwKe2lucHV0OiJcXHJpZ2h0IiwgIHRhZzoibW8iLCBvdXRw
dXQ6IlgiLCB0dHlwZTpSSUdIVEJSQUNLRVR9LAp7aW5wdXQ6InsiLAkgICBvdXRw
dXQ6InsiLCB0dHlwZTpMRUZUQlJBQ0tFVCwgIGludmlzaWJsZTp0cnVlfSwKe2lu
cHV0OiJ9IiwJICAgb3V0cHV0OiJ9IiwgdHR5cGU6UklHSFRCUkFDS0VULCBpbnZp
c2libGU6dHJ1ZX0sCgp7aW5wdXQ6IigiLAkgICB0YWc6Im1vIiwgb3V0cHV0OiIo
IiwgICAgICBhdHZhbDoiMSIsIHR0eXBlOlNUUkVUQ0hZfSwKe2lucHV0OiJbIiwJ
ICAgdGFnOiJtbyIsIG91dHB1dDoiWyIsICAgICAgYXR2YWw6IjEiLCB0dHlwZTpT
VFJFVENIWX0sCntpbnB1dDoiXFxsYnJhY2siLCB0YWc6Im1vIiwgb3V0cHV0OiJb
IiwgICAgICBhdHZhbDoiMSIsIHR0eXBlOlNUUkVUQ0hZfSwKe2lucHV0OiJcXHsi
LAkgICB0YWc6Im1vIiwgb3V0cHV0OiJ7IiwgICAgICBhdHZhbDoiMSIsIHR0eXBl
OlNUUkVUQ0hZfSwKe2lucHV0OiJcXGxicmFjZSIsIHRhZzoibW8iLCBvdXRwdXQ6
InsiLCAgICAgIGF0dmFsOiIxIiwgdHR5cGU6U1RSRVRDSFl9LAp7aW5wdXQ6Ilxc
bGFuZ2xlIiwgdGFnOiJtbyIsIG91dHB1dDoiXHUyMzI5IiwgYXR2YWw6IjEiLCB0
dHlwZTpTVFJFVENIWX0sCntpbnB1dDoiXFxsZmxvb3IiLCB0YWc6Im1vIiwgb3V0
cHV0OiJcdTIzMEEiLCBhdHZhbDoiMSIsIHR0eXBlOlNUUkVUQ0hZfSwKe2lucHV0
OiJcXGxjZWlsIiwgIHRhZzoibW8iLCBvdXRwdXQ6Ilx1MjMwOCIsIGF0dmFsOiIx
IiwgdHR5cGU6U1RSRVRDSFl9LAoKLy8gcnRhZzoibWkiIGNhdXNlcyBzcGFjZSB0
byBiZSBpbnNlcnRlZCBiZWZvcmUgYSBmb2xsb3dpbmcgc2luLCBjb3MsIGV0Yy4K
Ly8gKHNlZSBmdW5jdGlvbiBMTXBhcnNlRXhwcigpICkKe2lucHV0OiIpIiwJICB0
YWc6Im1vIixvdXRwdXQ6IikiLAkgICAgcnRhZzoibWkiLGF0dmFsOiIxIix0dHlw
ZTpTVFJFVENIWX0sCntpbnB1dDoiXSIsCSAgdGFnOiJtbyIsb3V0cHV0OiJdIiwJ
ICAgIHJ0YWc6Im1pIixhdHZhbDoiMSIsdHR5cGU6U1RSRVRDSFl9LAp7aW5wdXQ6
IlxccmJyYWNrIix0YWc6Im1vIixvdXRwdXQ6Il0iLAkgICAgcnRhZzoibWkiLGF0
dmFsOiIxIix0dHlwZTpTVFJFVENIWX0sCntpbnB1dDoiXFx9IiwJICB0YWc6Im1v
IixvdXRwdXQ6In0iLAkgICAgcnRhZzoibWkiLGF0dmFsOiIxIix0dHlwZTpTVFJF
VENIWX0sCntpbnB1dDoiXFxyYnJhY2UiLHRhZzoibW8iLG91dHB1dDoifSIsCSAg
ICBydGFnOiJtaSIsYXR2YWw6IjEiLHR0eXBlOlNUUkVUQ0hZfSwKe2lucHV0OiJc
XHJhbmdsZSIsdGFnOiJtbyIsb3V0cHV0OiJcdTIzMkEiLCBydGFnOiJtaSIsYXR2
YWw6IjEiLHR0eXBlOlNUUkVUQ0hZfSwKe2lucHV0OiJcXHJmbG9vciIsdGFnOiJt
byIsb3V0cHV0OiJcdTIzMEIiLCBydGFnOiJtaSIsYXR2YWw6IjEiLHR0eXBlOlNU
UkVUQ0hZfSwKe2lucHV0OiJcXHJjZWlsIiwgdGFnOiJtbyIsb3V0cHV0OiJcdTIz
MDkiLCBydGFnOiJtaSIsYXR2YWw6IjEiLHR0eXBlOlNUUkVUQ0hZfSwKCi8vICJ8
IiwgIlxcfCIsICJcXHZlcnQiIGFuZCAiXFxWZXJ0IiBtb2RpZmllZCBsYXRlcjog
bHNwYWNlID0gcnNwYWNlID0gMGVtCntpbnB1dDoifCIsCQl0YWc6Im1vIiwgb3V0
cHV0OiJcdTIyMjMiLCBhdHZhbDoiMSIsIHR0eXBlOlNUUkVUQ0hZfSwKe2lucHV0
OiJcXHwiLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjI1IiwgYXR2YWw6IjEiLCB0
dHlwZTpTVFJFVENIWX0sCntpbnB1dDoiXFx2ZXJ0IiwJdGFnOiJtbyIsIG91dHB1
dDoiXHUyMjIzIiwgYXR2YWw6IjEiLCB0dHlwZTpTVFJFVENIWX0sCntpbnB1dDoi
XFxWZXJ0IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjI1IiwgYXR2YWw6IjEiLCB0
dHlwZTpTVFJFVENIWX0sCntpbnB1dDoiXFxtaWQiLAkJdGFnOiJtbyIsIG91dHB1
dDoiXHUyMjIzIiwgYXR2YWw6IjEiLCB0dHlwZTpTVFJFVENIWX0sCntpbnB1dDoi
XFxwYXJhbGxlbCIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIyNSIsIGF0dmFsOiIx
IiwgdHR5cGU6U1RSRVRDSFl9LAp7aW5wdXQ6Ii8iLAkJdGFnOiJtbyIsIG91dHB1
dDoiLyIsCWF0dmFsOiIxLjAxIiwgdHR5cGU6U1RSRVRDSFl9LAp7aW5wdXQ6Ilxc
YmFja3NsYXNoIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjE2IiwgYXR2YWw6IjEi
LCB0dHlwZTpTVFJFVENIWX0sCntpbnB1dDoiXFxzZXRtaW51cyIsCXRhZzoibW8i
LCBvdXRwdXQ6IlxcIiwJICAgdHR5cGU6Q09OU1R9LAoKLy9taXNjZWxsYW5lb3Vz
IHN5bWJvbHMKe2lucHV0OiJcXCEiLAkgIHRhZzoibXNwYWNlIiwgYXRuYW1lOiJ3
aWR0aCIsIGF0dmFsOiItMC4xNjdlbSIsIHR0eXBlOlNQQUNFfSwKe2lucHV0OiJc
XCwiLAkgIHRhZzoibXNwYWNlIiwgYXRuYW1lOiJ3aWR0aCIsIGF0dmFsOiIwLjE2
N2VtIiwgdHR5cGU6U1BBQ0V9LAp7aW5wdXQ6IlxcPiIsCSAgdGFnOiJtc3BhY2Ui
LCBhdG5hbWU6IndpZHRoIiwgYXR2YWw6IjAuMjIyZW0iLCB0dHlwZTpTUEFDRX0s
CntpbnB1dDoiXFw6IiwJICB0YWc6Im1zcGFjZSIsIGF0bmFtZToid2lkdGgiLCBh
dHZhbDoiMC4yMjJlbSIsIHR0eXBlOlNQQUNFfSwKe2lucHV0OiJcXDsiLAkgIHRh
ZzoibXNwYWNlIiwgYXRuYW1lOiJ3aWR0aCIsIGF0dmFsOiIwLjI3OGVtIiwgdHR5
cGU6U1BBQ0V9LAp7aW5wdXQ6In4iLAkgIHRhZzoibXNwYWNlIiwgYXRuYW1lOiJ3
aWR0aCIsIGF0dmFsOiIwLjMzM2VtIiwgdHR5cGU6U1BBQ0V9LAp7aW5wdXQ6Ilxc
cXVhZCIsICB0YWc6Im1zcGFjZSIsIGF0bmFtZToid2lkdGgiLCBhdHZhbDoiMWVt
IiwgdHR5cGU6U1BBQ0V9LAp7aW5wdXQ6IlxccXF1YWQiLCB0YWc6Im1zcGFjZSIs
IGF0bmFtZToid2lkdGgiLCBhdHZhbDoiMmVtIiwgdHR5cGU6U1BBQ0V9LAovL3tp
bnB1dDoie30iLAkJICB0YWc6Im1vIiwgb3V0cHV0OiJcdTIwMEIiLCB0dHlwZTpD
T05TVH0sIC8vIHplcm8td2lkdGgKe2lucHV0OiJcXHByaW1lIiwJdGFnOiJtbyIs
IG91dHB1dDoiXHUyMDMyIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IiciLAkJdGFn
OiJtbyIsIG91dHB1dDoiXHUwMkI5IiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Iicn
IiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MDJCQSIsIHR0eXBlOkNPTlNUfSwKe2lu
cHV0OiInJyciLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMDM0IiwgdHR5cGU6Q09O
U1R9LAp7aW5wdXQ6IicnJyciLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMDU3Iiwg
dHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcbGRvdHMiLAl0YWc6Im1vIiwgb3V0cHV0
OiJcdTIwMjYiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxjZG90cyIsCXRhZzoi
bW8iLCBvdXRwdXQ6Ilx1MjJFRiIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHZk
b3RzIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMkVFIiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlxcZGRvdHMiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyRjEiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiXFxmb3JhbGwiLAl0YWc6Im1vIiwgb3V0cHV0OiJc
dTIyMDAiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxleGlzdHMiLAl0YWc6Im1v
Iiwgb3V0cHV0OiJcdTIyMDMiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxSZSIs
CQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIxMUMiLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiXFxJbSIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIxMTEiLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiXFxhbGVwaCIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjEzNSIs
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGhiYXIiLAl0YWc6Im1vIiwgb3V0cHV0
OiJcdTIxMEYiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxlbGwiLAkJdGFnOiJt
byIsIG91dHB1dDoiXHUyMTEzIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6Ilxcd3Ai
LAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTE4IiwgdHR5cGU6Q09OU1R9LAp7aW5w
dXQ6IlxcZW1wdHlzZXQiLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMDUiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiXFxpbmZ0eSIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1
MjIxRSIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXHN1cmQiLAl0YWc6Im1vIiwg
b3V0cHV0OiJcXHNxcnR7fSIsIHR0eXBlOkRFRklOSVRJT059LAp7aW5wdXQ6Ilxc
cGFydGlhbCIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIwMiIsIHR0eXBlOkNPTlNU
fSwKe2lucHV0OiJcXG5hYmxhIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMjA3Iiwg
dHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcdHJpYW5nbGUiLAl0YWc6Im1vIiwgb3V0
cHV0OiJcdTI1QjMiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFx0aGVyZWZvcmUi
LAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIyMzQiLCB0dHlwZTpDT05TVH0sCntpbnB1
dDoiXFxhbmdsZSIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjIyMCIsIHR0eXBlOkNP
TlNUfSwKLy97aW5wdXQ6IlxcXFwgIiwJICB0YWc6Im1vIiwgb3V0cHV0OiJcdTAw
QTAiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxkaWFtb25kIiwJdGFnOiJtbyIs
IG91dHB1dDoiXHUyMkM0IiwgdHR5cGU6Q09OU1R9LAovL3tpbnB1dDoiXFxEaWFt
b25kIiwJICB0YWc6Im1vIiwgb3V0cHV0OiJcdTI1Q0EiLCB0dHlwZTpDT05TVH0s
CntpbnB1dDoiXFxEaWFtb25kIiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyNUM3Iiwg
dHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcbmVnIiwJCXRhZzoibW8iLCBvdXRwdXQ6
Ilx1MDBBQyIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGxub3QiLAl0YWc6Im1v
Iiwgb3V0cHV0OiJcdTAwQUMiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxib3Qi
LAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMkE1IiwgdHR5cGU6Q09OU1R9LAp7aW5w
dXQ6IlxcdG9wIiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjJBNCIsIHR0eXBlOkNP
TlNUfSwKe2lucHV0OiJcXHNxdWFyZSIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjVB
QiIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXEJveCIsCQl0YWc6Im1vIiwgb3V0
cHV0OiJcdTI1QTEiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFx3ciIsCQl0YWc6
Im1vIiwgb3V0cHV0OiJcdTIyNDAiLCB0dHlwZTpDT05TVH0sCgovL3N0YW5kYXJk
IGZ1bmN0aW9ucwovL05vdGUgVU5ERVJPVkVSICptdXN0KiBoYXZlIHRhZzoibW8i
IHRvIHdvcmsgcHJvcGVybHkKe2lucHV0OiJcXGFyY2NvcyIsIHRhZzoibWkiLCBv
dXRwdXQ6ImFyY2NvcyIsIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5wdXQ6
IlxcYXJjc2luIiwgdGFnOiJtaSIsIG91dHB1dDoiYXJjc2luIiwgdHR5cGU6VU5B
UlksIGZ1bmM6dHJ1ZX0sCntpbnB1dDoiXFxhcmN0YW4iLCB0YWc6Im1pIiwgb3V0
cHV0OiJhcmN0YW4iLCB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJc
XGFyZyIsCSAgIHRhZzoibWkiLCBvdXRwdXQ6ImFyZyIsICAgIHR0eXBlOlVOQVJZ
LCBmdW5jOnRydWV9LAp7aW5wdXQ6IlxcY29zIiwJICAgdGFnOiJtaSIsIG91dHB1
dDoiY29zIiwgICAgdHR5cGU6VU5BUlksIGZ1bmM6dHJ1ZX0sCntpbnB1dDoiXFxj
b3NoIiwgICB0YWc6Im1pIiwgb3V0cHV0OiJjb3NoIiwgICB0dHlwZTpVTkFSWSwg
ZnVuYzp0cnVlfSwKe2lucHV0OiJcXGNvdCIsCSAgIHRhZzoibWkiLCBvdXRwdXQ6
ImNvdCIsICAgIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5wdXQ6IlxcY290
aCIsICAgdGFnOiJtaSIsIG91dHB1dDoiY290aCIsICAgdHR5cGU6VU5BUlksIGZ1
bmM6dHJ1ZX0sCntpbnB1dDoiXFxjc2MiLAkgICB0YWc6Im1pIiwgb3V0cHV0OiJj
c2MiLCAgICB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJcXGRlZyIs
CSAgIHRhZzoibWkiLCBvdXRwdXQ6ImRlZyIsICAgIHR0eXBlOlVOQVJZLCBmdW5j
OnRydWV9LAp7aW5wdXQ6IlxcZGV0IiwJICAgdGFnOiJtaSIsIG91dHB1dDoiZGV0
IiwgICAgdHR5cGU6VU5BUlksIGZ1bmM6dHJ1ZX0sCntpbnB1dDoiXFxkaW0iLAkg
ICB0YWc6Im1pIiwgb3V0cHV0OiJkaW0iLCAgICB0dHlwZTpVTkFSWSwgZnVuYzp0
cnVlfSwgLy9DT05TVD8Ke2lucHV0OiJcXGV4cCIsCSAgIHRhZzoibWkiLCBvdXRw
dXQ6ImV4cCIsICAgIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5wdXQ6Ilxc
Z2NkIiwJICAgdGFnOiJtaSIsIG91dHB1dDoiZ2NkIiwgICAgdHR5cGU6VU5BUlks
IGZ1bmM6dHJ1ZX0sIC8vQ09OU1Q/CntpbnB1dDoiXFxob20iLAkgICB0YWc6Im1p
Iiwgb3V0cHV0OiJob20iLCAgICB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lu
cHV0OiJcXGluZiIsCSAgICAgIHRhZzoibW8iLCBvdXRwdXQ6ImluZiIsCSB0dHlw
ZTpVTkRFUk9WRVJ9LAp7aW5wdXQ6Ilxca2VyIiwJICAgdGFnOiJtaSIsIG91dHB1
dDoia2VyIiwgICAgdHR5cGU6VU5BUlksIGZ1bmM6dHJ1ZX0sCntpbnB1dDoiXFxs
ZyIsCSAgIHRhZzoibWkiLCBvdXRwdXQ6ImxnIiwgICAgIHR0eXBlOlVOQVJZLCBm
dW5jOnRydWV9LAp7aW5wdXQ6IlxcbGltIiwJICAgICAgdGFnOiJtbyIsIG91dHB1
dDoibGltIiwJIHR0eXBlOlVOREVST1ZFUn0sCntpbnB1dDoiXFxsaW1pbmYiLCAg
ICB0YWc6Im1vIiwgb3V0cHV0OiJsaW1pbmYiLCB0dHlwZTpVTkRFUk9WRVJ9LAp7
aW5wdXQ6IlxcbGltc3VwIiwgICAgdGFnOiJtbyIsIG91dHB1dDoibGltc3VwIiwg
dHR5cGU6VU5ERVJPVkVSfSwKe2lucHV0OiJcXGxuIiwJICAgdGFnOiJtaSIsIG91
dHB1dDoibG4iLCAgICAgdHR5cGU6VU5BUlksIGZ1bmM6dHJ1ZX0sCntpbnB1dDoi
XFxsb2ciLAkgICB0YWc6Im1pIiwgb3V0cHV0OiJsb2ciLCAgICB0dHlwZTpVTkFS
WSwgZnVuYzp0cnVlfSwKe2lucHV0OiJcXG1heCIsCSAgICAgIHRhZzoibW8iLCBv
dXRwdXQ6Im1heCIsCSB0dHlwZTpVTkRFUk9WRVJ9LAp7aW5wdXQ6IlxcbWluIiwJ
ICAgICAgdGFnOiJtbyIsIG91dHB1dDoibWluIiwJIHR0eXBlOlVOREVST1ZFUn0s
CntpbnB1dDoiXFxQciIsCSAgIHRhZzoibWkiLCBvdXRwdXQ6IlByIiwgICAgIHR0
eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5wdXQ6Ilxcc2VjIiwJICAgdGFnOiJt
aSIsIG91dHB1dDoic2VjIiwgICAgdHR5cGU6VU5BUlksIGZ1bmM6dHJ1ZX0sCntp
bnB1dDoiXFxzaW4iLAkgICB0YWc6Im1pIiwgb3V0cHV0OiJzaW4iLCAgICB0dHlw
ZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJcXHNpbmgiLCAgIHRhZzoibWki
LCBvdXRwdXQ6InNpbmgiLCAgIHR0eXBlOlVOQVJZLCBmdW5jOnRydWV9LAp7aW5w
dXQ6Ilxcc3VwIiwJICAgICAgdGFnOiJtbyIsIG91dHB1dDoic3VwIiwJIHR0eXBl
OlVOREVST1ZFUn0sCntpbnB1dDoiXFx0YW4iLAkgICB0YWc6Im1pIiwgb3V0cHV0
OiJ0YW4iLCAgICB0dHlwZTpVTkFSWSwgZnVuYzp0cnVlfSwKe2lucHV0OiJcXHRh
bmgiLCAgIHRhZzoibWkiLCBvdXRwdXQ6InRhbmgiLCAgIHR0eXBlOlVOQVJZLCBm
dW5jOnRydWV9LAoKLy9hcnJvd3MKe2lucHV0OiJcXGdldHMiLAkJdGFnOiJtbyIs
IG91dHB1dDoiXHUyMTkwIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcbGVmdGFy
cm93IiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjE5MCIsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiJcXHRvIiwJCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIxOTIiLCB0dHlw
ZTpDT05TVH0sCntpbnB1dDoiXFxyaWdodGFycm93IiwJCXRhZzoibW8iLCBvdXRw
dXQ6Ilx1MjE5MiIsIHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXGxlZnRyaWdodGFy
cm93IiwJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTk0IiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlxcdXBhcnJvdyIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIxOTEiLCB0
dHlwZTpDT05TVH0sCntpbnB1dDoiXFxkb3duYXJyb3ciLAkJdGFnOiJtbyIsIG91
dHB1dDoiXHUyMTkzIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcdXBkb3duYXJy
b3ciLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMTk1IiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlxcTGVmdGFycm93IiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjFEMCIs
IHR0eXBlOkNPTlNUfSwKe2lucHV0OiJcXFJpZ2h0YXJyb3ciLAkJdGFnOiJtbyIs
IG91dHB1dDoiXHUyMUQyIiwgdHR5cGU6Q09OU1R9LAp7aW5wdXQ6IlxcTGVmdHJp
Z2h0YXJyb3ciLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIxRDQiLCB0dHlwZTpDT05T
VH0sCntpbnB1dDoiXFxpZmYiLCB0YWc6Im1vIiwgb3V0cHV0OiJ+XFxMb25nbGVm
dHJpZ2h0YXJyb3d+IiwgdHR5cGU6REVGSU5JVElPTn0sCntpbnB1dDoiXFxVcGFy
cm93IiwJCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjFEMSIsIHR0eXBlOkNPTlNUfSwK
e2lucHV0OiJcXERvd25hcnJvdyIsCQl0YWc6Im1vIiwgb3V0cHV0OiJcdTIxRDMi
LCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxVcGRvd25hcnJvdyIsCQl0YWc6Im1v
Iiwgb3V0cHV0OiJcdTIxRDUiLCB0dHlwZTpDT05TVH0sCntpbnB1dDoiXFxtYXBz
dG8iLAkJdGFnOiJtbyIsIG91dHB1dDoiXHUyMUE2IiwgdHR5cGU6Q09OU1R9LAp7
aW5wdXQ6IlxcbG9uZ2xlZnRhcnJvdyIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjE5
MCIsIHR0eXBlOkxPTkd9LAp7aW5wdXQ6IlxcbG9uZ3JpZ2h0YXJyb3ciLAl0YWc6
Im1vIiwgb3V0cHV0OiJcdTIxOTIiLCB0dHlwZTpMT05HfSwKe2lucHV0OiJcXGxv
bmdsZWZ0cmlnaHRhcnJvdyIsCXRhZzoibW8iLCBvdXRwdXQ6Ilx1MjE5NCIsIHR0
eXBlOkxPTkd9LAp7aW5wdXQ6IlxcTG9uZ2xlZnRhcnJvdyIsCXRhZzoibW8iLCBv
dXRwdXQ6Ilx1MjFEMCIsIHR0eXBlOkxPTkd9LAp7aW5wdXQ6IlxcTG9uZ3JpZ2h0
YXJyb3ciLAl0YWc6Im1vIiwgb3V0cHV0OiJcdTIxRDIiLCB0dHlwZTpMT05HfSwK
e2lucHV0OiJcXExvbmdsZWZ0cmlnaHRhcnJvdyIsICB0YWc6Im1vIiwgb3V0cHV0
OiJcdTIxRDQiLCB0dHlwZTpMT05HfSwKe2lucHV0OiJcXGxvbmdtYXBzdG8iLAkJ
dGFnOiJtbyIsIG91dHB1dDoiXHUyMUE2IiwgdHR5cGU6Q09OU1R9LAoJCQkJCQkJ
Ly8gZGlzYXN0ZXIgaWYgTE9ORwoKLy9jb21tYW5kcyB3aXRoIGFyZ3VtZW50CkxN
c3FydCwgTE1yb290LCBMTWZyYWMsIExNb3ZlciwgTE1zdWIsIExNc3VwLCBMTXRl
eHQsIExNbWJveCwgTE1hdG9wLCBMTWNob29zZSwKLy9MTWRpdiwgTE1xdW90ZSwK
Ci8vZGlhY3JpdGljYWwgbWFya3MKe2lucHV0OiJcXGFjdXRlIiwJdGFnOiJtb3Zl
ciIsICBvdXRwdXQ6Ilx1MDBCNCIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0sCi8v
e2lucHV0OiJcXGFjdXRlIiwJICB0YWc6Im1vdmVyIiwgIG91dHB1dDoiXHUwMzE3
IiwgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKLy97aW5wdXQ6IlxcYWN1dGUiLAkg
IHRhZzoibW92ZXIiLCAgb3V0cHV0OiJcdTAzMDEiLCB0dHlwZTpVTkFSWSwgYWNj
OnRydWV9LAovL3tpbnB1dDoiXFxncmF2ZSIsCSAgdGFnOiJtb3ZlciIsICBvdXRw
dXQ6Ilx1MDMwMCIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0sCi8ve2lucHV0OiJc
XGdyYXZlIiwJICB0YWc6Im1vdmVyIiwgIG91dHB1dDoiXHUwMzE2IiwgdHR5cGU6
VU5BUlksIGFjYzp0cnVlfSwKe2lucHV0OiJcXGdyYXZlIiwJdGFnOiJtb3ZlciIs
ICBvdXRwdXQ6Ilx1MDA2MCIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0sCntpbnB1
dDoiXFxicmV2ZSIsCXRhZzoibW92ZXIiLCAgb3V0cHV0OiJcdTAyRDgiLCB0dHlw
ZTpVTkFSWSwgYWNjOnRydWV9LAp7aW5wdXQ6IlxcY2hlY2siLAl0YWc6Im1vdmVy
IiwgIG91dHB1dDoiXHUwMkM3IiwgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKe2lu
cHV0OiJcXGRvdCIsCQl0YWc6Im1vdmVyIiwgIG91dHB1dDoiLiIsICAgICAgdHR5
cGU6VU5BUlksIGFjYzp0cnVlfSwKe2lucHV0OiJcXGRkb3QiLAl0YWc6Im1vdmVy
IiwgIG91dHB1dDoiLi4iLCAgICAgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKLy97
aW5wdXQ6IlxcZGRvdCIsCSAgdGFnOiJtb3ZlciIsICBvdXRwdXQ6Ilx1MDBBOCIs
IHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0sCntpbnB1dDoiXFxtYXRocmluZyIsCXRh
ZzoibW92ZXIiLCAgb3V0cHV0OiJcdTAwQjAiLCB0dHlwZTpVTkFSWSwgYWNjOnRy
dWV9LAp7aW5wdXQ6IlxcdmVjIiwJCXRhZzoibW92ZXIiLCAgb3V0cHV0OiJcdTIw
RDciLCB0dHlwZTpVTkFSWSwgYWNjOnRydWV9LAp7aW5wdXQ6Ilxcb3ZlcnJpZ2h0
YXJyb3ciLHRhZzoibW92ZXIiLG91dHB1dDoiXHUyMEQ3IiwgdHR5cGU6VU5BUlks
IGFjYzp0cnVlfSwKe2lucHV0OiJcXG92ZXJsZWZ0YXJyb3ciLHRhZzoibW92ZXIi
LCBvdXRwdXQ6Ilx1MjBENiIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0sCntpbnB1
dDoiXFxoYXQiLAkJdGFnOiJtb3ZlciIsICBvdXRwdXQ6Ilx1MDA1RSIsIHR0eXBl
OlVOQVJZLCBhY2M6dHJ1ZX0sCntpbnB1dDoiXFx3aWRlaGF0IiwJdGFnOiJtb3Zl
ciIsICBvdXRwdXQ6Ilx1MDMwMiIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0sCntp
bnB1dDoiXFx0aWxkZSIsCXRhZzoibW92ZXIiLCAgb3V0cHV0OiJ+IiwgICAgICB0
dHlwZTpVTkFSWSwgYWNjOnRydWV9LAovL3tpbnB1dDoiXFx0aWxkZSIsCSAgdGFn
OiJtb3ZlciIsICBvdXRwdXQ6Ilx1MDMwMyIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1
ZX0sCntpbnB1dDoiXFx3aWRldGlsZGUiLAl0YWc6Im1vdmVyIiwgIG91dHB1dDoi
XHUwMkRDIiwgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKe2lucHV0OiJcXGJhciIs
CQl0YWc6Im1vdmVyIiwgIG91dHB1dDoiXHUyMDNFIiwgdHR5cGU6VU5BUlksIGFj
Yzp0cnVlfSwKe2lucHV0OiJcXG92ZXJicmFjZSIsCXRhZzoibW92ZXIiLCAgb3V0
cHV0OiJcdTIzQjQiLCB0dHlwZTpVTkFSWSwgYWNjOnRydWV9LAp7aW5wdXQ6Ilxc
b3ZlcmxpbmUiLAl0YWc6Im1vdmVyIiwgIG91dHB1dDoiXHUwMEFGIiwgdHR5cGU6
VU5BUlksIGFjYzp0cnVlfSwKe2lucHV0OiJcXHVuZGVyYnJhY2UiLCAgdGFnOiJt
dW5kZXIiLCBvdXRwdXQ6Ilx1MjNCNSIsIHR0eXBlOlVOQVJZLCBhY2M6dHJ1ZX0s
CntpbnB1dDoiXFx1bmRlcmxpbmUiLAl0YWc6Im11bmRlciIsIG91dHB1dDoiXHUw
MEFGIiwgdHR5cGU6VU5BUlksIGFjYzp0cnVlfSwKLy97aW5wdXQ6InVuZGVybGlu
ZSIsCXRhZzoibXVuZGVyIiwgb3V0cHV0OiJcdTAzMzIiLCB0dHlwZTpVTkFSWSwg
YWNjOnRydWV9LAoKLy90eXBlc3R5bGVzIGFuZCBmb250cwp7aW5wdXQ6IlxcZGlz
cGxheXN0eWxlIix0YWc6Im1zdHlsZSIsYXRuYW1lOiJkaXNwbGF5c3R5bGUiLGF0
dmFsOiJ0cnVlIiwgdHR5cGU6VU5BUll9LAp7aW5wdXQ6IlxcdGV4dHN0eWxlIix0
YWc6Im1zdHlsZSIsYXRuYW1lOiJkaXNwbGF5c3R5bGUiLGF0dmFsOiJmYWxzZSIs
IHR0eXBlOlVOQVJZfSwKe2lucHV0OiJcXHNjcmlwdHN0eWxlIix0YWc6Im1zdHls
ZSIsYXRuYW1lOiJzY3JpcHRsZXZlbCIsYXR2YWw6IjEiLCB0dHlwZTpVTkFSWX0s
CntpbnB1dDoiXFxzY3JpcHRzY3JpcHRzdHlsZSIsdGFnOiJtc3R5bGUiLGF0bmFt
ZToic2NyaXB0bGV2ZWwiLGF0dmFsOiIyIiwgdHR5cGU6VU5BUll9LAp7aW5wdXQ6
IlxcdGV4dHJtIiwgdGFnOiJtc3R5bGUiLCBvdXRwdXQ6IlxcbWF0aHJtIiwgdHR5
cGU6IERFRklOSVRJT059LAp7aW5wdXQ6IlxcbWF0aGJmIiwgdGFnOiJtc3R5bGUi
LCBhdG5hbWU6Im1hdGh2YXJpYW50IiwgYXR2YWw6ImJvbGQiLCB0dHlwZTpVTkFS
WX0sCntpbnB1dDoiXFx0ZXh0YmYiLCB0YWc6Im1zdHlsZSIsIGF0bmFtZToibWF0
aHZhcmlhbnQiLCBhdHZhbDoiYm9sZCIsIHR0eXBlOlVOQVJZfSwKe2lucHV0OiJc
XG1hdGhpdCIsIHRhZzoibXN0eWxlIiwgYXRuYW1lOiJtYXRodmFyaWFudCIsIGF0
dmFsOiJpdGFsaWMiLCB0dHlwZTpVTkFSWX0sCntpbnB1dDoiXFx0ZXh0aXQiLCB0
YWc6Im1zdHlsZSIsIGF0bmFtZToibWF0aHZhcmlhbnQiLCBhdHZhbDoiaXRhbGlj
IiwgdHR5cGU6VU5BUll9LAp7aW5wdXQ6IlxcbWF0aHR0IiwgdGFnOiJtc3R5bGUi
LCBhdG5hbWU6Im1hdGh2YXJpYW50IiwgYXR2YWw6Im1vbm9zcGFjZSIsIHR0eXBl
OlVOQVJZfSwKe2lucHV0OiJcXHRleHR0dCIsIHRhZzoibXN0eWxlIiwgYXRuYW1l
OiJtYXRodmFyaWFudCIsIGF0dmFsOiJtb25vc3BhY2UiLCB0dHlwZTpVTkFSWX0s
CntpbnB1dDoiXFxtYXRoc2YiLCB0YWc6Im1zdHlsZSIsIGF0bmFtZToibWF0aHZh
cmlhbnQiLCBhdHZhbDoic2Fucy1zZXJpZiIsIHR0eXBlOlVOQVJZfSwKe2lucHV0
OiJcXG1hdGhiYiIsIHRhZzoibXN0eWxlIiwgYXRuYW1lOiJtYXRodmFyaWFudCIs
IGF0dmFsOiJkb3VibGUtc3RydWNrIiwgdHR5cGU6VU5BUlksIGNvZGVzOkxNYmJi
fSwKe2lucHV0OiJcXG1hdGhjYWwiLHRhZzoibXN0eWxlIiwgYXRuYW1lOiJtYXRo
dmFyaWFudCIsIGF0dmFsOiJzY3JpcHQiLCB0dHlwZTpVTkFSWSwgY29kZXM6TE1j
YWx9LAp7aW5wdXQ6IlxcbWF0aGZyYWsiLHRhZzoibXN0eWxlIixhdG5hbWU6Im1h
dGh2YXJpYW50IiwgYXR2YWw6ImZyYWt0dXIiLHR0eXBlOlVOQVJZLCBjb2RlczpM
TWZya30KXTsKCmZ1bmN0aW9uIGNvbXBhcmVOYW1lcyhzMSxzMikgewogIGlmIChz
MS5pbnB1dCA+IHMyLmlucHV0KSByZXR1cm4gMQogIGVsc2UgcmV0dXJuIC0xOwp9
Cgp2YXIgTE1uYW1lcyA9IFtdOyAvL2xpc3Qgb2YgaW5wdXQgc3ltYm9scwoKZnVu
Y3Rpb24gTE1pbml0U3ltYm9scygpIHsKICBMTXN5bWJvbHMuc29ydChjb21wYXJl
TmFtZXMpOwogIGZvciAoaT0wOyBpPExNc3ltYm9scy5sZW5ndGg7IGkrKykgTE1u
YW1lc1tpXSA9IExNc3ltYm9sc1tpXS5pbnB1dDsKfQoKdmFyIExNbWF0aG1sID0g
Imh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUwiOwoKZnVuY3Rpb24g
TE1jcmVhdGVFbGVtZW50TWF0aE1MKHQpIHsKICBpZiAoaXNJRSkgcmV0dXJuIGRv
Y3VtZW50LmNyZWF0ZUVsZW1lbnQoIm06Iit0KTsKICBlbHNlIHJldHVybiBkb2N1
bWVudC5jcmVhdGVFbGVtZW50TlMoTE1tYXRobWwsdCk7Cn0KCmZ1bmN0aW9uIExN
Y3JlYXRlTW1sTm9kZSh0LGZyYWcpIHsKLy8gIHZhciBub2RlID0gTE1jcmVhdGVF
bGVtZW50TWF0aE1MKG5hbWUpOwogIGlmIChpc0lFKSB2YXIgbm9kZSA9IGRvY3Vt
ZW50LmNyZWF0ZUVsZW1lbnQoIm06Iit0KTsKICBlbHNlIHZhciBub2RlID0gZG9j
dW1lbnQuY3JlYXRlRWxlbWVudE5TKExNbWF0aG1sLHQpOwogIG5vZGUuYXBwZW5k
Q2hpbGQoZnJhZyk7CiAgcmV0dXJuIG5vZGU7Cn0KCmZ1bmN0aW9uIG5ld2NvbW1h
bmQob2xkc3RyLG5ld3N0cikgewogIExNc3ltYm9scyA9IExNc3ltYm9scy5jb25j
YXQoW3tpbnB1dDpvbGRzdHIsIHRhZzoibW8iLCBvdXRwdXQ6bmV3c3RyLAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0dHlwZTpERUZJTklUSU9OfV0p
Owp9CgpmdW5jdGlvbiBMTXJlbW92ZUNoYXJzQW5kQmxhbmtzKHN0cixuKSB7Ci8v
cmVtb3ZlIG4gY2hhcmFjdGVycyBhbmQgYW55IGZvbGxvd2luZyBibGFua3MKICB2
YXIgc3Q7CiAgc3QgPSBzdHIuc2xpY2Uobik7CiAgZm9yICh2YXIgaT0wOyBpPHN0
Lmxlbmd0aCAmJiBzdC5jaGFyQ29kZUF0KGkpPD0zMjsgaT1pKzEpOwogIHJldHVy
biBzdC5zbGljZShpKTsKfQoKZnVuY3Rpb24gTE1wb3NpdGlvbihhcnIsIHN0ciwg
bikgewovLyByZXR1cm4gcG9zaXRpb24gPj1uIHdoZXJlIHN0ciBhcHBlYXJzIG9y
IHdvdWxkIGJlIGluc2VydGVkCi8vIGFzc3VtZXMgYXJyIGlzIHNvcnRlZAogIGlm
IChuPT0wKSB7CiAgICB2YXIgaCxtOwogICAgbiA9IC0xOwogICAgaCA9IGFyci5s
ZW5ndGg7CiAgICB3aGlsZSAobisxPGgpIHsKICAgICAgbSA9IChuK2gpID4+IDE7
CiAgICAgIGlmIChhcnJbbV08c3RyKSBuID0gbTsgZWxzZSBoID0gbTsKICAgIH0K
ICAgIHJldHVybiBoOwogIH0gZWxzZQogICAgZm9yICh2YXIgaT1uOyBpPGFyci5s
ZW5ndGggJiYgYXJyW2ldPHN0cjsgaSsrKTsKICByZXR1cm4gaTsgLy8gaT1hcnIu
bGVuZ3RoIHx8IGFycltpXT49c3RyCn0KCmZ1bmN0aW9uIExNZ2V0U3ltYm9sKHN0
cikgewovL3JldHVybiBtYXhpbWFsIGluaXRpYWwgc3Vic3RyaW5nIG9mIHN0ciB0
aGF0IGFwcGVhcnMgaW4gbmFtZXMKLy9yZXR1cm4gbnVsbCBpZiB0aGVyZSBpcyBu
b25lCiAgdmFyIGsgPSAwOyAvL25ldyBwb3MKICB2YXIgaiA9IDA7IC8vb2xkIHBv
cwogIHZhciBtazsgLy9tYXRjaCBwb3MKICB2YXIgc3Q7CiAgdmFyIHRhZ3N0Owog
IHZhciBtYXRjaCA9ICIiOwogIHZhciBtb3JlID0gdHJ1ZTsKICBmb3IgKHZhciBp
PTE7IGk8PXN0ci5sZW5ndGggJiYgbW9yZTsgaSsrKSB7CiAgICBzdCA9IHN0ci5z
bGljZSgwLGkpOyAvL2luaXRpYWwgc3Vic3RyaW5nIG9mIGxlbmd0aCBpCiAgICBq
ID0gazsKICAgIGsgPSBMTXBvc2l0aW9uKExNbmFtZXMsIHN0LCBqKTsKICAgIGlm
IChrPExNbmFtZXMubGVuZ3RoICYmIHN0ci5zbGljZSgwLExNbmFtZXNba10ubGVu
Z3RoKT09TE1uYW1lc1trXSl7CiAgICAgIG1hdGNoID0gTE1uYW1lc1trXTsKICAg
ICAgbWsgPSBrOwogICAgICBpID0gbWF0Y2gubGVuZ3RoOwogICAgfQogICAgbW9y
ZSA9IGs8TE1uYW1lcy5sZW5ndGggJiYgc3RyLnNsaWNlKDAsTE1uYW1lc1trXS5s
ZW5ndGgpPj1MTW5hbWVzW2tdOwogIH0KICBMTXByZXZpb3VzU3ltYm9sPUxNY3Vy
cmVudFN5bWJvbDsKICBpZiAobWF0Y2ghPSIiKXsKICAgIExNY3VycmVudFN5bWJv
bD1MTXN5bWJvbHNbbWtdLnR0eXBlOwogICAgcmV0dXJuIExNc3ltYm9sc1tta107
CiAgfQogIExNY3VycmVudFN5bWJvbD1DT05TVDsKICBrID0gMTsKICBzdCA9IHN0
ci5zbGljZSgwLDEpOyAvL3Rha2UgMSBjaGFyYWN0ZXIKICBpZiAoIjAiPD1zdCAm
JiBzdDw9IjkiKSB0YWdzdCA9ICJtbiI7CiAgZWxzZSB0YWdzdCA9ICgoIkEiPnN0
IHx8IHN0PiJaIikgJiYgKCJhIj5zdCB8fCBzdD4ieiIpPyJtbyI6Im1pIik7Ci8q
Ci8vIENvbW1lbnRlZCBvdXQgYnkgRFJXIChub3QgZnVsbHkgdW5kZXJzdG9vZCwg
YnV0IHByb2JhYmx5IHRvIGRvIHdpdGgKLy8gdXNlIG9mICIvIiBhcyBhbiBJTkZJ
WCB2ZXJzaW9uIG9mICJcXGZyYWMiLCB3aGljaCB3ZSBkb24ndCB3YW50KToKLy99
Ci8vaWYgKHN0PT0iLSIgJiYgTE1wcmV2aW91c1N5bWJvbD09SU5GSVgpIHsKLy8g
IExNY3VycmVudFN5bWJvbCA9IElORklYOyAgLy90cmljayAiLyIgaW50byByZWNv
Z25pemluZyAiLSIgb24gc2Vjb25kIHBhcnNlCi8vICByZXR1cm4ge2lucHV0OnN0
LCB0YWc6dGFnc3QsIG91dHB1dDpzdCwgdHR5cGU6VU5BUlksIGZ1bmM6dHJ1ZX07
Ci8vfQoqLwogIHJldHVybiB7aW5wdXQ6c3QsIHRhZzp0YWdzdCwgb3V0cHV0OnN0
LCB0dHlwZTpDT05TVH07Cn0KCgovKlBhcnNpbmcgQVNDSUkgbWF0aCBleHByZXNz
aW9ucyB3aXRoIHRoZSBmb2xsb3dpbmcgZ3JhbW1hcgp2IDo6PSBbQS1aYS16XSB8
IGdyZWVrIGxldHRlcnMgfCBudW1iZXJzIHwgb3RoZXIgY29uc3RhbnQgc3ltYm9s
cwp1IDo6PSBzcXJ0IHwgdGV4dCB8IGJiIHwgb3RoZXIgdW5hcnkgc3ltYm9scyBm
b3IgZm9udCBjb21tYW5kcwpiIDo6PSBmcmFjIHwgcm9vdCB8IHN0YWNrcmVsCWJp
bmFyeSBzeW1ib2xzCmwgOjo9IHsgfCBcbGVmdAkJCWxlZnQgYnJhY2tldHMKciA6
Oj0gfSB8IFxyaWdodAkJcmlnaHQgYnJhY2tldHMKUyA6Oj0gdiB8IGxFciB8IHVT
IHwgYlNTCVNpbXBsZSBleHByZXNzaW9uCkkgOjo9IFNfUyB8IFNeUyB8IFNfU15T
IHwgUwlJbnRlcm1lZGlhdGUgZXhwcmVzc2lvbgpFIDo6PSBJRSB8IEkvSQkJCUV4
cHJlc3Npb24KRWFjaCB0ZXJtaW5hbCBzeW1ib2wgaXMgdHJhbnNsYXRlZCBpbnRv
IGEgY29ycmVzcG9uZGluZyBtYXRobWwgbm9kZS4qLwoKdmFyIExNcHJldmlvdXNT
eW1ib2wsTE1jdXJyZW50U3ltYm9sOwoKZnVuY3Rpb24gTE1wYXJzZVNleHByKHN0
cikgeyAvL3BhcnNlcyBzdHIgYW5kIHJldHVybnMgW25vZGUsdGFpbHN0ciwobm9k
ZSl0YWddCiAgdmFyIHN5bWJvbCwgbm9kZSwgcmVzdWx0LCByZXN1bHQyLCBpLCBz
dCwvLyByaWdodHZlcnQgPSBmYWxzZSwKICAgIG5ld0ZyYWcgPSBkb2N1bWVudC5j
cmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CiAgc3RyID0gTE1yZW1vdmVDaGFyc0Fu
ZEJsYW5rcyhzdHIsMCk7CiAgc3ltYm9sID0gTE1nZXRTeW1ib2woc3RyKTsgICAg
ICAgICAgICAgLy9laXRoZXIgYSB0b2tlbiBvciBhIGJyYWNrZXQgb3IgZW1wdHkK
ICBpZiAoc3ltYm9sID09IG51bGwgfHwgc3ltYm9sLnR0eXBlID09IFJJR0hUQlJB
Q0tFVCkKICAgIHJldHVybiBbbnVsbCxzdHIsbnVsbF07CiAgaWYgKHN5bWJvbC50
dHlwZSA9PSBERUZJTklUSU9OKSB7CiAgICBzdHIgPSBzeW1ib2wub3V0cHV0K0xN
cmVtb3ZlQ2hhcnNBbmRCbGFua3Moc3RyLHN5bWJvbC5pbnB1dC5sZW5ndGgpOwog
ICAgc3ltYm9sID0gTE1nZXRTeW1ib2woc3RyKTsKICAgIGlmIChzeW1ib2wgPT0g
bnVsbCB8fCBzeW1ib2wudHR5cGUgPT0gUklHSFRCUkFDS0VUKQogICAgICByZXR1
cm4gW251bGwsc3RyLG51bGxdOwogIH0KICBzdHIgPSBMTXJlbW92ZUNoYXJzQW5k
QmxhbmtzKHN0cixzeW1ib2wuaW5wdXQubGVuZ3RoKTsKICBzd2l0Y2ggKHN5bWJv
bC50dHlwZSkgewogIGNhc2UgU1BBQ0U6CiAgICBub2RlID0gTE1jcmVhdGVFbGVt
ZW50TWF0aE1MKHN5bWJvbC50YWcpOwogICAgbm9kZS5zZXRBdHRyaWJ1dGUoc3lt
Ym9sLmF0bmFtZSxzeW1ib2wuYXR2YWwpOwogICAgcmV0dXJuIFtub2RlLHN0cixz
eW1ib2wudGFnXTsKICBjYXNlIFVOREVST1ZFUjoKICAgIGlmIChpc0lFKSB7CiAg
ICAgIGlmIChzeW1ib2wuaW5wdXQuc3Vic3RyKDAsNCkgPT0gIlxcYmlnIikgeyAg
IC8vIGJvdGNoIGZvciBtaXNzaW5nIHN5bWJvbHMKCXN0ciA9ICJcXCIrc3ltYm9s
LmlucHV0LnN1YnN0cig0KStzdHI7CSAgIC8vIG1ha2UgXGJpZ2N1cCA9IFxjdXAg
ZXRjLgoJc3ltYm9sID0gTE1nZXRTeW1ib2woc3RyKTsKCXN5bWJvbC50dHlwZSA9
IFVOREVST1ZFUjsKCXN0ciA9IExNcmVtb3ZlQ2hhcnNBbmRCbGFua3Moc3RyLHN5
bWJvbC5pbnB1dC5sZW5ndGgpOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gW0xN
Y3JlYXRlTW1sTm9kZShzeW1ib2wudGFnLAoJCQlkb2N1bWVudC5jcmVhdGVUZXh0
Tm9kZShzeW1ib2wub3V0cHV0KSksc3RyLHN5bWJvbC50YWddOwogIGNhc2UgQ09O
U1Q6CiAgICB2YXIgb3V0cHV0ID0gc3ltYm9sLm91dHB1dDsKICAgIGlmIChpc0lF
KSB7CiAgICAgIGlmIChzeW1ib2wuaW5wdXQgPT0gIiciKQoJb3V0cHV0ID0gIlx1
MjAzMiI7CiAgICAgIGVsc2UgaWYgKHN5bWJvbC5pbnB1dCA9PSAiJyciKQoJb3V0
cHV0ID0gIlx1MjAzMyI7CiAgICAgIGVsc2UgaWYgKHN5bWJvbC5pbnB1dCA9PSAi
JycnIikKCW91dHB1dCA9ICJcdTIwMzNcdTIwMzIiOwogICAgICBlbHNlIGlmIChz
eW1ib2wuaW5wdXQgPT0gIicnJyciKQoJb3V0cHV0ID0gIlx1MjAzM1x1MjAzMyI7
CiAgICAgIGVsc2UgaWYgKHN5bWJvbC5pbnB1dCA9PSAiXFxzcXVhcmUiKQoJb3V0
cHV0ID0gIlx1MjVBMSI7CS8vIHNhbWUgYXMgXEJveAogICAgICBlbHNlIGlmIChz
eW1ib2wuaW5wdXQuc3Vic3RyKDAsNSkgPT0gIlxcZnJhYyIpIHsKCQkJCQkJLy8g
Ym90Y2ggZm9yIG1pc3NpbmcgZnJhY3Rpb25zCgl2YXIgZGVub20gPSBzeW1ib2wu
aW5wdXQuc3Vic3RyKDYsMSk7CglpZiAoZGVub20gPT0gIjUiIHx8IGRlbm9tID09
ICI2IikgewoJICBzdHIgPSBzeW1ib2wuaW5wdXQucmVwbGFjZSgvXFxmcmFjLywi
XFxmcmFjICIpK3N0cjsKCSAgcmV0dXJuIFtub2RlLHN0cixzeW1ib2wudGFnXTsK
CX0KICAgICAgfQogICAgfQogICAgbm9kZSA9IExNY3JlYXRlTW1sTm9kZShzeW1i
b2wudGFnLGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG91dHB1dCkpOwogICAgcmV0
dXJuIFtub2RlLHN0cixzeW1ib2wudGFnXTsKICBjYXNlIExPTkc6ICAvLyBhZGRl
ZCBieSBEUlcKICAgIG5vZGUgPSBMTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRhZyxk
b2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wub3V0cHV0KSk7CiAgICBub2Rl
LnNldEF0dHJpYnV0ZSgibWluc2l6ZSIsIjEuNSIpOwogICAgbm9kZS5zZXRBdHRy
aWJ1dGUoIm1heHNpemUiLCIxLjUiKTsKICAgIG5vZGUgPSBMTWNyZWF0ZU1tbE5v
ZGUoIm1vdmVyIixub2RlKTsKICAgIG5vZGUuYXBwZW5kQ2hpbGQoTE1jcmVhdGVF
bGVtZW50TWF0aE1MKCJtc3BhY2UiKSk7CiAgICByZXR1cm4gW25vZGUsc3RyLHN5
bWJvbC50YWddOwogIGNhc2UgU1RSRVRDSFk6ICAvLyBhZGRlZCBieSBEUlcKICAg
IGlmIChpc0lFICYmIHN5bWJvbC5pbnB1dCA9PSAiXFxiYWNrc2xhc2giKQoJc3lt
Ym9sLm91dHB1dCA9ICJcXCI7CS8vIGRvZXNuJ3QgZXhwYW5kLCBidXQgdGhlbiBu
b3IgZG9lcyAiXHUyMjE2IgogICAgbm9kZSA9IExNY3JlYXRlTW1sTm9kZShzeW1i
b2wudGFnLGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN5bWJvbC5vdXRwdXQpKTsK
ICAgIGlmIChzeW1ib2wuaW5wdXQgPT0gInwiIHx8IHN5bWJvbC5pbnB1dCA9PSAi
XFx2ZXJ0IiB8fAoJc3ltYm9sLmlucHV0ID09ICJcXHwiIHx8IHN5bWJvbC5pbnB1
dCA9PSAiXFxWZXJ0IikgewoJICBub2RlLnNldEF0dHJpYnV0ZSgibHNwYWNlIiwi
MGVtIik7CgkgIG5vZGUuc2V0QXR0cmlidXRlKCJyc3BhY2UiLCIwZW0iKTsKICAg
IH0KICAgIG5vZGUuc2V0QXR0cmlidXRlKCJtYXhzaXplIixzeW1ib2wuYXR2YWwp
OyAgLy8gZG9uJ3QgYWxsb3cgdG8gc3RyZXRjaCBoZXJlCiAgICBpZiAoc3ltYm9s
LnJ0YWcgIT0gbnVsbCkKICAgICAgcmV0dXJuIFtub2RlLHN0cixzeW1ib2wucnRh
Z107CiAgICBlbHNlCiAgICAgIHJldHVybiBbbm9kZSxzdHIsc3ltYm9sLnRhZ107
CiAgY2FzZSBCSUc6ICAvLyBhZGRlZCBieSBEUlcKICAgIHZhciBhdHZhbCA9IHN5
bWJvbC5hdHZhbDsKICAgIGlmIChpc0lFKQogICAgICBhdHZhbCA9IHN5bWJvbC5p
ZXZhbDsKICAgIHN5bWJvbCA9IExNZ2V0U3ltYm9sKHN0cik7CiAgICBpZiAoc3lt
Ym9sID09IG51bGwpCglyZXR1cm4gW251bGwsc3RyLG51bGxdOwogICAgc3RyID0g
TE1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7
CiAgICBub2RlID0gTE1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcsZG9jdW1lbnQu
Y3JlYXRlVGV4dE5vZGUoc3ltYm9sLm91dHB1dCkpOwogICAgaWYgKGlzSUUpIHsJ
CS8vIHRvIGdldCBicmFja2V0cyB0byBleHBhbmQKICAgICAgdmFyIHNwYWNlID0g
TE1jcmVhdGVFbGVtZW50TWF0aE1MKCJtc3BhY2UiKTsKICAgICAgc3BhY2Uuc2V0
QXR0cmlidXRlKCJoZWlnaHQiLGF0dmFsKyJleCIpOwogICAgICBub2RlID0gTE1j
cmVhdGVNbWxOb2RlKCJtcm93Iixub2RlKTsKICAgICAgbm9kZS5hcHBlbmRDaGls
ZChzcGFjZSk7CiAgICB9IGVsc2UgewkJLy8gaWdub3JlZCBpbiBJRQogICAgICBu
b2RlLnNldEF0dHJpYnV0ZSgibWluc2l6ZSIsYXR2YWwpOwogICAgICBub2RlLnNl
dEF0dHJpYnV0ZSgibWF4c2l6ZSIsYXR2YWwpOwogICAgfQogICAgcmV0dXJuIFtu
b2RlLHN0cixzeW1ib2wudGFnXTsKICBjYXNlIExFRlRCUkFDS0VUOiAgIC8vcmVh
ZCAoZXhwcispCiAgICBpZiAoc3ltYm9sLmlucHV0ID09ICJcXGxlZnQiKSB7IC8v
IGxlZnQgd2hhdD8KICAgICAgc3ltYm9sID0gTE1nZXRTeW1ib2woc3RyKTsKICAg
ICAgaWYgKHN5bWJvbCAhPSBudWxsKSB7CglpZiAoc3ltYm9sLmlucHV0ID09ICIu
IikKCSAgc3ltYm9sLmludmlzaWJsZSA9IHRydWU7CglzdHIgPSBMTXJlbW92ZUNo
YXJzQW5kQmxhbmtzKHN0cixzeW1ib2wuaW5wdXQubGVuZ3RoKTsKICAgICAgfQog
ICAgfQogICAgcmVzdWx0ID0gTE1wYXJzZUV4cHIoc3RyLHRydWUsZmFsc2UpOwog
ICAgaWYgKHN5bWJvbD09bnVsbCB8fAoJKHR5cGVvZiBzeW1ib2wuaW52aXNpYmxl
ID09ICJib29sZWFuIiAmJiBzeW1ib2wuaW52aXNpYmxlKSkKICAgICAgbm9kZSA9
IExNY3JlYXRlTW1sTm9kZSgibXJvdyIscmVzdWx0WzBdKTsKICAgIGVsc2Ugewog
ICAgICBub2RlID0gTE1jcmVhdGVNbWxOb2RlKCJtbyIsZG9jdW1lbnQuY3JlYXRl
VGV4dE5vZGUoc3ltYm9sLm91dHB1dCkpOwogICAgICBub2RlID0gTE1jcmVhdGVN
bWxOb2RlKCJtcm93Iixub2RlKTsKICAgICAgbm9kZS5hcHBlbmRDaGlsZChyZXN1
bHRbMF0pOwogICAgfQogICAgcmV0dXJuIFtub2RlLHJlc3VsdFsxXSxyZXN1bHRb
Ml1dOwogIGNhc2UgTUFUUklYOgkgLy9yZWFkIChleHByKykKICAgIGlmIChzeW1i
b2wuaW5wdXQgPT0gIlxcYmVnaW57YXJyYXl9IikgewogICAgICB2YXIgbWFzayA9
ICIiOwogICAgICBzeW1ib2wgPSBMTWdldFN5bWJvbChzdHIpOwogICAgICBzdHIg
PSBMTXJlbW92ZUNoYXJzQW5kQmxhbmtzKHN0ciwwKTsKICAgICAgaWYgKHN5bWJv
bCA9PSBudWxsKQoJbWFzayA9ICJsIjsKICAgICAgZWxzZSB7CglzdHIgPSBMTXJl
bW92ZUNoYXJzQW5kQmxhbmtzKHN0cixzeW1ib2wuaW5wdXQubGVuZ3RoKTsKCWlm
IChzeW1ib2wuaW5wdXQgIT0gInsiKQoJICBtYXNrID0gImwiOwoJZWxzZSBkbyB7
CgkgIHN5bWJvbCA9IExNZ2V0U3ltYm9sKHN0cik7CgkgIGlmIChzeW1ib2wgIT0g
bnVsbCkgewoJICAgIHN0ciA9IExNcmVtb3ZlQ2hhcnNBbmRCbGFua3Moc3RyLHN5
bWJvbC5pbnB1dC5sZW5ndGgpOwoJICAgIGlmIChzeW1ib2wuaW5wdXQgIT0gIn0i
KQoJICAgICAgbWFzayA9IG1hc2src3ltYm9sLmlucHV0OwoJICB9Cgl9IHdoaWxl
IChzeW1ib2wgIT0gbnVsbCAmJiBzeW1ib2wuaW5wdXQgIT0gIiIgJiYgc3ltYm9s
LmlucHV0ICE9ICJ9Iik7CiAgICAgIH0KICAgICAgcmVzdWx0ID0gTE1wYXJzZUV4
cHIoInsiK3N0cix0cnVlLHRydWUpOwovLyAgICBpZiAocmVzdWx0WzBdPT1udWxs
KSByZXR1cm4gW0xNY3JlYXRlTW1sTm9kZSgibW8iLAovLwkJCSAgIGRvY3VtZW50
LmNyZWF0ZVRleHROb2RlKHN5bWJvbC5pbnB1dCkpLHN0cl07CiAgICAgIG5vZGUg
PSBMTWNyZWF0ZU1tbE5vZGUoIm10YWJsZSIscmVzdWx0WzBdKTsKICAgICAgbWFz
ayA9IG1hc2sucmVwbGFjZSgvbC9nLCJsZWZ0ICIpOwogICAgICBtYXNrID0gbWFz
ay5yZXBsYWNlKC9yL2csInJpZ2h0ICIpOwogICAgICBtYXNrID0gbWFzay5yZXBs
YWNlKC9jL2csImNlbnRlciAiKTsKICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoImNv
bHVtbmFsaWduIixtYXNrKTsKICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoImRpc3Bs
YXlzdHlsZSIsImZhbHNlIik7CiAgICAgIGlmIChpc0lFKQoJcmV0dXJuIFtub2Rl
LHJlc3VsdFsxXSxudWxsXTsKLy8gdHJ5aW5nIHRvIGdldCBhICpsaXR0bGUqIGJp
dCBvZiBzcGFjZSBhcm91bmQgdGhlIGFycmF5Ci8vIChJRSBhbHJlYWR5IGluY2x1
ZGVzIGl0KQogICAgICB2YXIgbHNwYWNlID0gTE1jcmVhdGVFbGVtZW50TWF0aE1M
KCJtc3BhY2UiKTsKICAgICAgbHNwYWNlLnNldEF0dHJpYnV0ZSgid2lkdGgiLCIw
LjE2N2VtIik7CiAgICAgIHZhciByc3BhY2UgPSBMTWNyZWF0ZUVsZW1lbnRNYXRo
TUwoIm1zcGFjZSIpOwogICAgICByc3BhY2Uuc2V0QXR0cmlidXRlKCJ3aWR0aCIs
IjAuMTY3ZW0iKTsKICAgICAgdmFyIG5vZGUxID0gTE1jcmVhdGVNbWxOb2RlKCJt
cm93Iixsc3BhY2UpOwogICAgICBub2RlMS5hcHBlbmRDaGlsZChub2RlKTsKICAg
ICAgbm9kZTEuYXBwZW5kQ2hpbGQocnNwYWNlKTsKICAgICAgcmV0dXJuIFtub2Rl
MSxyZXN1bHRbMV0sbnVsbF07CiAgICB9IGVsc2UgewkvLyBlcW5hcnJheQogICAg
ICByZXN1bHQgPSBMTXBhcnNlRXhwcigieyIrc3RyLHRydWUsdHJ1ZSk7CiAgICAg
IG5vZGUgPSBMTWNyZWF0ZU1tbE5vZGUoIm10YWJsZSIscmVzdWx0WzBdKTsKICAg
ICAgaWYgKGlzSUUpCglub2RlLnNldEF0dHJpYnV0ZSgiY29sdW1uc3BhY2luZyIs
IjAuMjVlbSIpOyAvLyBiZXN0IGluIHByYWN0aWNlPwogICAgICBlbHNlCglub2Rl
LnNldEF0dHJpYnV0ZSgiY29sdW1uc3BhY2luZyIsIjAuMTY3ZW0iKTsgLy8gY29y
cmVjdCAoYnV0IGlnbm9yZWQ/KQogICAgICBub2RlLnNldEF0dHJpYnV0ZSgiY29s
dW1uYWxpZ24iLCJyaWdodCBjZW50ZXIgbGVmdCIpOwogICAgICBub2RlLnNldEF0
dHJpYnV0ZSgiZGlzcGxheXN0eWxlIiwidHJ1ZSIpOwogICAgICBub2RlID0gTE1j
cmVhdGVNbWxOb2RlKCJtcm93Iixub2RlKTsKICAgICAgcmV0dXJuIFtub2RlLHJl
c3VsdFsxXSxudWxsXTsKICAgIH0KICBjYXNlIFRFWFQ6CiAgICAgIGlmIChzdHIu
Y2hhckF0KDApPT0ieyIpIGk9c3RyLmluZGV4T2YoIn0iKTsKICAgICAgZWxzZSBp
ID0gMDsKICAgICAgaWYgKGk9PS0xKQoJCSBpID0gc3RyLmxlbmd0aDsKICAgICAg
c3QgPSBzdHIuc2xpY2UoMSxpKTsKICAgICAgaWYgKHN0LmNoYXJBdCgwKSA9PSAi
ICIpIHsKCW5vZGUgPSBMTWNyZWF0ZUVsZW1lbnRNYXRoTUwoIm1zcGFjZSIpOwoJ
bm9kZS5zZXRBdHRyaWJ1dGUoIndpZHRoIiwiMC4zM2VtIik7CS8vIHdhcyAxZXgK
CW5ld0ZyYWcuYXBwZW5kQ2hpbGQobm9kZSk7CiAgICAgIH0KICAgICAgbmV3RnJh
Zy5hcHBlbmRDaGlsZCgKICAgICAgICBMTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRh
Zyxkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzdCkpKTsKICAgICAgaWYgKHN0LmNo
YXJBdChzdC5sZW5ndGgtMSkgPT0gIiAiKSB7Cglub2RlID0gTE1jcmVhdGVFbGVt
ZW50TWF0aE1MKCJtc3BhY2UiKTsKCW5vZGUuc2V0QXR0cmlidXRlKCJ3aWR0aCIs
IjAuMzNlbSIpOwkvLyB3YXMgMWV4CgluZXdGcmFnLmFwcGVuZENoaWxkKG5vZGUp
OwogICAgICB9CiAgICAgIHN0ciA9IExNcmVtb3ZlQ2hhcnNBbmRCbGFua3Moc3Ry
LGkrMSk7CiAgICAgIHJldHVybiBbTE1jcmVhdGVNbWxOb2RlKCJtcm93IixuZXdG
cmFnKSxzdHIsbnVsbF07CiAgY2FzZSBVTkFSWToKICAgICAgcmVzdWx0ID0gTE1w
YXJzZVNleHByKHN0cik7CiAgICAgIGlmIChyZXN1bHRbMF09PW51bGwpIHJldHVy
biBbTE1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcsCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc3ltYm9sLm91dHB1
dCkpLHN0cl07CiAgICAgIGlmICh0eXBlb2Ygc3ltYm9sLmZ1bmMgPT0gImJvb2xl
YW4iICYmIHN5bWJvbC5mdW5jKSB7IC8vIGZ1bmN0aW9ucyBoYWNrCglzdCA9IHN0
ci5jaGFyQXQoMCk7Ci8vCWlmIChzdD09Il4iIHx8IHN0PT0iXyIgfHwgc3Q9PSIv
IiB8fCBzdD09InwiIHx8IHN0PT0iLCIpIHsKCWlmIChzdD09Il4iIHx8IHN0PT0i
XyIgfHwgc3Q9PSIsIikgewoJICByZXR1cm4gW0xNY3JlYXRlTW1sTm9kZShzeW1i
b2wudGFnLAoJCSAgICBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wub3V0
cHV0KSksc3RyLHN5bWJvbC50YWddOwogICAgICAgIH0gZWxzZSB7CgkgIG5vZGUg
PSBMTWNyZWF0ZU1tbE5vZGUoIm1yb3ciLAoJICAgTE1jcmVhdGVNbWxOb2RlKHN5
bWJvbC50YWcsZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc3ltYm9sLm91dHB1dCkp
KTsKCSAgaWYgKGlzSUUpIHsKCSAgICB2YXIgc3BhY2UgPSBMTWNyZWF0ZUVsZW1l
bnRNYXRoTUwoIm1zcGFjZSIpOwoJICAgIHNwYWNlLnNldEF0dHJpYnV0ZSgid2lk
dGgiLCIwLjE2N2VtIik7CgkgICAgbm9kZS5hcHBlbmRDaGlsZChzcGFjZSk7Cgkg
IH0KCSAgbm9kZS5hcHBlbmRDaGlsZChyZXN1bHRbMF0pOwoJICByZXR1cm4gW25v
ZGUscmVzdWx0WzFdLHN5bWJvbC50YWddOwogICAgICAgIH0KICAgICAgfQogICAg
ICBpZiAoc3ltYm9sLmlucHV0ID09ICJcXHNxcnQiKSB7CQkvLyBzcXJ0CglpZiAo
aXNJRSkgewkvLyBzZXQgbWluc2l6ZSwgZm9yIFxzdXJkCgkgIHZhciBzcGFjZSA9
IExNY3JlYXRlRWxlbWVudE1hdGhNTCgibXNwYWNlIik7CgkgIHNwYWNlLnNldEF0
dHJpYnV0ZSgiaGVpZ2h0IiwiMS4yZXgiKTsKCSAgc3BhY2Uuc2V0QXR0cmlidXRl
KCJ3aWR0aCIsIjBlbSIpOwkvLyBwcm9iYWJseSBubyBlZmZlY3QKCSAgbm9kZSA9
IExNY3JlYXRlTW1sTm9kZShzeW1ib2wudGFnLHJlc3VsdFswXSkKLy8JICBub2Rl
LnNldEF0dHJpYnV0ZSgibWluc2l6ZSIsIjEiKTsJLy8gaWdub3JlZAovLwkgIG5v
ZGUgPSBMTWNyZWF0ZU1tbE5vZGUoIm1yb3ciLG5vZGUpOyAgLy8gaG9wZWZ1bGx5
IHVubmVjZXNzYXJ5CgkgIG5vZGUuYXBwZW5kQ2hpbGQoc3BhY2UpOwoJICByZXR1
cm4gW25vZGUscmVzdWx0WzFdLHN5bWJvbC50YWddOwoJfSBlbHNlCgkgIHJldHVy
biBbTE1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcscmVzdWx0WzBdKSxyZXN1bHRb
MV0sc3ltYm9sLnRhZ107CiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHN5bWJvbC5h
Y2MgPT0gImJvb2xlYW4iICYmIHN5bWJvbC5hY2MpIHsgICAvLyBhY2NlbnQKICAg
ICAgICBub2RlID0gTE1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcscmVzdWx0WzBd
KTsKCXZhciBvdXRwdXQgPSBzeW1ib2wub3V0cHV0OwoJaWYgKGlzSUUpIHsKCQlp
ZiAoc3ltYm9sLmlucHV0ID09ICJcXGhhdCIpCgkJCW91dHB1dCA9ICJcdTAzMDIi
OwoJCWVsc2UgaWYgKHN5bWJvbC5pbnB1dCA9PSAiXFx3aWRlaGF0IikKCQkJb3V0
cHV0ID0gIlx1MDA1RSI7CgkJZWxzZSBpZiAoc3ltYm9sLmlucHV0ID09ICJcXGJh
ciIpCgkJCW91dHB1dCA9ICJcdTAwQUYiOwoJCWVsc2UgaWYgKHN5bWJvbC5pbnB1
dCA9PSAiXFxncmF2ZSIpCgkJCW91dHB1dCA9ICJcdTAzMDAiOwoJCWVsc2UgaWYg
KHN5bWJvbC5pbnB1dCA9PSAiXFx0aWxkZSIpCgkJCW91dHB1dCA9ICJcdTAzMDMi
OwoJfQoJdmFyIG5vZGUxID0gTE1jcmVhdGVNbWxOb2RlKCJtbyIsZG9jdW1lbnQu
Y3JlYXRlVGV4dE5vZGUob3V0cHV0KSk7CglpZiAoc3ltYm9sLmlucHV0ID09ICJc
XHZlYyIgfHwgc3ltYm9sLmlucHV0ID09ICJcXGNoZWNrIikKCQkJCQkJLy8gZG9u
J3QgYWxsb3cgdG8gc3RyZXRjaAoJICAgIG5vZGUxLnNldEF0dHJpYnV0ZSgibWF4
c2l6ZSIsIjEuMiIpOwoJCSAvLyB3aHkgZG9lc24ndCAiMSIgd29yaz8gIFx2ZWMg
bmVhcmx5IGRpc2FwcGVhcnMgaW4gZmlyZWZveAoJaWYgKGlzSUUgJiYgc3ltYm9s
LmlucHV0ID09ICJcXGJhciIpCgkgICAgbm9kZTEuc2V0QXR0cmlidXRlKCJtYXhz
aXplIiwiMC41Iik7CglpZiAoc3ltYm9sLmlucHV0ID09ICJcXHVuZGVyYnJhY2Ui
IHx8IHN5bWJvbC5pbnB1dCA9PSAiXFx1bmRlcmxpbmUiKQoJICBub2RlMS5zZXRB
dHRyaWJ1dGUoImFjY2VudHVuZGVyIiwidHJ1ZSIpOwoJZWxzZQoJICBub2RlMS5z
ZXRBdHRyaWJ1dGUoImFjY2VudCIsInRydWUiKTsKCW5vZGUuYXBwZW5kQ2hpbGQo
bm9kZTEpOwoJaWYgKHN5bWJvbC5pbnB1dCA9PSAiXFxvdmVyYnJhY2UiIHx8IHN5
bWJvbC5pbnB1dCA9PSAiXFx1bmRlcmJyYWNlIikKCSAgbm9kZS50dHlwZSA9IFVO
REVST1ZFUjsKCXJldHVybiBbbm9kZSxyZXN1bHRbMV0sc3ltYm9sLnRhZ107CiAg
ICAgIH0gZWxzZSB7CQkJICAgICAgLy8gZm9udCBjaGFuZ2Ugb3IgZGlzcGxheXN0
eWxlIGNvbW1hbmQKICAgICAgICBpZiAoIWlzSUUgJiYgdHlwZW9mIHN5bWJvbC5j
b2RlcyAhPSAidW5kZWZpbmVkIikgewogICAgICAgICAgZm9yIChpPTA7IGk8cmVz
dWx0WzBdLmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspCiAgICAgICAgICAgIGlmIChy
ZXN1bHRbMF0uY2hpbGROb2Rlc1tpXS5ub2RlTmFtZT09Im1pIiB8fCByZXN1bHRb
MF0ubm9kZU5hbWU9PSJtaSIpIHsKICAgICAgICAgICAgICBzdCA9IChyZXN1bHRb
MF0ubm9kZU5hbWU9PSJtaSI/cmVzdWx0WzBdLmZpcnN0Q2hpbGQubm9kZVZhbHVl
OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRbMF0uY2hpbGRO
b2Rlc1tpXS5maXJzdENoaWxkLm5vZGVWYWx1ZSk7CiAgICAgICAgICAgICAgdmFy
IG5ld3N0ID0gW107CiAgICAgICAgICAgICAgZm9yICh2YXIgaj0wOyBqPHN0Lmxl
bmd0aDsgaisrKQogICAgICAgICAgICAgICAgaWYgKHN0LmNoYXJDb2RlQXQoaik+
NjQgJiYgc3QuY2hhckNvZGVBdChqKTw5MSkgbmV3c3QgPSBuZXdzdCArCiAgICAg
ICAgICAgICAgICAgIFN0cmluZy5mcm9tQ2hhckNvZGUoc3ltYm9sLmNvZGVzW3N0
LmNoYXJDb2RlQXQoaiktNjVdKTsKICAgICAgICAgICAgICAgIGVsc2UgbmV3c3Qg
PSBuZXdzdCArIHN0LmNoYXJBdChqKTsKICAgICAgICAgICAgICBpZiAocmVzdWx0
WzBdLm5vZGVOYW1lPT0ibWkiKQogICAgICAgICAgICAgICAgcmVzdWx0WzBdPUxN
Y3JlYXRlRWxlbWVudE1hdGhNTCgibW8iKS4KICAgICAgICAgICAgICAgICAgICAg
ICAgICBhcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuZXdzdCkp
OwogICAgICAgICAgICAgIGVsc2UgcmVzdWx0WzBdLnJlcGxhY2VDaGlsZChMTWNy
ZWF0ZUVsZW1lbnRNYXRoTUwoIm1vIikuCiAgICAgICAgICBhcHBlbmRDaGlsZChk
b2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuZXdzdCkpLHJlc3VsdFswXS5jaGlsZE5v
ZGVzW2ldKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBub2RlID0g
TE1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcscmVzdWx0WzBdKTsKICAgICAgICBu
b2RlLnNldEF0dHJpYnV0ZShzeW1ib2wuYXRuYW1lLHN5bWJvbC5hdHZhbCk7Cglp
ZiAoc3ltYm9sLmlucHV0ID09ICJcXHNjcmlwdHN0eWxlIiB8fAoJICAgIHN5bWJv
bC5pbnB1dCA9PSAiXFxzY3JpcHRzY3JpcHRzdHlsZSIpCgkJbm9kZS5zZXRBdHRy
aWJ1dGUoImRpc3BsYXlzdHlsZSIsImZhbHNlIik7CglyZXR1cm4gW25vZGUscmVz
dWx0WzFdLHN5bWJvbC50YWddOwogICAgICB9CiAgY2FzZSBCSU5BUlk6CiAgICBy
ZXN1bHQgPSBMTXBhcnNlU2V4cHIoc3RyKTsKICAgIGlmIChyZXN1bHRbMF09PW51
bGwpIHJldHVybiBbTE1jcmVhdGVNbWxOb2RlKCJtbyIsCgkJCSAgIGRvY3VtZW50
LmNyZWF0ZVRleHROb2RlKHN5bWJvbC5pbnB1dCkpLHN0cixudWxsXTsKICAgIHJl
c3VsdDIgPSBMTXBhcnNlU2V4cHIocmVzdWx0WzFdKTsKICAgIGlmIChyZXN1bHQy
WzBdPT1udWxsKSByZXR1cm4gW0xNY3JlYXRlTW1sTm9kZSgibW8iLAoJCQkgICBk
b2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzeW1ib2wuaW5wdXQpKSxzdHIsbnVsbF07
CiAgICBpZiAoc3ltYm9sLmlucHV0PT0iXFxyb290IiB8fCBzeW1ib2wuaW5wdXQ9
PSJcXHN0YWNrcmVsIikKICAgICAgbmV3RnJhZy5hcHBlbmRDaGlsZChyZXN1bHQy
WzBdKTsKICAgIG5ld0ZyYWcuYXBwZW5kQ2hpbGQocmVzdWx0WzBdKTsKICAgIGlm
IChzeW1ib2wuaW5wdXQ9PSJcXGZyYWMiKSBuZXdGcmFnLmFwcGVuZENoaWxkKHJl
c3VsdDJbMF0pOwogICAgcmV0dXJuIFtMTWNyZWF0ZU1tbE5vZGUoc3ltYm9sLnRh
ZyxuZXdGcmFnKSxyZXN1bHQyWzFdLHN5bWJvbC50YWddOwogIGNhc2UgSU5GSVg6
CiAgICBzdHIgPSBMTXJlbW92ZUNoYXJzQW5kQmxhbmtzKHN0cixzeW1ib2wuaW5w
dXQubGVuZ3RoKTsKICAgIHJldHVybiBbTE1jcmVhdGVNbWxOb2RlKCJtbyIsZG9j
dW1lbnQuY3JlYXRlVGV4dE5vZGUoc3ltYm9sLm91dHB1dCkpLAoJc3RyLHN5bWJv
bC50YWddOwogIGRlZmF1bHQ6CiAgICByZXR1cm4gW0xNY3JlYXRlTW1sTm9kZShz
eW1ib2wudGFnLCAgICAgICAgLy9pdHMgYSBjb25zdGFudAoJZG9jdW1lbnQuY3Jl
YXRlVGV4dE5vZGUoc3ltYm9sLm91dHB1dCkpLHN0cixzeW1ib2wudGFnXTsKICB9
Cn0KCmZ1bmN0aW9uIExNcGFyc2VJZXhwcihzdHIpIHsKICB2YXIgc3ltYm9sLCBz
eW0xLCBzeW0yLCBub2RlLCByZXN1bHQsIHRhZywgdW5kZXJvdmVyOwogIHN0ciA9
IExNcmVtb3ZlQ2hhcnNBbmRCbGFua3Moc3RyLDApOwogIHN5bTEgPSBMTWdldFN5
bWJvbChzdHIpOwogIHJlc3VsdCA9IExNcGFyc2VTZXhwcihzdHIpOwogIG5vZGUg
PSByZXN1bHRbMF07CiAgc3RyID0gcmVzdWx0WzFdOwogIHRhZyA9IHJlc3VsdFsy
XTsKICBzeW1ib2wgPSBMTWdldFN5bWJvbChzdHIpOwogIGlmIChzeW1ib2wudHR5
cGUgPT0gSU5GSVgpIHsKICAgIHN0ciA9IExNcmVtb3ZlQ2hhcnNBbmRCbGFua3Mo
c3RyLHN5bWJvbC5pbnB1dC5sZW5ndGgpOwogICAgcmVzdWx0ID0gTE1wYXJzZVNl
eHByKHN0cik7CiAgICBpZiAocmVzdWx0WzBdID09IG51bGwpIC8vIHNob3cgYm94
IGluIHBsYWNlIG9mIG1pc3NpbmcgYXJndW1lbnQKICAgICAgcmVzdWx0WzBdID0g
TE1jcmVhdGVNbWxOb2RlKCJtbyIsZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIlx1
MjVBMSIpKTsKICAgIHN0ciA9IHJlc3VsdFsxXTsKICAgIHRhZyA9IHJlc3VsdFsy
XTsKICAgIGlmIChzeW1ib2wuaW5wdXQgPT0gIl8iIHx8IHN5bWJvbC5pbnB1dCA9
PSAiXiIpIHsKICAgICAgc3ltMiA9IExNZ2V0U3ltYm9sKHN0cik7CiAgICAgIHRh
ZyA9IG51bGw7CS8vIG5vIHNwYWNlIGJldHdlZW4geF4yIGFuZCBhIGZvbGxvd2lu
ZyBzaW4sIGNvcywgZXRjLgovLyBUaGlzIGlzIGZvciBcdW5kZXJicmFjZSBhbmQg
XG92ZXJicmFjZQogICAgICB1bmRlcm92ZXIgPSAoKHN5bTEudHR5cGUgPT0gVU5E
RVJPVkVSKSB8fCAobm9kZS50dHlwZSA9PSBVTkRFUk9WRVIpKTsKLy8gICAgdW5k
ZXJvdmVyID0gKHN5bTEudHR5cGUgPT0gVU5ERVJPVkVSKTsKICAgICAgaWYgKHN5
bWJvbC5pbnB1dCA9PSAiXyIgJiYgc3ltMi5pbnB1dCA9PSAiXiIpIHsKICAgICAg
ICBzdHIgPSBMTXJlbW92ZUNoYXJzQW5kQmxhbmtzKHN0cixzeW0yLmlucHV0Lmxl
bmd0aCk7CiAgICAgICAgdmFyIHJlczIgPSBMTXBhcnNlU2V4cHIoc3RyKTsKCXN0
ciA9IHJlczJbMV07Cgl0YWcgPSByZXMyWzJdOyAgLy8gbGVhdmUgc3BhY2UgYmV0
d2VlbiB4XzFeMiBhbmQgYSBmb2xsb3dpbmcgc2luIGV0Yy4KICAgICAgICBub2Rl
ID0gTE1jcmVhdGVNbWxOb2RlKCh1bmRlcm92ZXI/Im11bmRlcm92ZXIiOiJtc3Vi
c3VwIiksbm9kZSk7CiAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChyZXN1bHRbMF0p
OwogICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQocmVzMlswXSk7CiAgICAgIH0gZWxz
ZSBpZiAoc3ltYm9sLmlucHV0ID09ICJfIikgewoJbm9kZSA9IExNY3JlYXRlTW1s
Tm9kZSgodW5kZXJvdmVyPyJtdW5kZXIiOiJtc3ViIiksbm9kZSk7CiAgICAgICAg
bm9kZS5hcHBlbmRDaGlsZChyZXN1bHRbMF0pOwogICAgICB9IGVsc2UgewoJbm9k
ZSA9IExNY3JlYXRlTW1sTm9kZSgodW5kZXJvdmVyPyJtb3ZlciI6Im1zdXAiKSxu
b2RlKTsKICAgICAgICBub2RlLmFwcGVuZENoaWxkKHJlc3VsdFswXSk7CiAgICAg
IH0KICAgICAgbm9kZSA9IExNY3JlYXRlTW1sTm9kZSgibXJvdyIsbm9kZSk7IC8v
IHNvIHN1bSBkb2VzIG5vdCBzdHJldGNoCiAgICB9IGVsc2UgewogICAgICBub2Rl
ID0gTE1jcmVhdGVNbWxOb2RlKHN5bWJvbC50YWcsbm9kZSk7CiAgICAgIGlmIChz
eW1ib2wuaW5wdXQgPT0gIlxcYXRvcCIgfHwgc3ltYm9sLmlucHV0ID09ICJcXGNo
b29zZSIpCglub2RlLnNldEF0dHJpYnV0ZSgibGluZXRoaWNrbmVzcyIsIjBleCIp
OwogICAgICBub2RlLmFwcGVuZENoaWxkKHJlc3VsdFswXSk7CiAgICAgIGlmIChz
eW1ib2wuaW5wdXQgPT0gIlxcY2hvb3NlIikKCW5vZGUgPSBMTWNyZWF0ZU1tbE5v
ZGUoIm1mZW5jZWQiLG5vZGUpOwogICAgfQogIH0KICByZXR1cm4gW25vZGUsc3Ry
LHRhZ107Cn0KCmZ1bmN0aW9uIExNcGFyc2VFeHByKHN0cixyaWdodGJyYWNrZXQs
bWF0cml4KSB7CiAgdmFyIHN5bWJvbCwgbm9kZSwgcmVzdWx0LCBpLCB0YWcsCiAg
bmV3RnJhZyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKICBk
byB7CiAgICBzdHIgPSBMTXJlbW92ZUNoYXJzQW5kQmxhbmtzKHN0ciwwKTsKICAg
IHJlc3VsdCA9IExNcGFyc2VJZXhwcihzdHIpOwogICAgbm9kZSA9IHJlc3VsdFsw
XTsKICAgIHN0ciA9IHJlc3VsdFsxXTsKICAgIHRhZyA9IHJlc3VsdFsyXTsKICAg
IHN5bWJvbCA9IExNZ2V0U3ltYm9sKHN0cik7CiAgICBpZiAobm9kZSE9dW5kZWZp
bmVkKSB7CiAgICAgIGlmICgodGFnID09ICJtbiIgfHwgdGFnID09ICJtaSIpICYm
IHN5bWJvbCE9bnVsbCAmJgoJdHlwZW9mIHN5bWJvbC5mdW5jID09ICJib29sZWFu
IiAmJiBzeW1ib2wuZnVuYykgewoJCQkvLyBBZGQgc3BhY2UgYmVmb3JlIFxzaW4g
aW4gMlxzaW4geCBvciB4XHNpbiB4CgkgIHZhciBzcGFjZSA9IExNY3JlYXRlRWxl
bWVudE1hdGhNTCgibXNwYWNlIik7CgkgIHNwYWNlLnNldEF0dHJpYnV0ZSgid2lk
dGgiLCIwLjE2N2VtIik7CgkgIG5vZGUgPSBMTWNyZWF0ZU1tbE5vZGUoIm1yb3ci
LG5vZGUpOwoJICBub2RlLmFwcGVuZENoaWxkKHNwYWNlKTsKICAgICAgfQogICAg
ICBuZXdGcmFnLmFwcGVuZENoaWxkKG5vZGUpOwogICAgfQogIH0gd2hpbGUgKChz
eW1ib2wudHR5cGUgIT0gUklHSFRCUkFDS0VUKQogICAgICAgICYmIHN5bWJvbCE9
bnVsbCAmJiBzeW1ib2wub3V0cHV0IT0iIik7CiAgdGFnID0gbnVsbDsKICBpZiAo
c3ltYm9sLnR0eXBlID09IFJJR0hUQlJBQ0tFVCkgewogICAgaWYgKHN5bWJvbC5p
bnB1dCA9PSAiXFxyaWdodCIpIHsgLy8gcmlnaHQgd2hhdD8KICAgICAgc3RyID0g
TE1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0aCk7
CiAgICAgIHN5bWJvbCA9IExNZ2V0U3ltYm9sKHN0cik7CiAgICAgIGlmIChzeW1i
b2wgIT0gbnVsbCAmJiBzeW1ib2wuaW5wdXQgPT0gIi4iKQoJc3ltYm9sLmludmlz
aWJsZSA9IHRydWU7CiAgICAgIGlmIChzeW1ib2wgIT0gbnVsbCkKCXRhZyA9IHN5
bWJvbC5ydGFnOwogICAgfQogICAgaWYgKHN5bWJvbCE9bnVsbCkKICAgICAgc3Ry
ID0gTE1yZW1vdmVDaGFyc0FuZEJsYW5rcyhzdHIsc3ltYm9sLmlucHV0Lmxlbmd0
aCk7IC8vIHJlYWR5IHRvIHJldHVybgogICAgdmFyIGxlbiA9IG5ld0ZyYWcuY2hp
bGROb2Rlcy5sZW5ndGg7CiAgICBpZiAobWF0cml4ICYmCiAgICAgIGxlbj4wICYm
IG5ld0ZyYWcuY2hpbGROb2Rlc1tsZW4tMV0ubm9kZU5hbWUgPT0gIm1yb3ciICYm
IGxlbj4xICYmCiAgICAgIG5ld0ZyYWcuY2hpbGROb2Rlc1tsZW4tMl0ubm9kZU5h
bWUgPT0gIm1vIiAmJgogICAgICBuZXdGcmFnLmNoaWxkTm9kZXNbbGVuLTJdLmZp
cnN0Q2hpbGQubm9kZVZhbHVlID09ICImIikgeyAvL21hdHJpeAoJdmFyIHBvcyA9
IFtdOyAvLyBwb3NpdGlvbnMgb2YgYW1wZXJzYW5kcwogICAgICAgIHZhciBtID0g
bmV3RnJhZy5jaGlsZE5vZGVzLmxlbmd0aDsKICAgICAgICBmb3IgKGk9MDsgbWF0
cml4ICYmIGk8bTsgaT1pKzIpIHsKICAgICAgICAgIHBvc1tpXSA9IFtdOwogICAg
ICAgICAgbm9kZSA9IG5ld0ZyYWcuY2hpbGROb2Rlc1tpXTsKCSAgZm9yICh2YXIg
aj0wOyBqPG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg7IGorKykKCSAgICBpZiAobm9k
ZS5jaGlsZE5vZGVzW2pdLmZpcnN0Q2hpbGQubm9kZVZhbHVlPT0iJiIpCgkgICAg
ICBwb3NbaV1bcG9zW2ldLmxlbmd0aF09ajsKICAgICAgICB9Cgl2YXIgcm93LCBm
cmFnLCBuLCBrLCB0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21l
bnQoKTsKCWZvciAoaT0wOyBpPG07IGk9aSsyKSB7CgkgIHJvdyA9IGRvY3VtZW50
LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKCSAgZnJhZyA9IGRvY3VtZW50LmNy
ZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKCSAgbm9kZSA9IG5ld0ZyYWcuZmlyc3RD
aGlsZDsgLy8gPG1yb3c+IC0mLSYuLi4mLSYtIDwvbXJvdz4KCSAgbiA9IG5vZGUu
Y2hpbGROb2Rlcy5sZW5ndGg7CgkgIGsgPSAwOwoJICBmb3IgKGo9MDsgajxuOyBq
KyspIHsKCSAgICBpZiAodHlwZW9mIHBvc1tpXVtrXSAhPSAidW5kZWZpbmVkIiAm
JiBqPT1wb3NbaV1ba10pewoJICAgICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmZp
cnN0Q2hpbGQpOyAvL3JlbW92ZSAmCgkgICAgICByb3cuYXBwZW5kQ2hpbGQoTE1j
cmVhdGVNbWxOb2RlKCJtdGQiLGZyYWcpKTsKCSAgICAgIGsrKzsKCSAgICB9IGVs
c2UgZnJhZy5hcHBlbmRDaGlsZChub2RlLmZpcnN0Q2hpbGQpOwoJICB9CgkgIHJv
dy5hcHBlbmRDaGlsZChMTWNyZWF0ZU1tbE5vZGUoIm10ZCIsZnJhZykpOwoJICBp
ZiAobmV3RnJhZy5jaGlsZE5vZGVzLmxlbmd0aD4yKSB7CgkgICAgbmV3RnJhZy5y
ZW1vdmVDaGlsZChuZXdGcmFnLmZpcnN0Q2hpbGQpOyAvL3JlbW92ZSA8bXJvdz4g
PC9tcm93PgoJICAgIG5ld0ZyYWcucmVtb3ZlQ2hpbGQobmV3RnJhZy5maXJzdENo
aWxkKTsgLy9yZW1vdmUgPG1vPiY8L21vPgoJICB9CgkgIHRhYmxlLmFwcGVuZENo
aWxkKExNY3JlYXRlTW1sTm9kZSgibXRyIixyb3cpKTsKCX0KCXJldHVybiBbdGFi
bGUsc3RyXTsKICAgIH0KICAgIGlmICh0eXBlb2Ygc3ltYm9sLmludmlzaWJsZSAh
PSAiYm9vbGVhbiIgfHwgIXN5bWJvbC5pbnZpc2libGUpIHsKICAgICAgbm9kZSA9
IExNY3JlYXRlTW1sTm9kZSgibW8iLGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN5
bWJvbC5vdXRwdXQpKTsKICAgICAgbmV3RnJhZy5hcHBlbmRDaGlsZChub2RlKTsK
ICAgIH0KICB9CiAgcmV0dXJuIFtuZXdGcmFnLHN0cix0YWddOwp9CgpmdW5jdGlv
biBMTXBhcnNlTWF0aChzdHIpIHsKICB2YXIgcmVzdWx0LCBub2RlID0gTE1jcmVh
dGVFbGVtZW50TWF0aE1MKCJtc3R5bGUiKTsKICBpZiAoTE1tYXRoY29sb3IgIT0g
IiIpIG5vZGUuc2V0QXR0cmlidXRlKCJtYXRoY29sb3IiLExNbWF0aGNvbG9yKTsK
ICBpZiAoTE1tYXRoZm9udGZhbWlseSAhPSAiIikgbm9kZS5zZXRBdHRyaWJ1dGUo
ImZvbnRmYW1pbHkiLExNbWF0aGZvbnRmYW1pbHkpOwogIG5vZGUuYXBwZW5kQ2hp
bGQoTE1wYXJzZUV4cHIoc3RyLnJlcGxhY2UoL15ccysvZywiIiksZmFsc2UsZmFs
c2UpWzBdKTsKICBub2RlID0gTE1jcmVhdGVNbWxOb2RlKCJtYXRoIixub2RlKTsK
ICBpZiAoTE1zaG93YXNjaWlmb3JtdWxhb25ob3ZlcikgICAgICAgICAgICAgICAg
ICAgIC8vZml4ZWQgYnkgZGpoc3Ugc28gbmV3bGluZQogICAgbm9kZS5zZXRBdHRy
aWJ1dGUoInRpdGxlIixzdHIucmVwbGFjZSgvXHMrL2csIiAiKSk7Ly9kb2VzIG5v
dCBzaG93IGluIEdlY2tvCiAgdmFyIGZub2RlID0gTE1jcmVhdGVFbGVtZW50WEhU
TUwoInNwYW4iKTsKICBmbm9kZS5zdHlsZS5mb250U2l6ZSA9IG1hdGhmb250c2l6
ZTsKICBpZiAoTE1tYXRoZm9udGZhbWlseSAhPSAiIikgZm5vZGUuc3R5bGUuZm9u
dEZhbWlseSA9IExNbWF0aGZvbnRmYW1pbHk7CiAgZm5vZGUuYXBwZW5kQ2hpbGQo
bm9kZSk7CiAgcmV0dXJuIGZub2RlOwp9CgpmdW5jdGlvbiBMTXN0cmFycjJkb2NG
cmFnKGFyciwgbGluZWJyZWFrcykgewogIHZhciBuZXdGcmFnPWRvY3VtZW50LmNy
ZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKICB2YXIgZXhwciA9IGZhbHNlOwogIGZv
ciAodmFyIGk9MDsgaTxhcnIubGVuZ3RoOyBpKyspIHsKICAgIGlmIChleHByKSBu
ZXdGcmFnLmFwcGVuZENoaWxkKExNcGFyc2VNYXRoKGFycltpXSkpOwogICAgZWxz
ZSB7CiAgICAgIHZhciBhcnJpID0gKGxpbmVicmVha3MgPyBhcnJbaV0uc3BsaXQo
IlxuXG4iKSA6IFthcnJbaV1dKTsKICAgICAgbmV3RnJhZy5hcHBlbmRDaGlsZChM
TWNyZWF0ZUVsZW1lbnRYSFRNTCgic3BhbiIpLgogICAgICBhcHBlbmRDaGlsZChk
b2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhcnJpWzBdKSkpOwogICAgICBmb3IgKHZh
ciBqPTE7IGo8YXJyaS5sZW5ndGg7IGorKykgewogICAgICAgIG5ld0ZyYWcuYXBw
ZW5kQ2hpbGQoTE1jcmVhdGVFbGVtZW50WEhUTUwoInAiKSk7CiAgICAgICAgbmV3
RnJhZy5hcHBlbmRDaGlsZChMTWNyZWF0ZUVsZW1lbnRYSFRNTCgic3BhbiIpLgog
ICAgICAgIGFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGFycmlb
al0pKSk7CiAgICAgIH0KICAgIH0KICAgIGV4cHIgPSAhZXhwcjsKICB9CiAgcmV0
dXJuIG5ld0ZyYWc7Cn0KCmZ1bmN0aW9uIExNcHJvY2Vzc05vZGVSKG4sIGxpbmVi
cmVha3MpIHsKICB2YXIgbXRjaCwgc3RyLCBhcnIsIGZyZywgaTsKICBpZiAobi5j
aGlsZE5vZGVzLmxlbmd0aCA9PSAwKSB7CiAgIGlmICgobi5ub2RlVHlwZSE9OCB8
fCBsaW5lYnJlYWtzKSAmJgogICAgbi5wYXJlbnROb2RlLm5vZGVOYW1lIT0iZm9y
bSIgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lIT0iRk9STSIgJiYKICAgIG4ucGFy
ZW50Tm9kZS5ub2RlTmFtZSE9InRleHRhcmVhIiAmJiBuLnBhcmVudE5vZGUubm9k
ZU5hbWUhPSJURVhUQVJFQSIgJiYKICAgIG4ucGFyZW50Tm9kZS5ub2RlTmFtZSE9
InByZSIgJiYgbi5wYXJlbnROb2RlLm5vZGVOYW1lIT0iUFJFIikgewogICAgc3Ry
ID0gbi5ub2RlVmFsdWU7CiAgICBpZiAoIShzdHIgPT0gbnVsbCkpIHsKICAgICAg
c3RyID0gc3RyLnJlcGxhY2UoL1xyXG5cclxuL2csIlxuXG4iKTsKICAgICAgc3Ry
ID0gc3RyLnJlcGxhY2UoL1x4MjArL2csIiAiKTsKICAgICAgc3RyID0gc3RyLnJl
cGxhY2UoL1xzKlxyXG4vZywiICIpOwovLyBERUxJTUlURVJTOgogICAgICBtdGNo
ID0gKHN0ci5pbmRleE9mKCJcJCIpPT0tMSA/IGZhbHNlIDogdHJ1ZSk7CiAgICAg
IHN0ciA9IHN0ci5yZXBsYWNlKC8oW15cXF0pXCQvZywiJDEgXCQiKTsKICAgICAg
c3RyID0gc3RyLnJlcGxhY2UoL15cJC8sIiBcJCIpOwkvLyBpbiBjYXNlIFwkIGF0
IHN0YXJ0IG9mIHN0cmluZwogICAgICBhcnIgPSBzdHIuc3BsaXQoIiBcJCIpOwog
ICAgICBmb3IgKGk9MDsgaTxhcnIubGVuZ3RoOyBpKyspCglhcnJbaV09YXJyW2ld
LnJlcGxhY2UoL1xcXCQvZywiXCQiKTsKICAgICAgaWYgKGFyci5sZW5ndGg+MSB8
fCBtdGNoKSB7CiAgICAgICAgaWYgKExNY2hlY2tGb3JNYXRoTUwpIHsKICAgICAg
ICAgIExNY2hlY2tGb3JNYXRoTUwgPSBmYWxzZTsKICAgICAgICAgIHZhciBuZCA9
IExNaXNNYXRoTUxhdmFpbGFibGUoKTsKICAgICAgICAgIExNbm9NYXRoTUwgPSBu
ZCAhPSBudWxsOwogICAgICAgICAgaWYgKExNbm9NYXRoTUwgJiYgTE1ub3RpZnlJ
Zk5vTWF0aE1MKQogICAgICAgICAgICBpZiAoTE1hbGVydElmTm9NYXRoTUwpCiAg
ICAgICAgICAgICAgYWxlcnQoIlRvIHZpZXcgdGhlIEFTQ0lJTWF0aE1MIG5vdGF0
aW9uIHVzZSBJbnRlcm5ldCBFeHBsb3JlciA2ICtcbk1hdGhQbGF5ZXIgKGZyZWUg
ZnJvbSB3d3cuZGVzc2NpLmNvbSlcblwKICAgICAgICAgICAgICAgIG9yIEZpcmVm
b3gvTW96aWxsYS9OZXRzY2FwZSIpOwogICAgICAgICAgICBlbHNlIExNYm9keS5p
bnNlcnRCZWZvcmUobmQsTE1ib2R5LmNoaWxkTm9kZXNbMF0pOwogICAgICAgIH0K
ICAgICAgICBpZiAoIUxNbm9NYXRoTUwpIHsKICAgICAgICAgIGZyZyA9IExNc3Ry
YXJyMmRvY0ZyYWcoYXJyLG4ubm9kZVR5cGU9PTgpOwogICAgICAgICAgdmFyIGxl
biA9IGZyZy5jaGlsZE5vZGVzLmxlbmd0aDsKICAgICAgICAgIG4ucGFyZW50Tm9k
ZS5yZXBsYWNlQ2hpbGQoZnJnLG4pOwogICAgICAgICAgcmV0dXJuIGxlbi0xOwog
ICAgICAgIH0gZWxzZSByZXR1cm4gMDsKICAgICAgfQogICAgfQogICB9IGVsc2Ug
cmV0dXJuIDA7CiAgfSBlbHNlIGlmIChuLm5vZGVOYW1lIT0ibWF0aCIpIHsKICAg
IGZvciAoaT0wOyBpPG4uY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykKICAgICAgaSAr
PSBMTXByb2Nlc3NOb2RlUihuLmNoaWxkTm9kZXNbaV0sIGxpbmVicmVha3MpOwog
IH0KICByZXR1cm4gMDsKfQoKdmFyIHRjbnQgPSAwLCBkY250ID0gMDsgLy90aGVv
cmVtIGFuZCBkZWZpbml0aW9uIGNvdW50ZXJzCgpmdW5jdGlvbiBzaW1wbGVMYVRl
WGZvcm1hdHRpbmcoc3QpIHsKICBzdCA9IHN0LnJlcGxhY2UoL1wkXCQoLio/KVwk
XCQvZywiPHAgYWxpZ249XCJjZW50ZXJcIj4kXFxkaXNwbGF5c3R5bGV7JDF9JDwv
cD4iKTsKICBzdCA9IHN0LnJlcGxhY2UoL1xcYmVnaW57KHRoZW9yZW18bGVtbWF8
cHJvcG9zaXRpb258Y29yb2xsYXJ5KX0oKC58XG4pKj8pXFxlbmR7XDF9L2csZnVu
Y3Rpb24ocixzLHQpe3RjbnQrKzsgcmV0dXJuICI8Yj4iK3MuY2hhckF0KDApLnRv
VXBwZXJDYXNlKCkrcy5zbGljZSgxKSsiICIrdGNudCsiLjwvYj4gPGk+Iit0LnJl
cGxhY2UoL15ccyo8XC8/XHcrXC8/Pnxccyo8XC8/XHcrXC8/PiQvZywiIikrIjwv
aT4ifSk7CiAgc3QgPSBzdC5yZXBsYWNlKC9cXGJlZ2lueyhkZWZpbml0aW9ufGV4
YW1wbGV8cmVtYXJrfHByb2JsZW18ZXhlcmNpc2V8Y29uamVjdHVyZXxzb2x1dGlv
bil9KCgufFxuKSo/KVxcZW5ke1wxfS9nLGZ1bmN0aW9uKHIscyx0KXtkY250Kys7
IHJldHVybiAiPGI+IitzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3Muc2xpY2Uo
MSkrIiAiK2RjbnQrIi48L2I+ICIrdC5yZXBsYWNlKC9eXHMqPFwvP1x3K1wvPz58
XHMqPFwvP1x3K1wvPz4kL2csIiIpfSk7CiAgc3QgPSBzdC5yZXBsYWNlKC9cXGJl
Z2lue3Byb29mfSgoLnxcbikqPylcXGVuZHtwcm9vZn0vZyxmdW5jdGlvbihzLHQp
e3JldHVybiAiPGk+UHJvb2Y6PC9pPiAiK3QucmVwbGFjZSgvXlxzKjxcLz9cdytc
Lz8+fFxzKjxcLz9cdytcLz8+JC9nLCIiKSsiICYjeDI1QTE7In0pOwogIHN0ID0g
c3QucmVwbGFjZSgvXFxlbXBoeyguKj8pfS9nLCI8ZW0+JDE8L2VtPiIpOwogIHN0
ID0gc3QucmVwbGFjZSgvXFx0ZXh0YmZ7KC4qPyl9L2csIjxiPiQxPC9iPiIpOwog
IHN0ID0gc3QucmVwbGFjZSgvXFxjaXRleyguKj8pfS9nLCJbJDFdIik7CiAgc3Qg
PSBzdC5yZXBsYWNlKC9cXGNoYXB0ZXJ7KC4qPyl9L2csIjxoMj4kMTwvaDI+Iik7
CiAgc3QgPSBzdC5yZXBsYWNlKC9cXHNlY3Rpb257KC4qPyl9KFxzKjxcLz8oYnJ8
cClccz9cLz8+KT8vZywiPGgzPiQxPC9oMz4iKTsKICBzdCA9IHN0LnJlcGxhY2Uo
L1xcc3Vic2VjdGlvbnsoLio/KX0vZywiPGg0PiQxPC9oND4iKTsKICBzdCA9IHN0
LnJlcGxhY2UoL1xcYmVnaW57aXRlbWl6ZX0oXHMqPFwvPyhicnxwKVxzP1wvPz4p
Py9nLCI8dWw+Iik7CiAgc3QgPSBzdC5yZXBsYWNlKC9cXGl0ZW1ccygoLnxcbikq
PykoPz0oXFxpdGVtfFxcZW5kKSkvZywiPGxpPiQxPC9saT4iKTsKICBzdCA9IHN0
LnJlcGxhY2UoL1xcZW5ke2l0ZW1pemV9KFxzKjxcLz8oYnJ8cClccz9cLz8+KT8v
ZywiPC91bD4iKTsKICBzdCA9IHN0LnJlcGxhY2UoL1xcYmVnaW57ZW51bWVyYXRl
fShccyo8XC8/KGJyfHApXHM/XC8/Pik/L2csIjxvbD4iKTsKICBzdCA9IHN0LnJl
cGxhY2UoL1xcZW5ke2VudW1lcmF0ZX0oXHMqPFwvPyhicnxwKVxzP1wvPz4pPy9n
LCI8L29sPiIpOwogIHN0ID0gc3QucmVwbGFjZSgvXFxpdGVtXFsoLio/KV17KC4q
Pyl9L2csIjxkdD4kMTwvZHQ+PGRkPiQyPC9kZD4iKTsKICBzdCA9IHN0LnJlcGxh
Y2UoL1xcYmVnaW57ZGVzY3JpcHRpb259L2csIjxkbD4iKTsKICBzdCA9IHN0LnJl
cGxhY2UoL1xcZW5ke2Rlc2NyaXB0aW9ufS9nLCI8L2RsPiIpOwogIHN0ID0gc3Qu
cmVwbGFjZSgvXFxuZXdsaW5lXGIvZywiPGJyLz4iKTsKICBzdCA9IHN0LnJlcGxh
Y2UoL1xcbmV3cGFnZVxiL2csIjxiciBzdHlsZT1cInBhZ2UtYnJlYWstYWZ0ZXI6
YWx3YXlzO1wiPiIpOwogIHN0ID0gc3QucmVwbGFjZSgvXFxwYXJcYi9nLCI8cD4m
bmJzcDs8L3A+Iik7CiAgc3QgPSBzdC5yZXBsYWNlKC9cXGJpZ3NraXAvZywiPHAg
c3R5bGU9XCJtYXJnaW4tYm90dG9tOjAuNWluXCI+Jm5ic3A7PC9wPiIpOwogIHN0
ID0gc3QucmVwbGFjZSgvXFxtZWRza2lwL2csIjxwIHN0eWxlPVwibWFyZ2luLWJv
dHRvbTowLjNpblwiPiZuYnNwOzwvcD4iKTsKICBzdCA9IHN0LnJlcGxhY2UoL1xc
c21hbGxza2lwL2csIjxwIHN0eWxlPVwibWFyZ2luLWJvdHRvbTowLjE1aW5cIj4m
bmJzcDs8L3A+Iik7CiAgc3QgPSBzdC5yZXBsYWNlKC9cXGJlZ2lue2NlbnRlcn0o
Lio/KVxcZW5ke2NlbnRlcn0vZywiPHAgYWxpZ249XCJjZW50ZXJcIj4kMTwvcD4i
KTsKICBzdCA9IHN0LnJlcGxhY2UoLzxlbWJlZFxzK2NsYXNzXHM/PVxzPyJBU0NJ
SXN2ZyIvZywiPGVtYmVkIGNsYXNzPVwiQVNDSUlzdmdcIiBzcmM9XCIiK2Rzdmds
b2NhdGlvbisiZC5zdmdcIiB3bW9kZT1cInRyYW5zcGFyZW50XCIiKTsKICBzdCA9
IHN0LnJlcGxhY2UoLyg/OlxcYmVnaW57YT9ncmFwaH18YWdyYXBofFwoOmdyYXBo
XHMpKCgufFxuKSo/KSg/OlxcZW5ke2E/Z3JhcGh9fGVuZGE/Z3JhcGh8OlwpKS9n
LGZ1bmN0aW9uKHMsdCl7cmV0dXJuICI8ZGl2PjxlbWJlZCBjbGFzcz1cIkFTQ0lJ
c3ZnXCIgc3JjPVwiIitkc3ZnbG9jYXRpb24rImQuc3ZnXCIgd21vZGU9XCJ0cmFu
c3BhcmVudFwiIHNjcmlwdD1cJyIrdC5yZXBsYWNlKC88XC8/KGJyfHB8cHJlKVxz
P1wvPz4vZ2ksIlxuIikrIlwnLz48L2Rpdj4ifSk7Ci8vICBzdCA9IHN0LnJlcGxh
Y2UoL1woOmdyYXBoKCgufFxuKSo/KTpcKS9nLGZ1bmN0aW9uKHMsdCl7cmV0dXJu
ICI8ZGl2PjxlbWJlZCBjbGFzcz1cIkFTQ0lJc3ZnXCIgc3JjPVwiIitkc3ZnbG9j
YXRpb24rImQuc3ZnXCIgd21vZGU9XCJ0cmFuc3BhcmVudFwiIHNjcmlwdD1cJyIr
dC5yZXBsYWNlKC88XC8/KGJyfHB8cHJlKVxzP1wvPz4vZ2ksIlxuIikrIlwnLz48
L2Rpdj4ifSk7CiAgc3QgPSBzdC5yZXBsYWNlKC9pbnNlcnRBU0NJSU1hdGhDYWxj
dWxhdG9yL2csIjxkaXYgY2xhc3M9XCJBU0NJSU1hdGhDYWxjdWxhdG9yXCI+PC9k
aXY+Iik7CiAgcmV0dXJuIHN0Cn0KCmZ1bmN0aW9uIExNcHJvY2Vzc05vZGUobiwg
bGluZWJyZWFrcywgc3BhbmNsYXNzTE0pIHsKICB2YXIgZnJhZyxzdDsKICBpZiAo
c3BhbmNsYXNzTE0hPW51bGwpIHsKICAgIGZyYWcgPSBkb2N1bWVudC5nZXRFbGVt
ZW50c0J5VGFnTmFtZSgic3BhbiIpCiAgICBmb3IgKHZhciBpPTA7aTxmcmFnLmxl
bmd0aDtpKyspCiAgICAgIGlmIChmcmFnW2ldLmNsYXNzTmFtZSA9PSAiTE0iKQog
ICAgICAgIExNcHJvY2Vzc05vZGVSKGZyYWdbaV0sbGluZWJyZWFrcyk7CiAgfSBl
bHNlIHsKICAgIHRyeSB7CiAgICAgIHN0ID0gbi5pbm5lckhUTUw7CiAgICB9IGNh
dGNoKGVycikge30KICAgIHZhciBhbSA9IC9hbWF0aHxhZ3JhcGgvaS50ZXN0KHN0
KTsKICAgIGlmICgoc3Q9PW51bGwgfHwgc3QuaW5kZXhPZigiXCQgIikhPS0xIHx8
IHN0LmluZGV4T2YoIlwkPCIpIT0tMSB8fCAKICAgICAgICAgc3QuaW5kZXhPZigi
XFxiZWdpbiIpIT0tMSB8fCBhbSB8fCBzdC5zbGljZSgtMSk9PSIkIiB8fAogICAg
ICAgICBzdC5pbmRleE9mKCJcJFxuIikhPS0xKSYmICEvZWRpdC1jb250ZW50fEhU
TUxBcmVhfHdpa2llZGl0Ly50ZXN0KHN0KSl7CiAgICAgIGlmICghYXZvaWRpbm5l
ckhUTUwgJiYgdHJhbnNsYXRlTGFUZVhmb3JtYXR0aW5nKSAKICAgICAgICBzdCA9
IHNpbXBsZUxhVGVYZm9ybWF0dGluZyhzdCk7CiAgICAgIGlmIChzdCE9bnVsbCAm
JiBhbSAmJiAhYXZvaWRpbm5lckhUTUwpIHsKLy9hbGVydChzdCkKICAgICAgICBz
dCA9IHN0LnJlcGxhY2UoLzxzdXA+KC4qPyk8XC9zdXA+KFxzfChcUykpL2dpLCJe
eyQxfSAkMyIpOwovLyAgICAgICAgc3QgPSBzdC5yZXBsYWNlKC88XC8/Zm9udC4q
Pz4vZ2ksIiIpOyAvLyBkbyB0aGlzIG9ubHkgaW4gYW1hdGguLi5lbmQKICAgICAg
ICBzdCA9IHN0LnJlcGxhY2UoLyhQcm9vZjopL2csIjxpPiQxPC9pPiIpOwogICAg
ICAgIHN0ID0gc3QucmVwbGFjZSgvUUVEL2csIiYjeDI1QTE7Iik7CiAgICAgICAg
c3QgPSBzdC5yZXBsYWNlKC8oXFw/ZW5kez9hP21hdGh9PykvaWcsIjxzcGFuPjwv
c3Bhbj4kMSIpOwogICAgICAgIHN0ID0gc3QucmVwbGFjZSgvKFxiYW1hdGh8XFxi
ZWdpbnthP21hdGh9KS9pZywiPHNwYW4+PC9zcGFuPiQxIik7CiAgICAgICAgc3Qg
PSBzdC5yZXBsYWNlKC8oWz5cbl0pKFRoZW9yZW18TGVtbWF8UHJvcG9zaXRpb258
Q29yb2xsYXJ5fERlZmluaXRpb258RXhhbXBsZXxSZW1hcmt8UHJvYmxlbXxFeGVy
Y2lzZXxDb25qZWN0dXJlfFNvbHV0aW9uKSg6fFxXXFc/KFx3fFwuKSo/XFc/Oikv
ZywiJDE8Yj4kMiQzPC9iPiIpOwogICAgICB9CiAgICAgIHN0ID0gc3QucmVwbGFj
ZSgvJTdFL2csIn4iKTsKICAgICAgaWYgKCFhdm9pZGlubmVySFRNTCkgbi5pbm5l
ckhUTUwgPSBzdDsKICAgICAgTE1wcm9jZXNzTm9kZVIobixsaW5lYnJlYWtzKTsK
ICAgIH0KICB9CiAgaWYgKGlzSUUpIHsgLy9uZWVkZWQgdG8gbWF0Y2ggc2l6ZSBh
bmQgZm9udCBvZiBmb3JtdWxhIHRvIHN1cnJvdW5kaW5nIHRleHQKICAgIGZyYWcg
PSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbWF0aCcpOwogICAgZm9y
ICh2YXIgaT0wO2k8ZnJhZy5sZW5ndGg7aSsrKSBmcmFnW2ldLnVwZGF0ZSgpCiAg
fQp9Cgp2YXIgTE1ib2R5Owp2YXIgTE1ub01hdGhNTCA9IGZhbHNlLCBMTXRyYW5z
bGF0ZWQgPSBmYWxzZTsKCmZ1bmN0aW9uIExNdHJhbnNsYXRlKHNwYW5jbGFzc0xN
KSB7CiAgaWYgKCFMTXRyYW5zbGF0ZWQpIHsgLy8gcnVuIHRoaXMgb25seSBvbmNl
CiAgICBMTXRyYW5zbGF0ZWQgPSB0cnVlOwogICAgTE1pbml0U3ltYm9scygpOwog
ICAgTE1ib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImJvZHki
KVswXTsKICAgIHZhciBwcm9jZXNzTiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlk
KEFNZG9jdW1lbnRJZCk7Ci8vYWxlcnQocHJvY2Vzc04pCiAgICBMTXByb2Nlc3NO
b2RlKChwcm9jZXNzTiE9bnVsbD9wcm9jZXNzTjpMTWJvZHkpLCBmYWxzZSwgc3Bh
bmNsYXNzTE0pOwogIH0KfQoKaWYgKGlzSUUpIHsgLy8gYXZvaWQgYWRkaW5nIE1h
dGhQbGF5ZXIgaW5mbyBleHBsaWNpdGx5IHRvIGVhY2ggd2VicGFnZQogIGRvY3Vt
ZW50LndyaXRlKCI8b2JqZWN0IGlkPVwibWF0aHBsYXllclwiXAogIGNsYXNzaWQ9
XCJjbHNpZDozMkY2NkEyMC03NjE0LTExRDQtQkQxMS0wMDEwNEJEM0Y5ODdcIj48
L29iamVjdD4iKTsKICBkb2N1bWVudC53cml0ZSgiPD9pbXBvcnQgbmFtZXNwYWNl
PVwibVwiIGltcGxlbWVudGF0aW9uPVwiI21hdGhwbGF5ZXJcIj8+Iik7Cn0KCi8q
IEFTQ0lJc3ZnLmpzCj09PT09PT09PT09PT09CkphdmFTY3JpcHQgcm91dGluZXMg
dG8gZHluYW1pY2FsbHkgZ2VuZXJhdGUgU2NhbGFibGUgVmVjdG9yIEdyYXBoaWNz
CnVzaW5nIGEgbWF0aGVtYXRpY2FsIHh5LWNvb3JkaW5hdGUgc3lzdGVtICh5IGlu
Y3JlYXNlcyB1cHdhcmRzKSBhbmQKdmVyeSBpbnR1aXRpdmUgSmF2YVNjcmlwdCBj
b21tYW5kcyAobm8gcHJvZ3JhbW1pbmcgZXhwZXJpZW5jZSByZXF1aXJlZCkuCkFT
Q0lJc3ZnLmpzIGlzIGdvb2QgZm9yIGxlYXJuaW5nIG1hdGggYW5kIGlsbHVzdHJh
dGluZyBvbmxpbmUgbWF0aCB0ZXh0cy4KV29ya3Mgd2l0aCBJbnRlcm5ldCBFeHBs
b3JlcitBZG9iZSBTVkd2aWV3ZXIgYW5kIFNWRyBlbmFibGVkIE1vemlsbGEvRmly
ZWZveC4KClZlciAxLjIuOSBKdWx5IDMxLCAyMDA3IChjKSBQZXRlciBKaXBzZW4g
aHR0cDovL3d3dy5jaGFwbWFuLmVkdS9+amlwc2VuCkxhdGVzdCB2ZXJzaW9uIGF0
IGh0dHA6Ly9tYXRoLmNoYXBtYW4uZWR1L35qaXBzZW4vbWF0aC9wdWIvQVNDSUlz
dmcuanMKSWYgeW91IHVzZSBpdCBvbiBhIHdlYnBhZ2UsIHBsZWFzZSBzZW5kIHRo
ZSBVUkwgdG8gamlwc2VuQGNoYXBtYW4uZWR1CgpUaGlzIHByb2dyYW0gaXMgZnJl
ZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlm
eQppdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQ
dWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkKdGhlIEZyZWUgU29mdHdhcmUg
Rm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBv
ciAoYXQKeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgoKVGhpcyBwcm9n
cmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1
c2VmdWwsIApidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0
aGUgaW1wbGllZCB3YXJyYW50eSBvZgpNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVT
UyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVSBMZXNzZXIK
R2VuZXJhbCBQdWJsaWMgTGljZW5zZSAoYXQgaHR0cDovL3d3dy5nbnUub3JnL2xp
Y2Vuc2UvbGdwbC5odG1sKSAKZm9yIG1vcmUgZGV0YWlscy4qLwoKLy8geW91IGNh
biBjaGFuZ2UgdGhlc2UKdmFyIGNoZWNrSWZTVkdhdmFpbGFibGUgPSB0cnVlOwp2
YXIgbm90aWZ5SWZOb1NWRyA9IHRydWU7CnZhciBhbGVydElmTm9TVkcgPSBmYWxz
ZTsKCi8vIGdsb2JhbCBkZWZhdWx0cyB1c2VkIGlmIG5vdCBzcGVjaWZpZWQgYnkg
Z3JhcGggKHlvdSBjYW4gY2hhbmdlIHRoZXNlKQp2YXIgZGVmYXVsdHdpZHRoID0g
MzAwOyBkZWZhdWx0aGVpZ2h0ID0gMjAwOyAgIC8vIGluIHBpeGVscwp2YXIgZGVm
YXVsdHhtaW4gPSAtNS41OyBkZWZhdWx0eG1heCA9IDUuNTsgICAgIC8vIGluIHVz
ZXJjb29yZHMKdmFyIGRlZmF1bHRib3JkZXIgPSAwOyBib3JkZXIgPSBkZWZhdWx0
Ym9yZGVyOyAvLyBpbiBwaXhlbAp2YXIgZGVmYXVsdHN0cm9rZXdpZHRoID0gIjEi
OyAvLyBkZWZhdWx0IGxpbmUgd2lkdGggaW4gcGl4ZWwKdmFyIGRlZmF1bHRzdHJv
a2UgPSAiYmx1ZSI7ICAgLy8gZGVmYXVsdCBsaW5lIGNvbG9yCnZhciBkZWZhdWx0
c3Ryb2tlb3BhY2l0eSA9IDE7IC8vIHRyYW5zcGFyZW50ID0gMCwgc29saWQgPTEK
dmFyIGRlZmF1bHRzdHJva2VkYXNoYXJyYXkgPSBudWxsOyAvLyAiMTAsMTAiIGdp
dmVzIDEwcHggbG9uZyBkYXNoZXMKdmFyIGRlZmF1bHRmaWxsID0gIm5vbmUiOyAg
ICAgICAgLy8gZGVmYXVsdCBmaWxsIGNvbG9yCnZhciBkZWZhdWx0ZmlsbG9wYWNp
dHkgPSAxOyAgICAgIC8vIHRyYW5zcGFyZW50ID0gMCwgc29saWQgPTEKdmFyIGRl
ZmF1bHRmb250c3R5bGUgPSAibm9ybWFsIjsgLy8gZGVmYXVsdCB0ZXh0IHNoYXBl
IG5vcm1hbHxpdGFsaWN8aW5oZXJpdAp2YXIgZGVmYXVsdGZvbnRmYW1pbHkgPSAi
dGltZXMiOyAvLyBkZWZhdWx0IGZvbnQgdGltZXN8YXJpZWx8aGVsdmV0aWNhfC4u
Lgp2YXIgZGVmYXVsdGZvbnRzaXplID0gIjE2IjsgICAgICAvLyBkZWZhdWx0IHNp
emUgKHNjYWxlZCBhdXRvbWF0aWNhbGx5KQp2YXIgZGVmYXVsdGZvbnR3ZWlnaHQg
PSAibm9ybWFsIjsvLyBub3JtYWx8Ym9sZHxib2xkZXJ8bGlnaHRlcnwxMDB8Li4u
fDkwMAp2YXIgZGVmYXVsdGZvbnRzdHJva2UgPSAibm9uZSI7ICAvLyBkZWZhdWx0
IGZvbnQgb3V0bGluZSBjb2xvcgp2YXIgZGVmYXVsdGZvbnRmaWxsID0gIm5vbmUi
OyAgICAvLyBkZWZhdWx0IGZvbnQgY29sb3IKdmFyIGRlZmF1bHRtYXJrZXIgPSAi
bm9uZSI7ICAgICAgLy8gImRvdCIgfCAiYXJyb3ciIHwgIisiIHwgIi0iIHwgInwi
CnZhciBkZWZhdWx0ZW5kcG9pbnRzID0gIiI7ICAgICAgIC8vICJjLWQiIHdoZXJl
IGMgaXMgPHxvfCogYW5kIGQgaXMgPnxvfCoKCi8vIGdsb2JhbCB2YWx1ZXMgdXNl
ZCBmb3IgYWxsIHBpY3R1cmVzICh5b3UgY2FuIGNoYW5nZSB0aGVzZSkKdmFyIHNo
b3djb29yZGluYXRlcyA9IHRydWU7CnZhciBtYXJrZXJzdHJva2V3aWR0aCA9ICIx
IjsKdmFyIG1hcmtlcnN0cm9rZSA9ICJibGFjayI7CnZhciBtYXJrZXJmaWxsID0g
InllbGxvdyI7CnZhciBtYXJrZXJzaXplID0gNDsKdmFyIGFycm93ZmlsbCA9IHN0
cm9rZTsKdmFyIGRvdHJhZGl1cyA9IDQ7CnZhciB0aWNrbGVuZ3RoID0gNDsKdmFy
IGF4ZXNzdHJva2UgPSAiYmxhY2siOwp2YXIgZ3JpZHN0cm9rZSA9ICJncmV5IjsK
dmFyIGJhY2tncm91bmRzdHlsZSA9ICJmaWxsLW9wYWNpdHk6MDsgZmlsbDp3aGl0
ZSI7CnZhciBzaW5nbGVsZXR0ZXJzaXRhbGljID0gdHJ1ZTsKCi8vIGludGVybmFs
IHZhcmlhYmxlcyAocHJvYmFibHkgbm8gbmVlZCB0byBjaGFuZ2UgdGhlc2UpCnZh
ciBwaWN0dXJlcG9zID0gbnVsbDsgLy8gcG9zaXRpb24gb2YgcGljdHVyZSByZWxh
dGl2ZSB0byB0b3Agb2YgSFRNTCBwYWdlCnZhciB4dW5pdGxlbmd0aDsgICAgICAg
Ly8gaW4gcGl4ZWxzLCB1c2VkIHRvIGNvbnZlcnQgdG8gdXNlciBjb29yZGluYXRl
cwp2YXIgeXVuaXRsZW5ndGg7ICAgICAgIC8vIGluIHBpeGVscwp2YXIgb3JpZ2lu
ID0gWzAsMF07ICAgIC8vIGluIHBpeGVscyAoZGVmYXVsdCBpcyBib3R0b20gbGVm
dCBjb3JuZXIpCnZhciBhYm92ZSA9ICJhYm92ZSI7ICAgLy8gc2hvcnRoYW5kcyAo
dG8gYXZvaWQgdHlwaW5nIHF1b3RlcykKdmFyIGJlbG93ID0gImJlbG93IjsKdmFy
IGxlZnQgPSAibGVmdCI7CnZhciByaWdodCA9ICJyaWdodCI7CnZhciBhYm92ZWxl
ZnQgPSAiYWJvdmVsZWZ0IjsKdmFyIGFib3ZlcmlnaHQgPSAiYWJvdmVyaWdodCI7
CnZhciBiZWxvd2xlZnQgPSAiYmVsb3dsZWZ0IjsKdmFyIGJlbG93cmlnaHQgPSAi
YmVsb3dyaWdodCI7CnZhciB4bWluLCB4bWF4LCB5bWluLCB5bWF4LCB4c2NsLCB5
c2NsLCAKICAgIHhncmlkLCB5Z3JpZCwgeHRpY2ssIHl0aWNrLCBpbml0aWFsaXpl
ZDsKdmFyIHN0cm9rZXdpZHRoLCBzdHJva2VkYXNoYXJyYXksIHN0cm9rZSwgZmls
bCwgc3Ryb2tlb3BhY2l0eSwgZmlsbG9wYWNpdHk7CnZhciBmb250c3R5bGUsIGZv
bnRmYW1pbHksIGZvbnRzaXplLCBmb250d2VpZ2h0LCBmb250c3Ryb2tlLCBmb250
ZmlsbDsKdmFyIG1hcmtlciwgZW5kcG9pbnRzLCBkeW5hbWljID0ge307CnZhciBw
aWN0dXJlLCBzdmdwaWN0dXJlLCBkb2MsIHdpZHRoLCBoZWlnaHQsIGEsIGIsIGMs
IGQsIGksIG4sIHAsIHQsIHgsIHk7CnZhciBpc0lFID0gZG9jdW1lbnQuY3JlYXRl
RWxlbWVudE5TPT1udWxsOwoKdmFyIGNwaSA9ICJcdTAzQzAiLCBjdGhldGEgPSAi
XHUwM0I4IjsgICAgICAvLyBjaGFyYWN0ZXIgZm9yIHBpLCB0aGV0YQp2YXIgbG9n
ID0gZnVuY3Rpb24oeCkgeyByZXR1cm4gbG4oeCkvbG4oMTApIH07CnZhciBwaSA9
IE1hdGguUEksIGUgPSBNYXRoLkUsIGxuID0gTWF0aC5sb2csIHNxcnQgPSBNYXRo
LnNxcnQ7CnZhciBmbG9vciA9IE1hdGguZmxvb3IsIGNlaWwgPSBNYXRoLmNlaWws
IGFicyA9IE1hdGguYWJzOwp2YXIgc2luID0gTWF0aC5zaW4sIGNvcyA9IE1hdGgu
Y29zLCB0YW4gPSBNYXRoLnRhbjsKdmFyIGFyY3NpbiA9IE1hdGguYXNpbiwgYXJj
Y29zID0gTWF0aC5hY29zLCBhcmN0YW4gPSBNYXRoLmF0YW47CnZhciBzZWMgPSBm
dW5jdGlvbih4KSB7IHJldHVybiAxL01hdGguY29zKHgpIH07CnZhciBjc2MgPSBm
dW5jdGlvbih4KSB7IHJldHVybiAxL01hdGguc2luKHgpIH07CnZhciBjb3QgPSBm
dW5jdGlvbih4KSB7IHJldHVybiAxL01hdGgudGFuKHgpIH07CnZhciBhcmNzZWMg
PSBmdW5jdGlvbih4KSB7IHJldHVybiBhcmNjb3MoMS94KSB9Owp2YXIgYXJjY3Nj
ID0gZnVuY3Rpb24oeCkgeyByZXR1cm4gYXJjc2luKDEveCkgfTsKdmFyIGFyY2Nv
dCA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIGFyY3RhbigxL3gpIH07CnZhciBzaW5o
ID0gZnVuY3Rpb24oeCkgeyByZXR1cm4gKE1hdGguZXhwKHgpLU1hdGguZXhwKC14
KSkvMiB9Owp2YXIgY29zaCA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIChNYXRoLmV4
cCh4KStNYXRoLmV4cCgteCkpLzIgfTsKdmFyIHRhbmggPSAKICBmdW5jdGlvbih4
KSB7IHJldHVybiAoTWF0aC5leHAoeCktTWF0aC5leHAoLXgpKS8oTWF0aC5leHAo
eCkrTWF0aC5leHAoLXgpKSB9Owp2YXIgc2VjaCA9IGZ1bmN0aW9uKHgpIHsgcmV0
dXJuIDEvY29zaCh4KSB9Owp2YXIgY3NjaCA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJu
IDEvc2luaCh4KSB9Owp2YXIgY290aCA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIDEv
dGFuaCh4KSB9Owp2YXIgYXJjc2luaCA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIGxu
KHgrTWF0aC5zcXJ0KHgqeCsxKSkgfTsKdmFyIGFyY2Nvc2ggPSBmdW5jdGlvbih4
KSB7IHJldHVybiBsbih4K01hdGguc3FydCh4KngtMSkpIH07CnZhciBhcmN0YW5o
ID0gZnVuY3Rpb24oeCkgeyByZXR1cm4gbG4oKDEreCkvKDEteCkpLzIgfTsKdmFy
IHNlY2ggPSBmdW5jdGlvbih4KSB7IHJldHVybiAxL2Nvc2goeCkgfTsKdmFyIGNz
Y2ggPSBmdW5jdGlvbih4KSB7IHJldHVybiAxL3NpbmgoeCkgfTsKdmFyIGNvdGgg
PSBmdW5jdGlvbih4KSB7IHJldHVybiAxL3RhbmgoeCkgfTsKdmFyIGFyY3NlY2gg
PSBmdW5jdGlvbih4KSB7IHJldHVybiBhcmNjb3NoKDEveCkgfTsKdmFyIGFyY2Nz
Y2ggPSBmdW5jdGlvbih4KSB7IHJldHVybiBhcmNzaW5oKDEveCkgfTsKdmFyIGFy
Y2NvdGggPSBmdW5jdGlvbih4KSB7IHJldHVybiBhcmN0YW5oKDEveCkgfTsKdmFy
IHNpZ24gPSBmdW5jdGlvbih4KSB7IHJldHVybiAoeD09MD8wOih4PDA/LTE6MSkp
IH07CgpmdW5jdGlvbiBmYWN0b3JpYWwoeCxuKSB7IC8vIEZhY3RvcmlhbCBmdW5j
dGlvbgogIGlmIChuPT1udWxsKSBuPTE7CiAgaWYgKE1hdGguYWJzKHgtTWF0aC5y
b3VuZCh4KjEwMDAwMDApLzEwMDAwMDApPDFlLTE1KQogICAgeCA9IE1hdGgucm91
bmQoeCoxMDAwMDAwKS8xMDAwMDAwOwogIGlmICh4LU1hdGguZmxvb3IoeCkhPTAp
IHJldHVybiBOYU47CiAgZm9yICh2YXIgaT14LW47IGk+MDsgaS09bikgeCo9aTsK
ICByZXR1cm4gKHg8MD9OYU46KHg9PTA/MTp4KSk7Cn0KCmZ1bmN0aW9uIEMoeCxr
KSB7ICAvLyBCaW5vbWlhbCBjb2VmZmljaWVudCBmdW5jdGlvbgogIHZhciByZXM9
MTsKICBmb3IgKHZhciBpPTA7IGk8azsgaSsrKSByZXMqPSh4LWkpLyhrLWkpOwog
IHJldHVybiByZXM7Cn0KCmZ1bmN0aW9uIGNob3AoeCxuKSB7IC8vIFRydW5jYXRl
IGRlY2ltYWwgbnVtYmVyIHRvIG4gcGxhY2VzIGFmdGVyIGRlY2ltYWwgcG9pbnQK
ICBpZiAobj09bnVsbCkgbj0wOwogIHJldHVybiBNYXRoLmZsb29yKHgqTWF0aC5w
b3coMTAsbikpL01hdGgucG93KDEwLG4pOwp9CgpmdW5jdGlvbiByYW4oYSxiLG4p
IHsgLy8gR2VuZXJhdGUgcmFuZG9tIG51bWJlciBpbiBbYSxiXSB3aXRoIG4gZGln
aXRzIGFmdGVyIC4KICBpZiAobj09bnVsbCkgbj0wOwogIHJldHVybiBjaG9wKChi
K01hdGgucG93KDEwLC1uKS1hKSpNYXRoLnJhbmRvbSgpK2Esbik7Cn0KCmZ1bmN0
aW9uIG15Q3JlYXRlRWxlbWVudFhIVE1MKHQpIHsKICBpZiAoaXNJRSkgcmV0dXJu
IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodCk7CiAgZWxzZSByZXR1cm4gZG9jdW1l
bnQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1s
Iix0KTsKfQoKZnVuY3Rpb24gbXlDcmVhdGVFbGVtZW50U1ZHKHQpIHsKICBpZiAo
aXNJRSkgcmV0dXJuIGRvYy5jcmVhdGVFbGVtZW50KHQpOwogIGVsc2UgcmV0dXJu
IGRvYy5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3Zn
Iix0KTsKfQoKZnVuY3Rpb24gZ2V0RWxlbWVudHNCeUNsYXNzKGNvbnRhaW5lciwg
dGFnTmFtZSwgY2xzTmFtZSl7CiAgdmFyIGxpc3QgPSBuZXcgQXJyYXkoMCk7CiAg
dmFyIGNvbGxlY3Rpb24gPSBjb250YWluZXIuZ2V0RWxlbWVudHNCeVRhZ05hbWUo
dGFnTmFtZSk7CiAgZm9yKHZhciBpID0gMDsgaSA8IGNvbGxlY3Rpb24ubGVuZ3Ro
OyBpKyspCiAgICBpZihjb2xsZWN0aW9uW2ldLmNsYXNzTmFtZS5zbGljZSgwLGNs
c05hbWUubGVuZ3RoKT09Y2xzTmFtZSkKICAgICAgbGlzdFtsaXN0Lmxlbmd0aF0g
PSBjb2xsZWN0aW9uW2ldOwogIHJldHVybiBsaXN0Owp9CgpmdW5jdGlvbiBmaW5k
UG9zKG9iaikgeyAvLyB0b3AtbGVmdCBjb3JuZXIgb2Ygb2JqIG9uIEhUTUwgcGFn
ZSBpbiBwaXhlbAogIHZhciBjdXJsZWZ0ID0gY3VydG9wID0gMDsKICBpZiAob2Jq
Lm9mZnNldFBhcmVudCkgewogICAgY3VybGVmdCA9IG9iai5vZmZzZXRMZWZ0CiAg
ICBjdXJ0b3AgPSBvYmoub2Zmc2V0VG9wCiAgICB3aGlsZSAob2JqID0gb2JqLm9m
ZnNldFBhcmVudCkgewogICAgICBjdXJsZWZ0ICs9IG9iai5vZmZzZXRMZWZ0CiAg
ICAgIGN1cnRvcCArPSBvYmoub2Zmc2V0VG9wCiAgICB9CiAgfQogIHJldHVybiBb
Y3VybGVmdCxjdXJ0b3BdOwp9CgpmdW5jdGlvbiBpc1NWR2F2YWlsYWJsZSgpIHsK
ICB2YXIgbmQgPSBteUNyZWF0ZUVsZW1lbnRYSFRNTCgiY2VudGVyIik7CiAgbmQu
YXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIlRvIHZpZXcgdGhl
ICIpKTsKICB2YXIgYW4gPSBteUNyZWF0ZUVsZW1lbnRYSFRNTCgiYSIpOwogIGFu
LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJBU0NJSXN2ZyIp
KTsKICBhbi5zZXRBdHRyaWJ1dGUoImhyZWYiLCJodHRwOi8vd3d3LmNoYXBtYW4u
ZWR1L35qaXBzZW4vYXNjaWlzdmcuaHRtbCIpOwogIG5kLmFwcGVuZENoaWxkKGFu
KTsKICBuZC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIGlt
YWdlcyB1c2UgSW50ZXJuZXQgRXhwbG9yZXIgNisiKSk7CiAgYW4gPSBteUNyZWF0
ZUVsZW1lbnRYSFRNTCgiYSIpOwogIGFuLmFwcGVuZENoaWxkKGRvY3VtZW50LmNy
ZWF0ZVRleHROb2RlKCJBZG9iZSBTVkd2aWV3ZXIgMy4wMiIpKTsKICBhbi5zZXRB
dHRyaWJ1dGUoImhyZWYiLCJodHRwOi8vd3d3LmFkb2JlLmNvbS9zdmciKTsKICBu
ZC5hcHBlbmRDaGlsZChhbik7CiAgbmQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3Jl
YXRlVGV4dE5vZGUoIiBvciAiKSk7CiAgYW4gPSBteUNyZWF0ZUVsZW1lbnRYSFRN
TCgiYSIpOwogIGFuLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2Rl
KCJTVkcgZW5hYmxlZCBNb3ppbGxhL0ZpcmVmb3giKSk7CiAgYW4uc2V0QXR0cmli
dXRlKCJocmVmIiwKICAgICJodHRwOi8vd3d3LmNoYXBtYW4uZWR1L35qaXBzZW4v
c3ZnL3N2Z2VuYWJsZWRtb3ppbGxhZmlyZWZveC5odG1sIik7CiAgbmQuYXBwZW5k
Q2hpbGQoYW4pOwogIGlmIChuYXZpZ2F0b3IuYXBwTmFtZS5zbGljZSgwLDgpPT0i
TmV0c2NhcGUiKSAKICAgIGlmICh3aW5kb3dbJ1NWR0VsZW1lbnQnXSkgcmV0dXJu
IG51bGw7CiAgICBlbHNlIHJldHVybiBuZDsKICBlbHNlIGlmIChuYXZpZ2F0b3Iu
YXBwTmFtZS5zbGljZSgwLDkpPT0iTWljcm9zb2Z0IikKICAgIHRyeSB7CiAgICAg
IHZhciBvU1ZHPWV2YWwoIm5ldyBBY3RpdmVYT2JqZWN0KCdBZG9iZS5TVkdDdGwu
MycpOyIpOwogICAgICAgIHJldHVybiBudWxsOwogICAgfSBjYXRjaCAoZSkgewog
ICAgICAgIHJldHVybiBuZDsKICAgIH0KICBlbHNlIHJldHVybiBuZDsKfQoKZnVu
Y3Rpb24gc2V0VGV4dChzdCxpZCkgeyAvLyBhZGQgdGV4dCB0byBhbiBleGlzdGlu
ZyBub2RlIHdpdGggZ2l2ZW4gaWQKICB2YXIgbm9kZSA9IGRvY3VtZW50LmdldEVs
ZW1lbnRCeUlkKGlkKTsKICBpZiAobm9kZSE9bnVsbCkKICAgIGlmIChub2RlLmNo
aWxkTm9kZXMubGVuZ3RoIT0wKSBub2RlLmNoaWxkTm9kZXNbMF0ubm9kZVZhbHVl
ID0gc3Q7CiAgICBlbHNlIG5vZGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRl
VGV4dE5vZGUoc3QpKTsKfQoKZnVuY3Rpb24gZ2V0WChldnQpIHsgLy8gcmV0dXJu
IG1vdXNlIHgtY29vcmQgaW4gdXNlciBjb29yZGluYXRlIHN5c3RlbQogIHZhciBz
dmdyb290ID0gZXZ0LnRhcmdldC5wYXJlbnROb2RlOwogIHJldHVybiAoZXZ0LmNs
aWVudFgrKGlzSUU/MDp3aW5kb3cucGFnZVhPZmZzZXQpLXN2Z3Jvb3QuZ2V0QXR0
cmlidXRlKCJsZWZ0Iiktc3Zncm9vdC5nZXRBdHRyaWJ1dGUoIm94IikpLyhzdmdy
b290LmdldEF0dHJpYnV0ZSgieHVuaXRsZW5ndGgiKS0wKTsKfQoKZnVuY3Rpb24g
Z2V0WShldnQpIHsgLy8gcmV0dXJuIG1vdXNlIHktY29vcmQgaW4gdXNlciBjb29y
ZGluYXRlIHN5c3RlbQogIHZhciBzdmdyb290ID0gZXZ0LnRhcmdldC5wYXJlbnRO
b2RlOwogIHJldHVybiAoc3Zncm9vdC5nZXRBdHRyaWJ1dGUoImhlaWdodCIpLXN2
Z3Jvb3QuZ2V0QXR0cmlidXRlKCJveSIpLShldnQuY2xpZW50WSsoaXNJRT8wOndp
bmRvdy5wYWdlWU9mZnNldCktc3Zncm9vdC5nZXRBdHRyaWJ1dGUoInRvcCIpKSkv
KHN2Z3Jvb3QuZ2V0QXR0cmlidXRlKCJ5dW5pdGxlbmd0aCIpLTApOwp9CgpmdW5j
dGlvbiB0cmFuc2xhdGVhbmRldmFsKHNyYykgeyAvL21vZGlmeSB1c2VyIGlucHV0
IHRvIEphdmFTY3JpcHQgc3ludGF4CiAgdmFyIGVycnN0cjsKICAvLyByZXBsYWNl
IHBsb3QoZih4KSwuLi4pIHdpdGggcGxvdCgiZih4KSIsLi4uKSAgCiAgc3JjID0g
c3JjLnJlcGxhY2UoL3Bsb3RcKFx4MjAqKFteXCJmXFtdW15cblxyO10rPylcLC9n
LCJwbG90XChcIiQxXCIsIik7CiAgc3JjID0gc3JjLnJlcGxhY2UoL3Bsb3RcKFx4
MjAqKFteXCJmXFtdW15cblxyO10rKVwpL2csInBsb3QoXCIkMVwiKSIpOwoKICAv
LyByZXBsYWNlIChleHByLGV4cHIpIGJ5IFtleHByLGV4cHJdIHdoZXJlIGV4cHIg
aGFzIG5vICgsKSBpbiBpdAogIHNyYyA9IHNyYy5yZXBsYWNlKC8oWz0oLF1ceDIw
KilcKChbLWEtejAtOS4vKypdKz8pLChbLWEtejAtOS4vKypdKz8pXCkvZywiJDFb
JDIsJDNdIik7CgogIC8vIGluc2VydCAqIGJldHdlZW4gZGlnaXQgYW5kIGxldHRl
ciBlLmcuIDJ4IC0tPiAyKngKICBzcmMgPSBzcmMucmVwbGFjZSgvKFswLTldKShb
YS16QS1aXSkvZywiJDEqJDIiKTsKICBzcmMgPSBzcmMucmVwbGFjZSgvXCkoW1wo
MC05YS16QS1aXSkvZywiXCkqJDEiKTsKCiAgdHJ5IHsKICAgIHdpdGggKE1hdGgp
IGV2YWwoc3JjKTsgICAgICAgICAgLy8gaGVyZSB0aGUgc3ZncGljdHVyZSBvYmpl
Y3QgaXMgY3JlYXRlZAogIH0gY2F0Y2goZXJyKSB7CiAgICBpZiAoZXJyIT0id2Fp
dCIpIHsKICAgICAgaWYgKHR5cGVvZiBlcnI9PSJvYmplY3QiKSAKICAgICAgICBl
cnJzdHIgPSBlcnIubmFtZSsiICIrZXJyLm1lc3NhZ2UrIiAiK2Vyci5udW1iZXIr
IiAiK2Vyci5kZXNjcmlwdGlvbjsKICAgICAgZWxzZSBlcnJzdHIgPSBlcnI7CiAg
ICAgIGFsZXJ0KGVycnN0cisiXG4iK3NyYykKICAgIH0KICB9Cn0KCmZ1bmN0aW9u
IGRyYXdQaWN0dXJlcygpIHsgLy8gbWFpbiByb3V0aW5lOyBjYWxsZWQgYWZ0ZXIg
d2VicGFnZSBoYXMgbG9hZGVkCiAgdmFyIHNyYywgaWQsIGRzdmcsIG5kLCBub2Rl
LCBodCwgaW5kZXgsIGNvbHMsIGFyciwgaSwgbm9kZTI7CiAgdmFyIHBpY3R1cmVz
ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRleHRhcmVhIik7CiAg
Zm9yIChpbmRleCA9IDA7IGluZGV4PHBpY3R1cmVzLmxlbmd0aDsgaW5kZXgrKykK
ICAgIGlmIChwaWN0dXJlc1tpbmRleF0uY2xhc3NOYW1lPT0iQVNDSUlzdmciKXsK
ICAgICAgcGljdHVyZXNbaW5kZXhdLnN0eWxlLmRpc3BsYXk9Im5vbmUiOyAgLy8g
aGlkZSB0aGUgdGV4dGFyZWEKICAgIH0KICB2YXIgQVNib2R5ID0gZG9jdW1lbnQu
Z2V0RWxlbWVudHNCeVRhZ05hbWUoImJvZHkiKVswXTsKICBwaWN0dXJlcyA9IGdl
dEVsZW1lbnRzQnlDbGFzcyhBU2JvZHksImVtYmVkIiwiQVNDSUlzdmciKTsKICB2
YXIgbGVuID0gcGljdHVyZXMubGVuZ3RoOwogIGlmIChjaGVja0lmU1ZHYXZhaWxh
YmxlKSB7CiAgICBuZCA9IGlzU1ZHYXZhaWxhYmxlKCk7CiAgICBpZiAobmQgIT0g
bnVsbCAmJiBub3RpZnlJZk5vU1ZHICYmIGxlbj4wKQogICAgICBpZiAoYWxlcnRJ
Zk5vU1ZHKQogICAgICAgIGFsZXJ0KCJUbyB2aWV3IHRoZSBTVkcgcGljdHVyZXMg
aW4gSW50ZXJuZXQgRXhwbG9yZXJcblwKZG93bmxvYWQgdGhlIGZyZWUgQWRvYmUg
U1ZHdmlld2VyIGZyb20gd3d3LmFkb2JlLmNvbS9zdmcgb3JcblwKdXNlIEZpcmVm
b3ggMi4wIG9yIGxhdGVyIik7CiAgICAgIGVsc2UgewogICAgICAgIEFTYm9keS5p
bnNlcnRCZWZvcmUobmQsQVNib2R5LmNoaWxkTm9kZXNbMF0pOwogICAgICB9CiAg
fQogaWYgKG5kID09IG51bGwpIHsKICBmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBs
ZW47IGluZGV4KyspIHsKICAgd2lkdGggPSBudWxsOyBoZWlnaHQgPSBudWxsOyAK
ICAgeG1pbiA9IG51bGw7IHhtYXggPSBudWxsOyB5bWluID0gbnVsbDsgeW1heCA9
IG51bGw7CiAgIHhzY2wgPSBudWxsOyB4Z3JpZCA9IG51bGw7IHlzY2wgPSBudWxs
OyB5Z3JpZCA9IG51bGw7CiAgIGluaXRpYWxpemVkID0gZmFsc2U7CiAgIHBpY3R1
cmUgPSBwaWN0dXJlc1tpbmRleF07ICAvLyBjdXJyZW50IHBpY3R1cmUgb2JqZWN0
CiAgIHNyYyA9IHBpY3R1cmUuZ2V0QXR0cmlidXRlKCJzY3JpcHQiKTsgLy8gZ2V0
IHRoZSBBU0NJSXN2ZyBjb2RlCiAgIGlmIChzcmM9PW51bGwpIHNyYyA9ICIiOwog
ICAvLyBpbnNlcnQgImF4ZXMoKSIgaWYgbm90IHByZXNlbnQgICoqKioqKioqIGV4
cGVyaW1lbnRhbAogICBpZiAoIS9heGVzXGJ8aW5pdFBpY3R1cmUvLnRlc3Qoc3Jj
KSkgewogICAgIHZhciBpID0gMAogICAgIHdoaWxlICgvKCh5c2NsfHltYXh8eW1p
bnx4c2NsfHhtYXh8eG1pbnxcYndpZHRofFxiaGVpZ2h0KVxzKj1ccyotP1xkKihc
ZFwufFwuXGR8XGQpXGQqXHMqOz8pLy50ZXN0KHNyYy5zbGljZShpKSkpIGkrKzsK
ICAgICBzcmMgPSAoaT09MD8iYXhlcygpOyAiK3NyYzogc3JjLnNsaWNlKDAsaSkr
c3JjLnNsaWNlKGkpLnJlcGxhY2UoLygoc2NsfG1heHxtaW58aWR0aHxlaWdodClc
cyo9XHMqLT9cZCooXGRcLnxcLlxkfFxkKVxkKlxzKjs/KS8sIiQxXG5heGVzKCk7
IikpOwogICB9CiAgIGh0ID0gcGljdHVyZS5nZXRBdHRyaWJ1dGUoImhlaWdodCIp
OwogICBpZiAoaXNJRSkgewogICAgIHBpY3R1cmUuc2V0QXR0cmlidXRlKCJ3bW9k
ZSIsInRyYW5zcGFyZW50Iik7Ci8vYWxlcnQoIioiK3BpY3R1cmUuZ2V0QXR0cmli
dXRlKCJzcmMiKStkc3ZnbG9jYXRpb24pOwovL2FkZGluZyBkLnN2ZyBkeW5hbWlj
YWxseSBncmVhdGVzIHByb2JsZW1zIGluIElFLi4uCiAgICAgaWYgKHBpY3R1cmUu
Z2V0QXR0cmlidXRlKCJzcmMiKT09IiIpIHBpY3R1cmUuc2V0QXR0cmlidXRlKCJz
cmMiLGRzdmdsb2NhdGlvbisiZC5zdmciKTsKICAgfQogICBpZiAoZG9jdW1lbnQu
Z2V0RWxlbWVudEJ5SWQoInBpY3R1cmUiKyhpbmRleCsxKSsibW1sIik9PW51bGwp
IHsKICAgICBwaWN0dXJlLnBhcmVudE5vZGUuc3R5bGUucG9zaXRpb24gPSAicmVs
YXRpdmUiOwogICAgIG5vZGUgPSBteUNyZWF0ZUVsZW1lbnRYSFRNTCgiZGl2Iik7
CiAgICAgbm9kZS5zdHlsZS5wb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CiAgICAgbm9k
ZS5zdHlsZS50b3AgPSAiMHB4IjsKICAgICBub2RlLnN0eWxlLmxlZnQgPSAiMHB4
IjsKICAgICBub2RlLnNldEF0dHJpYnV0ZSgiaWQiLCJwaWN0dXJlIisoaW5kZXgr
MSkrIm1tbCIpOwogICAgIHBpY3R1cmUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUo
bm9kZSxwaWN0dXJlLm5leHRTaWJsaW5nKTsKICAgfQogICBpZiAoaHQ9PW51bGwp
IGh0ID0iIjsKLy8gICBpZiAoaHQhPSIiKSBkZWZhdWx0Ym9yZGVyID0gMjU7CiAg
IGlmIChodD09IiIgfHwgc3JjPT0iIikgCiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxl
bWVudEJ5SWQoInBpY3R1cmUiKyhpbmRleCsxKSsiaW5wdXQiKT09bnVsbCkgewog
ICAgICBub2RlID0gbXlDcmVhdGVFbGVtZW50WEhUTUwoInRleHRhcmVhIik7CiAg
ICAgIGFyciA9IHNyYy5zcGxpdCgiXG4iKTsKICAgICAgY29scyA9IDA7CiAgICAg
IGZvciAoaT0wO2k8YXJyLmxlbmd0aDtpKyspIGNvbHMgPSBNYXRoLm1heChjb2xz
LGFycltpXS5sZW5ndGgpOwogICAgICBub2RlLnNldEF0dHJpYnV0ZSgicm93cyIs
TWF0aC5taW4oMTAsYXJyLmxlbmd0aCkrMSk7CiAgICAgIG5vZGUuc2V0QXR0cmli
dXRlKCJjb2xzIixNYXRoLm1heChNYXRoLm1pbig2MCxjb2xzKSwyMCkrNSk7Ci8v
ICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoInN0eWxlIiwiZGlzcGxheTpibG9jayIp
OwogICAgICBpZiAoaXNJRSkgc3JjID0gc3JjLnJlcGxhY2UoLyhbXlxyXSlcbi9n
LCIkMVxyIik7CiAgICAgIG5vZGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRl
VGV4dE5vZGUoc3JjKSk7CiAgICAgIGlmIChzcmMuaW5kZXhPZigic2hvd2NvZGUo
KSIpPT0tMSkgbm9kZS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICBub2Rl
LnNldEF0dHJpYnV0ZSgiaWQiLCJwaWN0dXJlIisoaW5kZXgrMSkrImlucHV0Iik7
CiAgICAgIHBpY3R1cmUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSxwaWN0
dXJlLm5leHRTaWJsaW5nKTsKICAgICAgcGljdHVyZS5wYXJlbnROb2RlLmluc2Vy
dEJlZm9yZShteUNyZWF0ZUVsZW1lbnRYSFRNTCgiYnIiKSxub2RlKTsKICAgICAg
bm9kZTIgPSBteUNyZWF0ZUVsZW1lbnRYSFRNTCgiYnV0dG9uIik7CiAgICAgIG5v
ZGUyLnNldEF0dHJpYnV0ZSgiaWQiLCJwaWN0dXJlIisoaW5kZXgrMSkrImJ1dHRv
biIpOwogICAgICBpZiAoaXNJRSkgbm9kZTIub25jbGljayA9IGZ1bmN0aW9uKCkg
e3VwZGF0ZVBpY3R1cmUodGhpcyl9OwogICAgICBlbHNlIG5vZGUyLnNldEF0dHJp
YnV0ZSgib25jbGljayIsInVwZGF0ZVBpY3R1cmUodGhpcykiKTsKICAgICAgbm9k
ZTIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIlVwZGF0ZSIp
KTsKICAgICAgaWYgKHNyYy5pbmRleE9mKCJzaG93Y29kZSgpIik9PS0xKSBub2Rl
Mi5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICBwaWN0dXJlLnBhcmVudE5v
ZGUuaW5zZXJ0QmVmb3JlKG5vZGUyLG5vZGUpOwogICAgICBwaWN0dXJlLnBhcmVu
dE5vZGUuaW5zZXJ0QmVmb3JlKG15Q3JlYXRlRWxlbWVudFhIVE1MKCJiciIpLG5v
ZGUpOwogICAgfSBlbHNlIHNyYyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJw
aWN0dXJlIisoaW5kZXgrMSkrImlucHV0IikudmFsdWU7CiAgICBpZCA9IHBpY3R1
cmUuZ2V0QXR0cmlidXRlKCJpZCIpOwogICAgZHN2ZyA9IHBpY3R1cmUuZ2V0QXR0
cmlidXRlKCJzcmMiKTsKICAgIGlmIChpZCA9PSBudWxsIHx8IGlkID09ICIiKSB7
CiAgICAgIGlkID0gInBpY3R1cmUiKyhpbmRleCsxKTsKICAgICAgcGljdHVyZS5z
ZXRBdHRyaWJ1dGUoImlkIixpZCk7CiAgICB9CiAgICB0cmFuc2xhdGVhbmRldmFs
KHNyYykKICB9CiB9Cn0KCmZ1bmN0aW9uIHNldGRlZmF1bHRzKCkgeyAvL2NhbGxl
ZCBiZWZvcmUgZWFjaCBncmFwaCBpcyBldmFsdWF0ZWQKICBzdHJva2V3aWR0aCA9
IGRlZmF1bHRzdHJva2V3aWR0aDsKICBzdHJva2UgPSBkZWZhdWx0c3Ryb2tlOwog
IHN0cm9rZW9wYWNpdHkgPSBkZWZhdWx0c3Ryb2tlb3BhY2l0eTsKICBzdHJva2Vk
YXNoYXJyYXkgPSBkZWZhdWx0c3Ryb2tlZGFzaGFycmF5OwogIGZpbGwgPSBkZWZh
dWx0ZmlsbDsKICBmaWxsb3BhY2l0eSA9IGRlZmF1bHRmaWxsb3BhY2l0eTsKICBm
b250c3R5bGUgPSBkZWZhdWx0Zm9udHN0eWxlOwogIGZvbnRmYW1pbHkgPSBkZWZh
dWx0Zm9udGZhbWlseTsKICBmb250c2l6ZSA9IGRlZmF1bHRmb250c2l6ZTsKICBm
b250d2VpZ2h0ID0gZGVmYXVsdGZvbnR3ZWlnaHQ7CiAgZm9udHN0cm9rZSA9IGRl
ZmF1bHRmb250c3Ryb2tlOwogIGZvbnRmaWxsID0gZGVmYXVsdGZvbnRmaWxsOwog
IG1hcmtlciA9IGRlZmF1bHRtYXJrZXI7CiAgZW5kcG9pbnRzID0gZGVmYXVsdGVu
ZHBvaW50czsKfQoKZnVuY3Rpb24gc3dpdGNoVG8oaWQpIHsgLy8gdXNlZCBieSBk
eW5hbWljIGNvZGUgdG8gc2VsZWN0IGFwcHJvcHJpYXRlIGdyYXBoCiAgcGljdHVy
ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKICB3aWR0aCA9IHBpY3R1
cmUuZ2V0QXR0cmlidXRlKCJ3aWR0aCIpLTA7CiAgaGVpZ2h0ID0gcGljdHVyZS5n
ZXRBdHRyaWJ1dGUoImhlaWdodCIpLTA7CiAgc2V0ZGVmYXVsdHMoKTsKICBpZiAo
KHBpY3R1cmUubm9kZU5hbWUgPT0gIkVNQkVEIiB8fCBwaWN0dXJlLm5vZGVOYW1l
ID09ICJlbWJlZCIpICYmIGlzSUUpIHsKICAgIHN2Z3BpY3R1cmUgPSBwaWN0dXJl
LmdldFNWR0RvY3VtZW50KCkuZ2V0RWxlbWVudEJ5SWQoInJvb3QiKTsKICAgIGRv
YyA9IHBpY3R1cmUuZ2V0U1ZHRG9jdW1lbnQoKTsKICB9IGVsc2UgewogICAgc3Zn
cGljdHVyZSA9IHBpY3R1cmU7CiAgICBkb2MgPSBkb2N1bWVudDsKICB9CiAgeHVu
aXRsZW5ndGggPSBzdmdwaWN0dXJlLmdldEF0dHJpYnV0ZSgieHVuaXRsZW5ndGgi
KS0wOwogIHl1bml0bGVuZ3RoID0gc3ZncGljdHVyZS5nZXRBdHRyaWJ1dGUoInl1
bml0bGVuZ3RoIiktMDsKICB4bWluID0gc3ZncGljdHVyZS5nZXRBdHRyaWJ1dGUo
InhtaW4iKS0wOwogIHhtYXggPSBzdmdwaWN0dXJlLmdldEF0dHJpYnV0ZSgieG1h
eCIpLTA7CiAgeW1pbiA9IHN2Z3BpY3R1cmUuZ2V0QXR0cmlidXRlKCJ5bWluIikt
MDsKICB5bWF4ID0gc3ZncGljdHVyZS5nZXRBdHRyaWJ1dGUoInltYXgiKS0wOwog
IG9yaWdpbiA9IFtzdmdwaWN0dXJlLmdldEF0dHJpYnV0ZSgib3giKS0wLHN2Z3Bp
Y3R1cmUuZ2V0QXR0cmlidXRlKCJveSIpLTBdOwp9CgpmdW5jdGlvbiB1cGRhdGVQ
aWN0dXJlKG9iaikgewogIHZhciBub2RlLCBzcmMsIGlkOwogIGlmICh0eXBlb2Yg
b2JqPT0ib2JqZWN0IikgaWQgPSBvYmouaWQuc2xpY2UoMCwtNik7CiAgZWxzZSBp
ZCA9ICh0eXBlb2Ygb2JqPT0ic3RyaW5nIj9vYmo6InBpY3R1cmUiKyhvYmorMSkp
OwogIHNyYyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKyJpbnB1dCIpLnZh
bHVlOwogIHhtaW4gPSBudWxsOyB4bWF4ID0gbnVsbDsgeW1pbiA9IG51bGw7IHlt
YXggPSBudWxsOwogIHhzY2wgPSBudWxsOyB4Z3JpZCA9IG51bGw7IHlzY2wgPSBu
dWxsOyB5Z3JpZCA9IG51bGw7CiAgaW5pdGlhbGl6ZWQgPSBmYWxzZTsKICBwaWN0
dXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpOwovLyAgc3dpdGNoVG8o
aWQpOwogIHRyYW5zbGF0ZWFuZGV2YWwoc3JjKQp9CgpmdW5jdGlvbiBjaGFuZ2Vw
aWN0dXJlc2l6ZShldnQsZmFjdG9yKSB7CiAgdmFyIG9iaiA9IGV2dC50YXJnZXQ7
CiAgdmFyIG5hbWUgPSBvYmoucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoIm5hbWUi
KTsKICB2YXIgcGljID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobmFtZSk7CiAg
dmFyIHNyYyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG5hbWUrImlucHV0Iiku
dmFsdWU7CiAgc3JjID0gc3JjLnJlcGxhY2UoL3dpZHRoXHMqPVxzKlxkKy8sIndp
ZHRoPSIrKGZhY3RvcioocGljLmdldEF0dHJpYnV0ZSgid2lkdGgiKS0wKSkpOwog
IHNyYyA9IHNyYy5yZXBsYWNlKC9oZWlnaHRccyo9XHMqXGQrLywiaGVpZ2h0PSIr
KGZhY3RvcioocGljLmdldEF0dHJpYnV0ZSgiaGVpZ2h0IiktMCkpKTsKICBkb2N1
bWVudC5nZXRFbGVtZW50QnlJZChuYW1lKyJpbnB1dCIpLnZhbHVlID0gc3JjOwov
L2FsZXJ0KGdldEtleShldnQua2V5Y29kZSkpCiAgdXBkYXRlUGljdHVyZShuYW1l
KTsKfQoKdmFyIHNpbmNlRmlyc3RDbGljayA9IDA7IC8vIG9uZGJsY2xpY2sgc2lt
dWxhdGlvbiBmcm9tIAp2YXIgZGJsQ2xrVGltZXI7ICAgICAgICAgLy8gaHR0cDov
L3d3dy5lbmphLm9yZy9kYXZpZC8/Y2F0PTEzIFRoYW5rcyEKZnVuY3Rpb24gdGlt
ZXIoKSB7CiAgaWYoc2luY2VGaXJzdENsaWNrPDYwKSB7CiAgICBzaW5jZUZpcnN0
Q2xpY2srKzsKICAgIHNldFRpbWVvdXQoInRpbWVyKCkiLDEwKTsKICB9IGVsc2Ug
ewogICAgY2xlYXJUaW1lb3V0KGRibENsa1RpbWVyKTsKICAgIGRibENsa1RpbWVy
ID0gIiI7CiAgfQp9CmZ1bmN0aW9uIG1DbGljayhldnQpIHsKICBpZihzaW5jZUZp
cnN0Q2xpY2shPTApIHsKICAgIGlmKHNpbmNlRmlyc3RDbGljayA8PSA0MCkgewog
ICAgICBpZiAoZXZ0LnNoaWZ0S2V5KSBjaGFuZ2VwaWN0dXJlc2l6ZShldnQsMik7
CiAgICAgIGVsc2UgaWYgKGV2dC5hbHRLZXkpIGNoYW5nZXBpY3R1cmVzaXplKGV2
dCwuNSk7CiAgICAgIGVsc2Ugc2hvd0hpZGVDb2RlKGV2dCk7ICAgICAgICAgICAg
IC8vIGRvIHRoaXMgb24gZGJsY2xpY2sKICAgICAgY2xlYXJUaW1lb3V0KGRibENs
a1RpbWVyKTsKICAgICAgZGJsQ2xrVGltZXIgPSAiIjsKICAgIH0gZWxzZSB7CiAg
ICAgIGNsZWFyVGltZW91dChkYmxDbGtUaW1lcik7CiAgICAgIHNpbmNlRmlyc3RD
bGljayA9IDA7CiAgICAgIGRibENsa1RpbWVyID0gc2V0VGltZW91dCgidGltZXIo
KSIsMTApOwogICAgfQkgICAgICAKICB9IGVsc2UgewogICAgc2luY2VGaXJzdENs
aWNrID0gMDsKICAgIGRibENsa1RpbWVyID0gc2V0VGltZW91dCgidGltZXIoKSIs
MTApOwogIH0KfQoKZnVuY3Rpb24gc2hvd0hpZGVDb2RlKGV2dCkgeyAvLyBjYWxs
ZWQgYnkgb25jbGljayBldmVudAovLyAgaWYgKGV2dC5nZXREZXRhaWwoKT09Mikg
ey8vZ2V0RGV0YWlsIHVuZm9ydHVuYXRlbHkgbm90IGluIEZpcmVmb3gKICB2YXIg
b2JqPWV2dC50YXJnZXQ7CiAgdmFyIG5hbWUgPSBvYmoucGFyZW50Tm9kZS5nZXRB
dHRyaWJ1dGUoIm5hbWUiKTsKICB2YXIgbm9kZSA9IGRvY3VtZW50LmdldEVsZW1l
bnRCeUlkKG5hbWUrImlucHV0Iik7CiAgbm9kZS5zdHlsZS5kaXNwbGF5ID0gKG5v
ZGUuc3R5bGUuZGlzcGxheSA9PSAibm9uZSI/IiI6Im5vbmUiKTsKICB2YXIgbm9k
ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG5hbWUrImJ1dHRvbiIpOwogIG5v
ZGUuc3R5bGUuZGlzcGxheSA9IChub2RlLnN0eWxlLmRpc3BsYXkgPT0gIm5vbmUi
PyIiOiJub25lIik7Ci8vICB9Cn0KCmZ1bmN0aW9uIHNob3djb2RlKCkge30gLy8g
ZG8gbm90aGluZwoKZnVuY3Rpb24gc2V0Qm9yZGVyKHgpIHsgYm9yZGVyID0geCB9
IC8vZGVwcmVjYXRlCgpmdW5jdGlvbiBpbml0UGljdHVyZSh4X21pbix4X21heCx5
X21pbix5X21heCkgeyAvLyBzZXQgdXAgdGhlIGdyYXBoCi8vIHVzdWFsbHkgY2Fs
bGVkIGJ5IGF4ZXMoKSBvciBub2F4ZXMoKSwgYnV0IGNhbiBiZSB1c2VkIGRpcmVj
dGx5CiBpZiAoIWluaXRpYWxpemVkKSB7CiAgc2V0ZGVmYXVsdHMoKTsKICBpbml0
aWFsaXplZCA9IHRydWU7CiAgaWYgKHhfbWluIT1udWxsKSB4bWluID0geF9taW47
CiAgaWYgKHhfbWF4IT1udWxsKSB4bWF4ID0geF9tYXg7CiAgaWYgKHlfbWluIT1u
dWxsKSB5bWluID0geV9taW47CiAgaWYgKHlfbWF4IT1udWxsKSB5bWF4ID0geV9t
YXg7CiAgaWYgKHhtaW49PW51bGwpIHhtaW4gPSBkZWZhdWx0eG1pbjsKICBpZiAo
eG1heD09bnVsbCkgeG1heCA9IGRlZmF1bHR4bWF4OwogaWYgKHR5cGVvZiB4bWlu
ICE9ICJudW1iZXIiIHx8IHR5cGVvZiB4bWF4ICE9ICJudW1iZXIiIHx8IHhtaW4g
Pj0geG1heCkgCiAgIGFsZXJ0KCJQaWN0dXJlIHJlcXVpcmVzIGF0IGxlYXN0IHR3
byBudW1iZXJzOiB4bWluIDwgeG1heCIpOwogZWxzZSBpZiAoeV9tYXggIT0gbnVs
bCAmJiAodHlwZW9mIHlfbWluICE9ICJudW1iZXIiIHx8IAogICAgICAgICAgdHlw
ZW9mIHlfbWF4ICE9ICJudW1iZXIiIHx8IHlfbWluID49IHlfbWF4KSkKICAgYWxl
cnQoImluaXRQaWN0dXJlKHhtaW4seG1heCx5bWluLHltYXgpIHJlcXVpcmVzIG51
bWJlcnMgeW1pbiA8IHltYXgiKTsKIGVsc2UgewogIGlmICh3aWR0aD09bnVsbCkg
ewogICAgd2lkdGggPSBwaWN0dXJlLmdldEF0dHJpYnV0ZSgid2lkdGgiKTsKICAg
IGlmICh3aWR0aD09bnVsbCB8fCB3aWR0aD09IiIpIHdpZHRoPWRlZmF1bHR3aWR0
aDsKICB9CiAgcGljdHVyZS5zZXRBdHRyaWJ1dGUoIndpZHRoIix3aWR0aCk7CiAg
aWYgKGhlaWdodD09bnVsbCkgeyAKICAgIGhlaWdodCA9IHBpY3R1cmUuZ2V0QXR0
cmlidXRlKCJoZWlnaHQiKTsKICAgIGlmIChoZWlnaHQ9PW51bGwgfHwgaGVpZ2h0
PT0iIikgaGVpZ2h0PWRlZmF1bHRoZWlnaHQ7CiAgfQogIHBpY3R1cmUuc2V0QXR0
cmlidXRlKCJoZWlnaHQiLGhlaWdodCk7CiAgeHVuaXRsZW5ndGggPSAod2lkdGgt
Mipib3JkZXIpLyh4bWF4LXhtaW4pOwogIHl1bml0bGVuZ3RoID0geHVuaXRsZW5n
dGg7Ci8vYWxlcnQoeG1pbisiICIreG1heCsiICIreW1pbisiICIreW1heCkKICBp
ZiAoeW1pbj09bnVsbCkgewogICAgb3JpZ2luID0gWy14bWluKnh1bml0bGVuZ3Ro
K2JvcmRlcixoZWlnaHQvMl07CiAgICB5bWluID0gLShoZWlnaHQtMipib3JkZXIp
LygyKnl1bml0bGVuZ3RoKTsKICAgIHltYXggPSAteW1pbjsKICB9IGVsc2Ugewog
ICAgaWYgKHltYXghPW51bGwpIHl1bml0bGVuZ3RoID0gKGhlaWdodC0yKmJvcmRl
cikvKHltYXgteW1pbik7CiAgICBlbHNlIHltYXggPSAoaGVpZ2h0LTIqYm9yZGVy
KS95dW5pdGxlbmd0aCArIHltaW47CiAgICBvcmlnaW4gPSBbLXhtaW4qeHVuaXRs
ZW5ndGgrYm9yZGVyLC15bWluKnl1bml0bGVuZ3RoK2JvcmRlcl07CiAgfQogIGlm
IChpc0lFKSB7CiAgICBpZiAocGljdHVyZS5GVUxMU0NSRUVOPT11bmRlZmluZWQp
IHsKICAgICAgc2V0VGltZW91dCgnZHJhd1BpY3R1cmVzKCknLDUwKTsKICAgICAg
dGhyb3cgIndhaXQiOwogICAgfQogICAgc3ZncGljdHVyZSA9IHBpY3R1cmUuZ2V0
U1ZHRG9jdW1lbnQoKS5nZXRFbGVtZW50QnlJZCgicm9vdCIpOwogICAgaWYgKHN2
Z3BpY3R1cmU9PW51bGwpIHsKICAgICAgc2V0VGltZW91dCgnZHJhd1BpY3R1cmVz
KCknLDUwKTsKICAgICAgdGhyb3cgIndhaXQiOwogICAgfQogICAgc3ZncGljdHVy
ZSA9IHBpY3R1cmUuZ2V0U1ZHRG9jdW1lbnQoKS5nZXRFbGVtZW50QnlJZCgicm9v
dCIpOwogICAgd2hpbGUgKHN2Z3BpY3R1cmUuY2hpbGROb2Rlcy5sZW5ndGg+MCkg
CiAgICAgIHN2Z3BpY3R1cmUucmVtb3ZlQ2hpbGQoc3ZncGljdHVyZS5sYXN0Q2hp
bGQpOyAKICAgIHN2Z3BpY3R1cmUuc2V0QXR0cmlidXRlKCJ3aWR0aCIsd2lkdGgp
OwogICAgc3ZncGljdHVyZS5zZXRBdHRyaWJ1dGUoImhlaWdodCIsaGVpZ2h0KTsK
ICAgIHN2Z3BpY3R1cmUuc2V0QXR0cmlidXRlKCJuYW1lIixwaWN0dXJlLmdldEF0
dHJpYnV0ZSgiaWQiKSk7CiAgICBkb2MgPSBwaWN0dXJlLmdldFNWR0RvY3VtZW50
KCk7CiAgICB2YXIgbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwaWN0dXJl
LmdldEF0dHJpYnV0ZSgiaWQiKSsibW1sIik7CiAgICBpZiAobmQhPW51bGwpIC8v
IGNsZWFyIG91dCBNYXRoTUwgbGF5ZXIKICAgICAgd2hpbGUgKG5kLmNoaWxkTm9k
ZXMubGVuZ3RoPjApIG5kLnJlbW92ZUNoaWxkKG5kLmxhc3RDaGlsZCk7IAogIH0g
ZWxzZSB7CiAgICB2YXIgcW5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMo
Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwic3ZnIik7CiAgICBxbm9kZS5z
ZXRBdHRyaWJ1dGUoImlkIixwaWN0dXJlLmdldEF0dHJpYnV0ZSgiaWQiKSk7CiAg
ICBxbm9kZS5zZXRBdHRyaWJ1dGUoIm5hbWUiLHBpY3R1cmUuZ2V0QXR0cmlidXRl
KCJpZCIpKTsKICAgIHFub2RlLnNldEF0dHJpYnV0ZSgic3R5bGUiLCJkaXNwbGF5
OmlubGluZSIpOwogICAgcW5vZGUuc2V0QXR0cmlidXRlKCJ3aWR0aCIscGljdHVy
ZS5nZXRBdHRyaWJ1dGUoIndpZHRoIikpOwogICAgcW5vZGUuc2V0QXR0cmlidXRl
KCJoZWlnaHQiLHBpY3R1cmUuZ2V0QXR0cmlidXRlKCJoZWlnaHQiKSk7CiAgICBw
aWN0dXJlcG9zID0gZmluZFBvcyhwaWN0dXJlKTsKICAgIHFub2RlLnNldEF0dHJp
YnV0ZSgibGVmdCIscGljdHVyZXBvc1swXSk7CiAgICBxbm9kZS5zZXRBdHRyaWJ1
dGUoInRvcCIscGljdHVyZXBvc1sxXSk7Ci8vICAgICAgcW5vZGUuc2V0QXR0cmli
dXRlKCJ4bWxuczp4bGluayIsImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsi
KTsKICAgIGlmIChwaWN0dXJlLnBhcmVudE5vZGUhPW51bGwpIHsKICAgICAgcGlj
dHVyZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChxbm9kZSxwaWN0dXJlKTsKICAg
IH0gZWxzZSB7CiAgICAgIHN2Z3BpY3R1cmUucGFyZW50Tm9kZS5yZXBsYWNlQ2hp
bGQocW5vZGUsc3ZncGljdHVyZSk7CiAgICB9CiAgICBzdmdwaWN0dXJlID0gcW5v
ZGU7CiAgICBkb2MgPSBkb2N1bWVudDsKICB9CiAgc3ZncGljdHVyZS5zZXRBdHRy
aWJ1dGUoInh1bml0bGVuZ3RoIix4dW5pdGxlbmd0aCk7CiAgc3ZncGljdHVyZS5z
ZXRBdHRyaWJ1dGUoInl1bml0bGVuZ3RoIix5dW5pdGxlbmd0aCk7CiAgc3ZncGlj
dHVyZS5zZXRBdHRyaWJ1dGUoInhtaW4iLHhtaW4pOwogIHN2Z3BpY3R1cmUuc2V0
QXR0cmlidXRlKCJ4bWF4Iix4bWF4KTsKICBzdmdwaWN0dXJlLnNldEF0dHJpYnV0
ZSgieW1pbiIseW1pbik7CiAgc3ZncGljdHVyZS5zZXRBdHRyaWJ1dGUoInltYXgi
LHltYXgpOwogIHN2Z3BpY3R1cmUuc2V0QXR0cmlidXRlKCJveCIsb3JpZ2luWzBd
KTsKICBzdmdwaWN0dXJlLnNldEF0dHJpYnV0ZSgib3kiLG9yaWdpblsxXSk7CiAg
dmFyIG5vZGUgPSBteUNyZWF0ZUVsZW1lbnRTVkcoInJlY3QiKTsKICBub2RlLnNl
dEF0dHJpYnV0ZSgieCIsIjAiKTsKICBub2RlLnNldEF0dHJpYnV0ZSgieSIsIjAi
KTsKICBub2RlLnNldEF0dHJpYnV0ZSgid2lkdGgiLHdpZHRoKTsKICBub2RlLnNl
dEF0dHJpYnV0ZSgiaGVpZ2h0IixoZWlnaHQpOwogIG5vZGUuc2V0QXR0cmlidXRl
KCJzdHlsZSIsYmFja2dyb3VuZHN0eWxlKTsKICBzdmdwaWN0dXJlLmFwcGVuZENo
aWxkKG5vZGUpOwogIHN2Z3BpY3R1cmUuc2V0QXR0cmlidXRlKCJvbm1vdXNlbW92
ZSIsImRpc3BsYXlDb29yZChldnQpIik7CiAgc3ZncGljdHVyZS5zZXRBdHRyaWJ1
dGUoIm9ubW91c2VvdXQiLCJyZW1vdmVDb29yZChldnQpIik7CiAgc3ZncGljdHVy
ZS5zZXRBdHRyaWJ1dGUoIm9uY2xpY2siLCJtQ2xpY2soZXZ0KSIpOwogIG5vZGUg
PSBteUNyZWF0ZUVsZW1lbnRTVkcoInRleHQiKTsKICBub2RlLmFwcGVuZENoaWxk
KGRvYy5jcmVhdGVUZXh0Tm9kZSgiICIpKTsKICBzdmdwaWN0dXJlLmFwcGVuZENo
aWxkKG5vZGUpOwogIGJvcmRlciA9IGRlZmF1bHRib3JkZXI7CiB9CiB9Cn0KCi8v
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vdXNlciBncmFwaGljcyBjb21tYW5kcyBz
dGFydC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KCmZ1bmN0aW9uIGxpbmUocCxx
LGlkLGVuZHB0cykgeyAvLyBzZWdtZW50IGNvbm5lY3RpbmcgcG9pbnRzIHAscSAo
Y29vcmRpbmF0ZXMgaW4gdW5pdHMpCiAgdmFyIG5vZGU7CiAgaWYgKGlkIT1udWxs
KSBub2RlID0gZG9jLmdldEVsZW1lbnRCeUlkKGlkKTsKICBpZiAobm9kZT09bnVs
bCkgewogICAgbm9kZSA9IG15Q3JlYXRlRWxlbWVudFNWRygicGF0aCIpOwogICAg
bm9kZS5zZXRBdHRyaWJ1dGUoImlkIiwgaWQpOwogICAgc3ZncGljdHVyZS5hcHBl
bmRDaGlsZChub2RlKTsKICB9CiAgbm9kZS5zZXRBdHRyaWJ1dGUoImQiLCJNIiso
cFswXSp4dW5pdGxlbmd0aCtvcmlnaW5bMF0pKyIsIisKICAgIChoZWlnaHQtcFsx
XSp5dW5pdGxlbmd0aC1vcmlnaW5bMV0pKyIgIisKICAgIChxWzBdKnh1bml0bGVu
Z3RoK29yaWdpblswXSkrIiwiKyhoZWlnaHQtcVsxXSp5dW5pdGxlbmd0aC1vcmln
aW5bMV0pKTsKICBub2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tlLXdpZHRoIiwgc3Ry
b2tld2lkdGgpOwogIGlmIChzdHJva2VkYXNoYXJyYXkhPW51bGwpIAogICAgbm9k
ZS5zZXRBdHRyaWJ1dGUoInN0cm9rZS1kYXNoYXJyYXkiLCBzdHJva2VkYXNoYXJy
YXkpOwogIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJva2UiLCBzdHJva2UpOwogIG5v
ZGUuc2V0QXR0cmlidXRlKCJmaWxsIiwgZmlsbCk7CiAgbm9kZS5zZXRBdHRyaWJ1
dGUoInN0cm9rZS1vcGFjaXR5Iiwgc3Ryb2tlb3BhY2l0eSk7CiAgbm9kZS5zZXRB
dHRyaWJ1dGUoImZpbGwtb3BhY2l0eSIsIGZpbGxvcGFjaXR5KTsKICBpZiAobWFy
a2VyPT0iZG90IiB8fCBtYXJrZXI9PSJhcnJvd2RvdCIpIHsKICAgIEFTZG90KHAs
bWFya2Vyc2l6ZSxtYXJrZXJzdHJva2UsbWFya2VyZmlsbCk7CiAgICBpZiAobWFy
a2VyPT0iYXJyb3dkb3QiKSBhcnJvd2hlYWQocCxxKTsKICAgIEFTZG90KHEsbWFy
a2Vyc2l6ZSxtYXJrZXJzdHJva2UsbWFya2VyZmlsbCk7CiAgfSBlbHNlIGlmICht
YXJrZXI9PSJhcnJvdyIpIGFycm93aGVhZChwLHEpOwogIGlmIChlbmRwdHM9PW51
bGwgJiYgZW5kcG9pbnRzIT0iIikgZW5kcHRzID0gZW5kcG9pbnRzOwogIGlmIChl
bmRwdHMhPW51bGwpIHsKICAgIGlmIChlbmRwdHMuaW5kZXhPZigiPC0iKSAhPSAt
MSkgYXJyb3doZWFkKHEscCk7CiAgICBpZiAoZW5kcHRzLmluZGV4T2YoIm8tIikg
IT0gLTEpIGRvdChwLCAib3BlbiIpOwogICAgaWYgKGVuZHB0cy5pbmRleE9mKCIq
LSIpICE9IC0xKSBkb3QocCwgImNsb3NlZCIpOwogICAgaWYgKGVuZHB0cy5pbmRl
eE9mKCItPiIpICE9IC0xKSBhcnJvd2hlYWQocCxxKTsKICAgIGlmIChlbmRwdHMu
aW5kZXhPZigiLW8iKSAhPSAtMSkgZG90KHEsICJvcGVuIik7CiAgICBpZiAoZW5k
cHRzLmluZGV4T2YoIi0qIikgIT0gLTEpIGRvdChxLCAiY2xvc2VkIik7CiAgfQp9
CgpmdW5jdGlvbiBwYXRoKHBsaXN0LGlkLGMsZW5kcHRzKSB7CiAgaWYgKGM9PW51
bGwpIGM9IiI7CiAgdmFyIG5vZGUsIHN0LCBpOwogIGlmIChpZCE9bnVsbCkgbm9k
ZSA9IGRvYy5nZXRFbGVtZW50QnlJZChpZCk7CiAgaWYgKG5vZGU9PW51bGwpIHsK
ICAgIG5vZGUgPSBteUNyZWF0ZUVsZW1lbnRTVkcoInBhdGgiKTsKICAgIG5vZGUu
c2V0QXR0cmlidXRlKCJpZCIsIGlkKTsKICAgIHN2Z3BpY3R1cmUuYXBwZW5kQ2hp
bGQobm9kZSk7CiAgfQogIGlmICh0eXBlb2YgcGxpc3QgPT0gInN0cmluZyIpIHN0
ID0gcGxpc3Q7CiAgZWxzZSB7CiAgICBzdCA9ICJNIjsKICAgIHN0ICs9IChwbGlz
dFswXVswXSp4dW5pdGxlbmd0aCtvcmlnaW5bMF0pKyIsIisKICAgICAgICAgICho
ZWlnaHQtcGxpc3RbMF1bMV0qeXVuaXRsZW5ndGgtb3JpZ2luWzFdKSsiICIrYzsK
ICAgIGZvciAoaT0xOyBpPHBsaXN0Lmxlbmd0aDsgaSsrKQogICAgICBzdCArPSAo
cGxpc3RbaV1bMF0qeHVuaXRsZW5ndGgrb3JpZ2luWzBdKSsiLCIrCiAgICAgICAg
ICAgIChoZWlnaHQtcGxpc3RbaV1bMV0qeXVuaXRsZW5ndGgtb3JpZ2luWzFdKSsi
ICI7CiAgfQogIG5vZGUuc2V0QXR0cmlidXRlKCJkIiwgc3QpOwogIG5vZGUuc2V0
QXR0cmlidXRlKCJzdHJva2Utd2lkdGgiLCBzdHJva2V3aWR0aCk7CiAgaWYgKHN0
cm9rZWRhc2hhcnJheSE9bnVsbCkgCiAgICBub2RlLnNldEF0dHJpYnV0ZSgic3Ry
b2tlLWRhc2hhcnJheSIsIHN0cm9rZWRhc2hhcnJheSk7CiAgbm9kZS5zZXRBdHRy
aWJ1dGUoInN0cm9rZSIsIHN0cm9rZSk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoImZp
bGwiLCBmaWxsKTsKICBub2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tlLW9wYWNpdHki
LCBzdHJva2VvcGFjaXR5KTsKICBub2RlLnNldEF0dHJpYnV0ZSgiZmlsbC1vcGFj
aXR5IiwgZmlsbG9wYWNpdHkpOwogIGlmIChtYXJrZXI9PSJkb3QiIHx8IG1hcmtl
cj09ImFycm93ZG90IikKICAgIGZvciAoaT0wOyBpPHBsaXN0Lmxlbmd0aDsgaSsr
KQogICAgICBpZiAoYyE9IkMiICYmIGMhPSJUIiB8fCBpIT0xICYmIGkhPTIpCiAg
ICAgICAgQVNkb3QocGxpc3RbaV0sbWFya2Vyc2l6ZSxtYXJrZXJzdHJva2UsbWFy
a2VyZmlsbCk7CiAgaWYgKGVuZHB0cz09bnVsbCAmJiBlbmRwb2ludHMhPSIiKSBl
bmRwdHMgPSBlbmRwb2ludHM7CiAgaWYgKGVuZHB0cyE9bnVsbCkgewogICAgaWYg
KGVuZHB0cy5pbmRleE9mKCI8LSIpICE9IC0xKSBhcnJvd2hlYWQocGxpc3RbMV0s
cGxpc3RbMF0pOwogICAgaWYgKGVuZHB0cy5pbmRleE9mKCJvLSIpICE9IC0xKSBk
b3QocGxpc3RbMF0sICJvcGVuIik7CiAgICBpZiAoZW5kcHRzLmluZGV4T2YoIiot
IikgIT0gLTEpIGRvdChwbGlzdFswXSwgImNsb3NlZCIpOwogICAgaWYgKGVuZHB0
cy5pbmRleE9mKCItPiIpICE9IC0xKSBhcnJvd2hlYWQocGxpc3RbcGxpc3QubGVu
Z3RoLTJdLHBsaXN0W3BsaXN0Lmxlbmd0aC0xXSk7CiAgICBpZiAoZW5kcHRzLmlu
ZGV4T2YoIi1vIikgIT0gLTEpIGRvdChwbGlzdFtwbGlzdC5sZW5ndGgtMV0sICJv
cGVuIik7CiAgICBpZiAoZW5kcHRzLmluZGV4T2YoIi0qIikgIT0gLTEpIGRvdChw
bGlzdFtwbGlzdC5sZW5ndGgtMV0sICJjbG9zZWQiKTsKICB9Cn0KCmZ1bmN0aW9u
IGN1cnZlKHBsaXN0LGlkLGVuZHB0cykgewogIHBhdGgocGxpc3QsaWQsIlQiLGVu
ZHB0cyk7Cn0KCmZ1bmN0aW9uIHZlY3RvcihwLHEsaWQpIHsKICBsaW5lKHAscSxp
ZCwiIiwiLT4iKTsKfQoKZnVuY3Rpb24gY2lyY2xlKGNlbnRlcixyYWRpdXMsaWQp
IHsgLy8gY29vcmRpbmF0ZXMgaW4gdW5pdHMKICB2YXIgbm9kZTsKICBpZiAoaWQh
PW51bGwpIG5vZGUgPSBkb2MuZ2V0RWxlbWVudEJ5SWQoaWQpOwogIGlmIChub2Rl
PT1udWxsKSB7CiAgICBub2RlID0gbXlDcmVhdGVFbGVtZW50U1ZHKCJjaXJjbGUi
KTsKICAgIG5vZGUuc2V0QXR0cmlidXRlKCJpZCIsIGlkKTsKICAgIHN2Z3BpY3R1
cmUuYXBwZW5kQ2hpbGQobm9kZSk7CiAgfQogIG5vZGUuc2V0QXR0cmlidXRlKCJj
eCIsY2VudGVyWzBdKnh1bml0bGVuZ3RoK29yaWdpblswXSk7CiAgbm9kZS5zZXRB
dHRyaWJ1dGUoImN5IixoZWlnaHQtY2VudGVyWzFdKnl1bml0bGVuZ3RoLW9yaWdp
blsxXSk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInIiLHJhZGl1cyp4dW5pdGxlbmd0
aCk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInN0cm9rZS13aWR0aCIsIHN0cm9rZXdp
ZHRoKTsKICBub2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tlIiwgc3Ryb2tlKTsKICBu
b2RlLnNldEF0dHJpYnV0ZSgiZmlsbCIsIGZpbGwpOwogIG5vZGUuc2V0QXR0cmli
dXRlKCJzdHJva2Utb3BhY2l0eSIsIHN0cm9rZW9wYWNpdHkpOwogIG5vZGUuc2V0
QXR0cmlidXRlKCJmaWxsLW9wYWNpdHkiLCBmaWxsb3BhY2l0eSk7Cn0KCmZ1bmN0
aW9uIGxvb3AocCxkLGlkKSB7IAovLyBkIGlzIGEgZGlyZWN0aW9uIHZlY3RvciBl
LmcuIFsxLDBdIG1lYW5zIGxvb3Agc3RhcnRzIGluIHRoYXQgZGlyZWN0aW9uCiAg
aWYgKGQ9PW51bGwpIGQ9WzEsMF07CiAgcGF0aChbcCxbcFswXStkWzBdLHBbMV0r
ZFsxXV0sW3BbMF0tZFsxXSxwWzFdK2RbMF1dLHBdLGlkLCJDIik7CiAgaWYgKG1h
cmtlcj09ImFycm93IiB8fCBtYXJrZXI9PSJhcnJvd2RvdCIpIAogICAgYXJyb3do
ZWFkKFtwWzBdK01hdGguY29zKDEuNCkqZFswXS1NYXRoLnNpbigxLjQpKmRbMV0s
CiAgICAgICAgICAgICAgIHBbMV0rTWF0aC5zaW4oMS40KSpkWzBdK01hdGguY29z
KDEuNCkqZFsxXV0scCk7Cn0KCmZ1bmN0aW9uIGFyYyhzdGFydCxlbmQscmFkaXVz
LGlkKSB7IC8vIGNvb3JkaW5hdGVzIGluIHVuaXRzCiAgdmFyIG5vZGUsIHY7Ci8v
YWxlcnQoW2ZpbGwsIHN0cm9rZSwgb3JpZ2luLCB4dW5pdGxlbmd0aCwgeXVuaXRs
ZW5ndGgsIGhlaWdodF0pCiAgaWYgKGlkIT1udWxsKSBub2RlID0gZG9jLmdldEVs
ZW1lbnRCeUlkKGlkKTsKICBpZiAocmFkaXVzPT1udWxsKSB7CiAgICB2PVtlbmRb
MF0tc3RhcnRbMF0sZW5kWzFdLXN0YXJ0WzFdXTsKICAgIHJhZGl1cyA9IE1hdGgu
c3FydCh2WzBdKnZbMF0rdlsxXSp2WzFdKTsKICB9CiAgaWYgKG5vZGU9PW51bGwp
IHsKICAgIG5vZGUgPSBteUNyZWF0ZUVsZW1lbnRTVkcoInBhdGgiKTsKICAgIG5v
ZGUuc2V0QXR0cmlidXRlKCJpZCIsIGlkKTsKICAgIHN2Z3BpY3R1cmUuYXBwZW5k
Q2hpbGQobm9kZSk7CiAgfQogIG5vZGUuc2V0QXR0cmlidXRlKCJkIiwiTSIrKHN0
YXJ0WzBdKnh1bml0bGVuZ3RoK29yaWdpblswXSkrIiwiKwogICAgKGhlaWdodC1z
dGFydFsxXSp5dW5pdGxlbmd0aC1vcmlnaW5bMV0pKyIgQSIrcmFkaXVzKnh1bml0
bGVuZ3RoKyIsIisKICAgICByYWRpdXMqeXVuaXRsZW5ndGgrIiAwIDAsMCAiKyhl
bmRbMF0qeHVuaXRsZW5ndGgrb3JpZ2luWzBdKSsiLCIrCiAgICAoaGVpZ2h0LWVu
ZFsxXSp5dW5pdGxlbmd0aC1vcmlnaW5bMV0pKTsKICBub2RlLnNldEF0dHJpYnV0
ZSgic3Ryb2tlLXdpZHRoIiwgc3Ryb2tld2lkdGgpOwogIG5vZGUuc2V0QXR0cmli
dXRlKCJzdHJva2UiLCBzdHJva2UpOwogIG5vZGUuc2V0QXR0cmlidXRlKCJmaWxs
IiwgZmlsbCk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInN0cm9rZS1vcGFjaXR5Iiwg
c3Ryb2tlb3BhY2l0eSk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoImZpbGwtb3BhY2l0
eSIsIGZpbGxvcGFjaXR5KTsKICBpZiAobWFya2VyPT0iYXJyb3ciIHx8IG1hcmtl
cj09ImFycm93ZG90IikgewogICAgdSA9IFsoZW5kWzFdLXN0YXJ0WzFdKS80LChz
dGFydFswXS1lbmRbMF0pLzRdOwogICAgdiA9IFsoZW5kWzBdLXN0YXJ0WzBdKS8y
LChlbmRbMV0tc3RhcnRbMV0pLzJdOwovL2FsZXJ0KFt1LHZdKQogICAgdiA9IFtz
dGFydFswXSt2WzBdK3VbMF0sc3RhcnRbMV0rdlsxXSt1WzFdXTsKICB9IGVsc2Ug
dj1bc3RhcnRbMF0sc3RhcnRbMV1dOwogIGlmIChtYXJrZXI9PSJkb3QiIHx8IG1h
cmtlcj09ImFycm93ZG90IikgewogICAgQVNkb3Qoc3RhcnQsbWFya2Vyc2l6ZSxt
YXJrZXJzdHJva2UsbWFya2VyZmlsbCk7CiAgICBpZiAobWFya2VyPT0iYXJyb3dk
b3QiKSBhcnJvd2hlYWQodixlbmQpOwogICAgQVNkb3QoZW5kLG1hcmtlcnNpemUs
bWFya2Vyc3Ryb2tlLG1hcmtlcmZpbGwpOwogIH0gZWxzZSBpZiAobWFya2VyPT0i
YXJyb3ciKSBhcnJvd2hlYWQodixlbmQpOwp9CgpmdW5jdGlvbiBzZWN0b3IoY2Vu
dGVyLHN0YXJ0LGVuZCxpZCkgeyAvLyBjZW50ZXIsc3RhcnQsZW5kIHNob3VsZCBi
ZSBpc29jZWxlcwogIHZhciByeCA9IHN0YXJ0WzBdLWNlbnRlclswXSwgcnkgPSBz
dGFydFsxXS1jZW50ZXJbMV07CiAgYXJjKHN0YXJ0LGVuZCxNYXRoLnNxcnQocngq
cngrcnkqcnkpLGlkKyJhcmMiKTsKICBwYXRoKFtlbmQsY2VudGVyLHN0YXJ0XSxp
ZCsicGF0aCIpOwp9CgpmdW5jdGlvbiBlbGxpcHNlKGNlbnRlcixyeCxyeSxpZCkg
eyAvLyBjb29yZGluYXRlcyBpbiB1bml0cwogIHZhciBub2RlOwogIGlmIChpZCE9
bnVsbCkgbm9kZSA9IGRvYy5nZXRFbGVtZW50QnlJZChpZCk7CiAgaWYgKG5vZGU9
PW51bGwpIHsKICAgIG5vZGUgPSBteUNyZWF0ZUVsZW1lbnRTVkcoImVsbGlwc2Ui
KTsKICAgIG5vZGUuc2V0QXR0cmlidXRlKCJpZCIsIGlkKTsKICAgIHN2Z3BpY3R1
cmUuYXBwZW5kQ2hpbGQobm9kZSk7CiAgfQogIG5vZGUuc2V0QXR0cmlidXRlKCJj
eCIsY2VudGVyWzBdKnh1bml0bGVuZ3RoK29yaWdpblswXSk7CiAgbm9kZS5zZXRB
dHRyaWJ1dGUoImN5IixoZWlnaHQtY2VudGVyWzFdKnl1bml0bGVuZ3RoLW9yaWdp
blsxXSk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInJ4IixyeCp4dW5pdGxlbmd0aCk7
CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInJ5IixyeSp5dW5pdGxlbmd0aCk7CiAgbm9k
ZS5zZXRBdHRyaWJ1dGUoInN0cm9rZS13aWR0aCIsIHN0cm9rZXdpZHRoKTsKICBu
b2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tlIiwgc3Ryb2tlKTsKICBub2RlLnNldEF0
dHJpYnV0ZSgiZmlsbCIsIGZpbGwpOwogIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJv
a2Utb3BhY2l0eSIsIHN0cm9rZW9wYWNpdHkpOwogIG5vZGUuc2V0QXR0cmlidXRl
KCJmaWxsLW9wYWNpdHkiLCBmaWxsb3BhY2l0eSk7Cn0KCmZ1bmN0aW9uIHRyaWFu
Z2xlKHAscSxyLGlkKSB7CiAgcGF0aChbcCxxLHIscF0saWQpCn0KCmZ1bmN0aW9u
IHJlY3QocCxxLGlkLHJ4LHJ5KSB7IC8vIG9wcG9zaXRlIGNvcm5lcnMgaW4gdW5p
dHMsIHJvdW5kZWQgYnkgcmFkaWkKICB2YXIgbm9kZTsKICBpZiAoaWQhPW51bGwp
IG5vZGUgPSBkb2MuZ2V0RWxlbWVudEJ5SWQoaWQpOwogIGlmIChub2RlPT1udWxs
KSB7CiAgICBub2RlID0gbXlDcmVhdGVFbGVtZW50U1ZHKCJyZWN0Iik7CiAgICBu
b2RlLnNldEF0dHJpYnV0ZSgiaWQiLCBpZCk7CiAgICBzdmdwaWN0dXJlLmFwcGVu
ZENoaWxkKG5vZGUpOwogIH0KICBub2RlLnNldEF0dHJpYnV0ZSgieCIscFswXSp4
dW5pdGxlbmd0aCtvcmlnaW5bMF0pOwogIG5vZGUuc2V0QXR0cmlidXRlKCJ5Iixo
ZWlnaHQtcVsxXSp5dW5pdGxlbmd0aC1vcmlnaW5bMV0pOwogIG5vZGUuc2V0QXR0
cmlidXRlKCJ3aWR0aCIsKHFbMF0tcFswXSkqeHVuaXRsZW5ndGgpOwogIG5vZGUu
c2V0QXR0cmlidXRlKCJoZWlnaHQiLChxWzFdLXBbMV0pKnl1bml0bGVuZ3RoKTsK
ICBpZiAocnghPW51bGwpIG5vZGUuc2V0QXR0cmlidXRlKCJyeCIscngqeHVuaXRs
ZW5ndGgpOwogIGlmIChyeSE9bnVsbCkgbm9kZS5zZXRBdHRyaWJ1dGUoInJ5Iixy
eSp5dW5pdGxlbmd0aCk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInN0cm9rZS13aWR0
aCIsIHN0cm9rZXdpZHRoKTsKICBub2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tlIiwg
c3Ryb2tlKTsKICBub2RlLnNldEF0dHJpYnV0ZSgiZmlsbCIsIGZpbGwpOwogIG5v
ZGUuc2V0QXR0cmlidXRlKCJzdHJva2Utb3BhY2l0eSIsIHN0cm9rZW9wYWNpdHkp
OwogIG5vZGUuc2V0QXR0cmlidXRlKCJmaWxsLW9wYWNpdHkiLCBmaWxsb3BhY2l0
eSk7Cn0KCmZ1bmN0aW9uIHRleHQocCxzdCxwb3MsaWQsZm9udHN0eSkgewogIHZh
ciBkbm9kZSwgbm9kZSwgZHggPSAwLCBkeSA9IGZvbnRzaXplLzM7CiAgaWYgKC8o
YGB8XCQpLy50ZXN0KHN0KSkgeyAgLy8gbGF5ZXIgZm9yIEFTQ0lJTWF0aE1MIGFu
ZCBMYVRlWE1hdGhNTAogICAgZG5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJ
ZChzdmdwaWN0dXJlLmdldEF0dHJpYnV0ZSgibmFtZSIpKyJtbWwiKTsKICAgIGlm
IChkbm9kZSE9bnVsbCkgewogICAgICBpZiAoaWQhPW51bGwpIG5vZGUgPSBkb2N1
bWVudC5nZXRFbGVtZW50QnlJZChpZCk7CiAgICAgIGlmIChub2RlPT1udWxsKSB7
Ci8vYWxlcnQoZG5vZGUuY2hpbGROb2Rlcy5sZW5ndGgpCiAgICAgICAgbm9kZSA9
IG15Q3JlYXRlRWxlbWVudFhIVE1MKCJkaXYiKTsKICAgICAgICBub2RlLnNldEF0
dHJpYnV0ZSgiaWQiLCBpZCk7CiAgICAgICAgbm9kZS5zdHlsZS5wb3NpdGlvbiA9
ICJhYnNvbHV0ZSI7CiAgICAgICAgZG5vZGUuYXBwZW5kQ2hpbGQobm9kZSk7CiAg
ICAgIH0KICAgICAgd2hpbGUgKG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg+MCkgbm9k
ZS5yZW1vdmVDaGlsZChub2RlLmxhc3RDaGlsZCk7IAogICAgICBub2RlLmFwcGVu
ZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN0KSk7Ci8vICAgICAgbm9k
ZS5sYXN0Q2hpbGQubm9kZVZhbHVlID0gc3Q7CiAgICAgIG5vZGUuc3R5bGUubGVm
dCA9ICIiKyhwWzBdKnh1bml0bGVuZ3RoK29yaWdpblswXSkrInB4IjsKICAgICAg
bm9kZS5zdHlsZS50b3AgPSAiIisoaGVpZ2h0LXBbMV0qeXVuaXRsZW5ndGgtb3Jp
Z2luWzFdKSsicHgiOwogICAgICBpZiAoL2BgLy50ZXN0KHN0KSkgQU1wcm9jZXNz
Tm9kZShub2RlKTsgZWxzZSBMTXByb2Nlc3NOb2RlKG5vZGUpOwogICAgICBkeCA9
IC1ub2RlLm9mZnNldFdpZHRoLzI7CiAgICAgIGR5ID0gLW5vZGUub2Zmc2V0SGVp
Z2h0LzI7CiAgICAgIGlmIChwb3MhPW51bGwpIHsKICAgICAgICBpZiAoL2Fib3Zl
Ly50ZXN0KHBvcykpIGR5ID0gLW5vZGUub2Zmc2V0SGVpZ2h0OwogICAgICAgIGlm
ICgvYmVsb3cvLnRlc3QocG9zKSkgZHkgPSAwOwogICAgICAgIGlmICgvcmlnaHQv
LnRlc3QocG9zKSkgZHggPSAwOwogICAgICAgIGlmICggL2xlZnQvLnRlc3QocG9z
KSkgZHggPSAtbm9kZS5vZmZzZXRXaWR0aDsKICAgICAgfQogICAgICBub2RlLnN0
eWxlLmxlZnQgPSAiIisocFswXSp4dW5pdGxlbmd0aCtvcmlnaW5bMF0rZHgpKyJw
eCI7CiAgICAgIG5vZGUuc3R5bGUudG9wID0gIiIrKGhlaWdodC1wWzFdKnl1bml0
bGVuZ3RoLW9yaWdpblsxXStkeSkrInB4IjsKICAgIH0KICAgIHJldHVybiBwOwog
IH0KICB2YXIgdGV4dGFuY2hvciA9ICJtaWRkbGUiOyAgLy8gcmVndWxhciB0ZXh0
IGdvZXMgaW50byBTVkcKICBpZiAocG9zIT1udWxsKSB7CiAgICBpZiAoL2Fib3Zl
Ly50ZXN0KHBvcykpIGR5ID0gLWZvbnRzaXplLzI7CiAgICBpZiAoL2JlbG93Ly50
ZXN0KHBvcykpIGR5ID0gZm9udHNpemUtMDsKICAgIGlmICgvcmlnaHQvLnRlc3Qo
cG9zKSkge3RleHRhbmNob3IgPSAic3RhcnQiOyBkeCA9IGZvbnRzaXplLzQ7fQog
ICAgaWYgKCAvbGVmdC8udGVzdChwb3MpKSB7dGV4dGFuY2hvciA9ICJlbmQiOyAg
ZHggPSAtZm9udHNpemUvNDt9CiAgfQogIGlmIChpZCE9bnVsbCkgbm9kZSA9IGRv
Yy5nZXRFbGVtZW50QnlJZChpZCk7CiAgaWYgKG5vZGU9PW51bGwpIHsKICAgIG5v
ZGUgPSBteUNyZWF0ZUVsZW1lbnRTVkcoInRleHQiKTsKICAgIG5vZGUuc2V0QXR0
cmlidXRlKCJpZCIsIGlkKTsKICAgIHN2Z3BpY3R1cmUuYXBwZW5kQ2hpbGQobm9k
ZSk7CiAgICBub2RlLmFwcGVuZENoaWxkKGRvYy5jcmVhdGVUZXh0Tm9kZShzdCkp
OwogIH0KICB3aGlsZSAobm9kZS5jaGlsZE5vZGVzLmxlbmd0aD4xKSBub2RlLnJl
bW92ZUNoaWxkKG5vZGUubGFzdENoaWxkKTsgCi8vICBub2RlLmFwcGVuZENoaWxk
KGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJceEEwIitzdCsiXHhBMCIpKTsKLy9h
bGVydCgiaGVyZSIpOwogIG5vZGUubGFzdENoaWxkLm5vZGVWYWx1ZSA9ICJceEEw
IitzdCsiXHhBMCI7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoIngiLHBbMF0qeHVuaXRs
ZW5ndGgrb3JpZ2luWzBdK2R4KTsKICBub2RlLnNldEF0dHJpYnV0ZSgieSIsaGVp
Z2h0LXBbMV0qeXVuaXRsZW5ndGgtb3JpZ2luWzFdK2R5KTsKICBub2RlLnNldEF0
dHJpYnV0ZSgiZm9udC1zdHlsZSIsKGZvbnRzdHkhPW51bGw/Zm9udHN0eToKICAg
IChzdC5zZWFyY2goL15bYS16QS1aXSQvKSE9LTE/Iml0YWxpYyI6Zm9udHN0eWxl
KSkpOwogIG5vZGUuc2V0QXR0cmlidXRlKCJmb250LWZhbWlseSIsZm9udGZhbWls
eSk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoImZvbnQtc2l6ZSIsZm9udHNpemUpOwog
IG5vZGUuc2V0QXR0cmlidXRlKCJmb250LXdlaWdodCIsZm9udHdlaWdodCk7CiAg
bm9kZS5zZXRBdHRyaWJ1dGUoInRleHQtYW5jaG9yIix0ZXh0YW5jaG9yKTsKICBp
ZiAoZm9udHN0cm9rZSE9Im5vbmUiKSBub2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tl
Iixmb250c3Ryb2tlKTsKICBpZiAoZm9udGZpbGwhPSJub25lIikgbm9kZS5zZXRB
dHRyaWJ1dGUoImZpbGwiLGZvbnRmaWxsKTsKICByZXR1cm4gcDsKfQoKZnVuY3Rp
b24gbXRleHQocCxzdCxwb3MsZm9udHN0eSkgeyAvLyBtZXRob2QgZm9yIHVwZGF0
aW5nIHRleHQgb24gYW4gc3ZnCi8vICJ0aGlzIiBpcyB0aGUgdGV4dCBvYmplY3Qg
b3IgdGhlIHN2Z3BpY3R1cmUgb2JqZWN0CiAgdmFyIHRleHRhbmNob3IgPSAibWlk
ZGxlIjsKICB2YXIgZHggPSAwOyB2YXIgZHkgPSBmb250c2l6ZS8zOwogIGlmIChw
b3MhPW51bGwpIHsKICAgIGlmIChwb3Muc2xpY2UoMCw1KT09ImFib3ZlIikgZHkg
PSAtZm9udHNpemUvMjsKICAgIGlmIChwb3Muc2xpY2UoMCw1KT09ImJlbG93Iikg
ZHkgPSBmb250c2l6ZS0wOwogICAgaWYgKHBvcy5zbGljZSgwLDUpPT0icmlnaHQi
IHx8IHBvcy5zbGljZSg1LDEwKT09InJpZ2h0IikgewogICAgICB0ZXh0YW5jaG9y
ID0gInN0YXJ0IjsKICAgICAgZHggPSBmb250c2l6ZS8yOwogICAgfQogICAgaWYg
KHBvcy5zbGljZSgwLDQpPT0ibGVmdCIgfHwgcG9zLnNsaWNlKDUsOSk9PSJsZWZ0
IikgewogICAgICB0ZXh0YW5jaG9yID0gImVuZCI7CiAgICAgIGR4ID0gLWZvbnRz
aXplLzI7CiAgICB9CiAgfQogIHZhciBub2RlID0gdGhpczsKICBpZiAodGhpcy5u
b2RlTmFtZT09InN2ZyIpIHsKICAgIG5vZGUgPSBteUNyZWF0ZUVsZW1lbnRTVkco
InRleHQiKTsKICAgIHRoaXMuYXBwZW5kQ2hpbGQobm9kZSk7CiAgICBub2RlLmFw
cGVuZENoaWxkKGRvYy5jcmVhdGVUZXh0Tm9kZShzdCkpOwogIH0KICBub2RlLmxh
c3RDaGlsZC5ub2RlVmFsdWUgPSBzdDsKICBub2RlLnNldEF0dHJpYnV0ZSgieCIs
cFswXStkeCk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInkiLHBbMV0rZHkpOwogIG5v
ZGUuc2V0QXR0cmlidXRlKCJmb250LXN0eWxlIiwoZm9udHN0eSE9bnVsbD9mb250
c3R5OmZvbnRzdHlsZSkpOwogIG5vZGUuc2V0QXR0cmlidXRlKCJmb250LWZhbWls
eSIsZm9udGZhbWlseSk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoImZvbnQtc2l6ZSIs
Zm9udHNpemUpOwogIG5vZGUuc2V0QXR0cmlidXRlKCJmb250LXdlaWdodCIsZm9u
dHdlaWdodCk7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoInRleHQtYW5jaG9yIix0ZXh0
YW5jaG9yKTsKICBpZiAoZm9udHN0cm9rZSE9Im5vbmUiKSBub2RlLnNldEF0dHJp
YnV0ZSgic3Ryb2tlIixmb250c3Ryb2tlKTsKICBpZiAoZm9udGZpbGwhPSJub25l
Iikgbm9kZS5zZXRBdHRyaWJ1dGUoImZpbGwiLGZvbnRmaWxsKTsKfQoKZnVuY3Rp
b24gaW1hZ2UoaW1ndXJsLHAsdyxoLGlkKSB7IC8vIG5vdCB3b3JraW5nIHlldAog
IHZhciBub2RlOwogIGlmIChpZCE9bnVsbCkgbm9kZSA9IGRvYy5nZXRFbGVtZW50
QnlJZChpZCk7CiAgaWYgKG5vZGU9PW51bGwpIHsKICAgIG5vZGUgPSBteUNyZWF0
ZUVsZW1lbnRTVkcoImltYWdlIik7CiAgICBub2RlLnNldEF0dHJpYnV0ZSgiaWQi
LCBpZCk7CiAgICBzdmdwaWN0dXJlLmFwcGVuZENoaWxkKG5vZGUpOwogIH0KICBu
b2RlLnNldEF0dHJpYnV0ZSgieCIscFswXSp4dW5pdGxlbmd0aCtvcmlnaW5bMF0p
OwogIG5vZGUuc2V0QXR0cmlidXRlKCJ5IixoZWlnaHQtcFsxXSp5dW5pdGxlbmd0
aC1vcmlnaW5bMV0pOwogIG5vZGUuc2V0QXR0cmlidXRlKCJ3aWR0aCIsdyk7CiAg
bm9kZS5zZXRBdHRyaWJ1dGUoImhlaWdodCIsaCk7CiAgbm9kZS5zZXRBdHRyaWJ1
dGUoInhsaW5rOmhyZWYiLCBpbWd1cmwpOwp9CgpmdW5jdGlvbiBBU2RvdChjZW50
ZXIscmFkaXVzLHMsZikgeyAvLyBjb29yZGluYXRlcyBpbiB1bml0cywgcmFkaXVz
IGluIHBpeGVsCiAgaWYgKHM9PW51bGwpIHMgPSBzdHJva2U7IGlmIChmPT1udWxs
KSBmID0gZmlsbDsKICB2YXIgbm9kZSA9IG15Q3JlYXRlRWxlbWVudFNWRygiY2ly
Y2xlIik7CiAgbm9kZS5zZXRBdHRyaWJ1dGUoImN4IixjZW50ZXJbMF0qeHVuaXRs
ZW5ndGgrb3JpZ2luWzBdKTsKICBub2RlLnNldEF0dHJpYnV0ZSgiY3kiLGhlaWdo
dC1jZW50ZXJbMV0qeXVuaXRsZW5ndGgtb3JpZ2luWzFdKTsKICBub2RlLnNldEF0
dHJpYnV0ZSgiciIscmFkaXVzKTsKICBub2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tl
LXdpZHRoIiwgc3Ryb2tld2lkdGgpOwogIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJv
a2UiLCBzKTsKICBub2RlLnNldEF0dHJpYnV0ZSgiZmlsbCIsIGYpOwogIHN2Z3Bp
Y3R1cmUuYXBwZW5kQ2hpbGQobm9kZSk7Cn0KCmZ1bmN0aW9uIGRvdChjZW50ZXIs
IHR5cCwgbGFiZWwsIHBvcywgaWQpIHsKICB2YXIgbm9kZTsKICB2YXIgY3ggPSBj
ZW50ZXJbMF0qeHVuaXRsZW5ndGgrb3JpZ2luWzBdOwogIHZhciBjeSA9IGhlaWdo
dC1jZW50ZXJbMV0qeXVuaXRsZW5ndGgtb3JpZ2luWzFdOwogIGlmIChpZCE9bnVs
bCkgbm9kZSA9IGRvYy5nZXRFbGVtZW50QnlJZChpZCk7CiAgaWYgKHR5cD09Iisi
IHx8IHR5cD09Ii0iIHx8IHR5cD09InwiKSB7CiAgICBpZiAobm9kZT09bnVsbCkg
ewogICAgICBub2RlID0gbXlDcmVhdGVFbGVtZW50U1ZHKCJwYXRoIik7CiAgICAg
IG5vZGUuc2V0QXR0cmlidXRlKCJpZCIsIGlkKTsKICAgICAgc3ZncGljdHVyZS5h
cHBlbmRDaGlsZChub2RlKTsKICAgIH0KICAgIGlmICh0eXA9PSIrIikgewogICAg
ICBub2RlLnNldEF0dHJpYnV0ZSgiZCIsCiAgICAgICAgIiBNICIrKGN4LXRpY2ts
ZW5ndGgpKyIgIitjeSsiIEwgIisoY3grdGlja2xlbmd0aCkrIiAiK2N5KwogICAg
ICAgICIgTSAiK2N4KyIgIisoY3ktdGlja2xlbmd0aCkrIiBMICIrY3grIiAiKyhj
eSt0aWNrbGVuZ3RoKSk7CiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJva2Ut
d2lkdGgiLCAuNSk7CiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJva2UiLCBh
eGVzc3Ryb2tlKTsKICAgIH0gZWxzZSB7CiAgICAgIGlmICh0eXA9PSItIikgbm9k
ZS5zZXRBdHRyaWJ1dGUoImQiLAogICAgICAgICIgTSAiKyhjeC10aWNrbGVuZ3Ro
KSsiICIrY3krIiBMICIrKGN4K3RpY2tsZW5ndGgpKyIgIitjeSk7CiAgICAgIGVs
c2Ugbm9kZS5zZXRBdHRyaWJ1dGUoImQiLAogICAgICAgICIgTSAiK2N4KyIgIiso
Y3ktdGlja2xlbmd0aCkrIiBMICIrY3grIiAiKyhjeSt0aWNrbGVuZ3RoKSk7CiAg
ICAgIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJva2Utd2lkdGgiLCBzdHJva2V3aWR0
aCk7CiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJva2UiLCBzdHJva2UpOwog
ICAgfQogIH0gZWxzZSB7CiAgICBpZiAobm9kZT09bnVsbCkgewogICAgICBub2Rl
ID0gbXlDcmVhdGVFbGVtZW50U1ZHKCJjaXJjbGUiKTsKICAgICAgbm9kZS5zZXRB
dHRyaWJ1dGUoImlkIiwgaWQpOwogICAgICBzdmdwaWN0dXJlLmFwcGVuZENoaWxk
KG5vZGUpOwogICAgfQogICAgbm9kZS5zZXRBdHRyaWJ1dGUoImN4IixjeCk7CiAg
ICBub2RlLnNldEF0dHJpYnV0ZSgiY3kiLGN5KTsKICAgIG5vZGUuc2V0QXR0cmli
dXRlKCJyIixkb3RyYWRpdXMpOwogICAgbm9kZS5zZXRBdHRyaWJ1dGUoInN0cm9r
ZS13aWR0aCIsIHN0cm9rZXdpZHRoKTsKICAgIG5vZGUuc2V0QXR0cmlidXRlKCJz
dHJva2UiLCBzdHJva2UpOwogICAgbm9kZS5zZXRBdHRyaWJ1dGUoImZpbGwiLCAo
dHlwPT0ib3BlbiI/IndoaXRlIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgKHR5cD09ImNsb3NlZCI/c3Ryb2tlOm1hcmtlcmZpbGwpKSk7CiAgfQogIGlm
IChsYWJlbCE9bnVsbCkgCiAgICB0ZXh0KGNlbnRlcixsYWJlbCwocG9zPT1udWxs
PyJiZWxvdyI6cG9zKSwoaWQ9PW51bGw/aWQ6aWQrImxhYmVsIikpCn0KCnBvaW50
ID0gZG90OyAvL2FsdGVybmF0aXZlIG5hbWUKCmZ1bmN0aW9uIGFycm93aGVhZChw
LHEpIHsgLy8gZHJhdyBhcnJvd2hlYWQgYXQgcSAoaW4gdW5pdHMpIGFkZCBzaXpl
IHBhcmFtCiAgdmFyIHVwOwogIHZhciB2ID0gW3BbMF0qeHVuaXRsZW5ndGgrb3Jp
Z2luWzBdLGhlaWdodC1wWzFdKnl1bml0bGVuZ3RoLW9yaWdpblsxXV07CiAgdmFy
IHcgPSBbcVswXSp4dW5pdGxlbmd0aCtvcmlnaW5bMF0saGVpZ2h0LXFbMV0qeXVu
aXRsZW5ndGgtb3JpZ2luWzFdXTsKICB2YXIgdSA9IFt3WzBdLXZbMF0sd1sxXS12
WzFdXTsKICB2YXIgZCA9IE1hdGguc3FydCh1WzBdKnVbMF0rdVsxXSp1WzFdKTsK
ICBpZiAoZCA+IDAuMDAwMDAwMDEpIHsKICAgIHUgPSBbdVswXS9kLCB1WzFdL2Rd
OwogICAgdXAgPSBbLXVbMV0sdVswXV07CiAgICB2YXIgbm9kZSA9IG15Q3JlYXRl
RWxlbWVudFNWRygicGF0aCIpOwogICAgbm9kZS5zZXRBdHRyaWJ1dGUoImQiLCJN
ICIrKHdbMF0tMTUqdVswXS00KnVwWzBdKSsiICIrCiAgICAgICh3WzFdLTE1KnVb
MV0tNCp1cFsxXSkrIiBMICIrKHdbMF0tMyp1WzBdKSsiICIrKHdbMV0tMyp1WzFd
KSsiIEwgIisKICAgICAgKHdbMF0tMTUqdVswXSs0KnVwWzBdKSsiICIrKHdbMV0t
MTUqdVsxXSs0KnVwWzFdKSsiIHoiKTsKICAgIG5vZGUuc2V0QXR0cmlidXRlKCJz
dHJva2Utd2lkdGgiLCBtYXJrZXJzdHJva2V3aWR0aCk7CiAgICBub2RlLnNldEF0
dHJpYnV0ZSgic3Ryb2tlIiwgc3Ryb2tlKTsgLyp3YXMgbWFya2Vyc3Ryb2tlKi8K
ICAgIG5vZGUuc2V0QXR0cmlidXRlKCJmaWxsIiwgc3Ryb2tlKTsgLyp3YXMgYXJy
b3dmaWxsKi8KICAgIG5vZGUuc2V0QXR0cmlidXRlKCJzdHJva2Utb3BhY2l0eSIs
IHN0cm9rZW9wYWNpdHkpOwogICAgbm9kZS5zZXRBdHRyaWJ1dGUoImZpbGwtb3Bh
Y2l0eSIsIGZpbGxvcGFjaXR5KTsKICAgIHN2Z3BpY3R1cmUuYXBwZW5kQ2hpbGQo
bm9kZSk7ICAgIAogIH0KfQoKZnVuY3Rpb24gY2hvcFooc3QpIHsKICB2YXIgayA9
IHN0LmluZGV4T2YoIi4iKTsKICBpZiAoaz09LTEpIHJldHVybiBzdDsKICBmb3Ig
KHZhciBpPXN0Lmxlbmd0aC0xOyBpPmsgJiYgc3QuY2hhckF0KGkpPT0iMCI7IGkt
LSk7CiAgaWYgKGk9PWspIGktLTsKICByZXR1cm4gc3Quc2xpY2UoMCxpKzEpOwp9
CgpmdW5jdGlvbiBncmlkKGR4LGR5KSB7IC8vIGZvciBiYWNrd2FyZCBjb21wYXRp
YmlsaXR5CiAgYXhlcyhkeCxkeSxudWxsLGR4LGR5KQp9CgpmdW5jdGlvbiBub2F4
ZXMoKSB7CiAgaWYgKCFpbml0aWFsaXplZCkgaW5pdFBpY3R1cmUoKTsKfQoKZnVu
Y3Rpb24gYXhlcyhkeCxkeSxsYWJlbHMsZ2R4LGdkeSkgewovL3hzY2w9eCBpcyBl
cXVpdmFsZW50IHRvIHh0aWNrPXg7IHhncmlkPXg7IGxhYmVscz10cnVlOwogIHZh
ciB4LCB5LCBsZHgsIGxkeSwgbHgsIGx5LCBseHAsIGx5cCwgcG5vZGUsIHN0Owog
IGlmICghaW5pdGlhbGl6ZWQpIGluaXRQaWN0dXJlKCk7CiAgaWYgKHR5cGVvZiBk
eD09InN0cmluZyIpIHsgbGFiZWxzID0gZHg7IGR4ID0gbnVsbDsgfQogIGlmICh0
eXBlb2YgZHk9PSJzdHJpbmciKSB7IGdkeCA9IGR5OyBkeSA9IG51bGw7IH0KICBp
ZiAoeHNjbCE9bnVsbCkge2R4ID0geHNjbDsgZ2R4ID0geHNjbDsgbGFiZWxzID0g
ZHh9CiAgaWYgKHlzY2whPW51bGwpIHtkeSA9IHlzY2w7IGdkeSA9IHlzY2x9CiAg
aWYgKHh0aWNrIT1udWxsKSB7ZHggPSB4dGlja30KICBpZiAoeXRpY2shPW51bGwp
IHtkeSA9IHl0aWNrfQogIGR4ID0gKGR4PT1udWxsP3h1bml0bGVuZ3RoOmR4Knh1
bml0bGVuZ3RoKTsKICBkeSA9IChkeT09bnVsbD9keDpkeSp5dW5pdGxlbmd0aCk7
CiAgZm9udHNpemUgPSBNYXRoLm1pbihkeC8yLGR5LzIsMTYpOyAvL2FsZXJ0KGZv
bnRzaXplKQogIHRpY2tsZW5ndGggPSBmb250c2l6ZS80OwogIGlmICh4Z3JpZCE9
bnVsbCkgZ2R4ID0geGdyaWQ7CiAgaWYgKHlncmlkIT1udWxsKSBnZHkgPSB5Z3Jp
ZDsKICBpZiAoZ2R4IT1udWxsKSB7CiAgICBnZHggPSAodHlwZW9mIGdkeD09InN0
cmluZyI/ZHg6Z2R4Knh1bml0bGVuZ3RoKTsKICAgIGdkeSA9IChnZHk9PW51bGw/
ZHk6Z2R5Knl1bml0bGVuZ3RoKTsKICAgIHBub2RlID0gbXlDcmVhdGVFbGVtZW50
U1ZHKCJwYXRoIik7CiAgICBzdD0iIjsKICAgIGZvciAoeCA9IG9yaWdpblswXTsg
eDx3aWR0aDsgeCA9IHgrZ2R4KQogICAgICBzdCArPSAiIE0iK3grIiwwIisiICIr
eCsiLCIraGVpZ2h0OwogICAgZm9yICh4ID0gb3JpZ2luWzBdLWdkeDsgeD4wOyB4
ID0geC1nZHgpCiAgICAgIHN0ICs9ICIgTSIreCsiLDAiKyIgIit4KyIsIitoZWln
aHQ7CiAgICBmb3IgKHkgPSBoZWlnaHQtb3JpZ2luWzFdOyB5PGhlaWdodDsgeSA9
IHkrZ2R5KQogICAgICBzdCArPSAiIE0wLCIreSsiICIrd2lkdGgrIiwiK3k7CiAg
ICBmb3IgKHkgPSBoZWlnaHQtb3JpZ2luWzFdLWdkeTsgeT4wOyB5ID0geS1nZHkp
CiAgICAgIHN0ICs9ICIgTTAsIit5KyIgIit3aWR0aCsiLCIreTsKICAgIHBub2Rl
LnNldEF0dHJpYnV0ZSgiZCIsc3QpOwogICAgcG5vZGUuc2V0QXR0cmlidXRlKCJz
dHJva2Utd2lkdGgiLCAuNSk7CiAgICBwbm9kZS5zZXRBdHRyaWJ1dGUoInN0cm9r
ZSIsIGdyaWRzdHJva2UpOwogICAgcG5vZGUuc2V0QXR0cmlidXRlKCJmaWxsIiwg
ZmlsbCk7CiAgICBzdmdwaWN0dXJlLmFwcGVuZENoaWxkKHBub2RlKTsKICB9CiAg
cG5vZGUgPSBteUNyZWF0ZUVsZW1lbnRTVkcoInBhdGgiKTsKICBzdD0iTTAsIiso
aGVpZ2h0LW9yaWdpblsxXSkrIiAiK3dpZHRoKyIsIisKICAgIChoZWlnaHQtb3Jp
Z2luWzFdKSsiIE0iK29yaWdpblswXSsiLDAgIitvcmlnaW5bMF0rIiwiK2hlaWdo
dDsKICBmb3IgKHggPSBvcmlnaW5bMF0rZHg7IHg8d2lkdGg7IHggPSB4K2R4KQog
ICAgc3QgKz0gIiBNIit4KyIsIisoaGVpZ2h0LW9yaWdpblsxXSt0aWNrbGVuZ3Ro
KSsiICIreCsiLCIrCiAgICAgICAgICAgKGhlaWdodC1vcmlnaW5bMV0tdGlja2xl
bmd0aCk7CiAgZm9yICh4ID0gb3JpZ2luWzBdLWR4OyB4PjA7IHggPSB4LWR4KQog
ICAgc3QgKz0gIiBNIit4KyIsIisoaGVpZ2h0LW9yaWdpblsxXSt0aWNrbGVuZ3Ro
KSsiICIreCsiLCIrCiAgICAgICAgICAgKGhlaWdodC1vcmlnaW5bMV0tdGlja2xl
bmd0aCk7CiAgZm9yICh5ID0gaGVpZ2h0LW9yaWdpblsxXStkeTsgeTxoZWlnaHQ7
IHkgPSB5K2R5KQogICAgc3QgKz0gIiBNIisob3JpZ2luWzBdK3RpY2tsZW5ndGgp
KyIsIit5KyIgIisob3JpZ2luWzBdLXRpY2tsZW5ndGgpKyIsIit5OwogIGZvciAo
eSA9IGhlaWdodC1vcmlnaW5bMV0tZHk7IHk+MDsgeSA9IHktZHkpCiAgICBzdCAr
PSAiIE0iKyhvcmlnaW5bMF0rdGlja2xlbmd0aCkrIiwiK3krIiAiKyhvcmlnaW5b
MF0tdGlja2xlbmd0aCkrIiwiK3k7CiAgaWYgKGxhYmVscyE9bnVsbCkgd2l0aCAo
TWF0aCkgewogICAgbGR4ID0gZHgveHVuaXRsZW5ndGg7CiAgICBsZHkgPSBkeS95
dW5pdGxlbmd0aDsKICAgIGx4ID0gKHhtaW4+MCB8fCB4bWF4PDA/eG1pbjowKTsK
ICAgIGx5ID0gKHltaW4+MCB8fCB5bWF4PDA/eW1pbjowKTsKICAgIGx4cCA9IChs
eT09MD8iYmVsb3ciOiJhYm92ZSIpOwogICAgbHlwID0gKGx4PT0wPyJsZWZ0Ijoi
cmlnaHQiKTsKICAgIHZhciBkZHggPSBmbG9vcigxLjEtbG9nKGxkeCkvbG9nKDEw
KSkrMTsKICAgIHZhciBkZHkgPSBmbG9vcigxLjEtbG9nKGxkeSkvbG9nKDEwKSkr
MTsKICAgIGZvciAoeCA9IGxkeDsgeDw9eG1heDsgeCA9IHgrbGR4KQogICAgICB0
ZXh0KFt4LGx5XSxjaG9wWih4LnRvRml4ZWQoZGR4KSksbHhwKTsKICAgIGZvciAo
eCA9IC1sZHg7IHhtaW48PXg7IHggPSB4LWxkeCkKICAgICAgdGV4dChbeCxseV0s
Y2hvcFooeC50b0ZpeGVkKGRkeCkpLGx4cCk7CiAgICBmb3IgKHkgPSBsZHk7IHk8
PXltYXg7IHkgPSB5K2xkeSkKICAgICAgdGV4dChbbHgseV0sY2hvcFooeS50b0Zp
eGVkKGRkeSkpLGx5cCk7CiAgICBmb3IgKHkgPSAtbGR5OyB5bWluPD15OyB5ID0g
eS1sZHkpCiAgICAgIHRleHQoW2x4LHldLGNob3BaKHkudG9GaXhlZChkZHkpKSxs
eXApOwogIH0KICBmb250c2l6ZSA9IGRlZmF1bHRmb250c2l6ZTsKICBwbm9kZS5z
ZXRBdHRyaWJ1dGUoImQiLHN0KTsKICBwbm9kZS5zZXRBdHRyaWJ1dGUoInN0cm9r
ZS13aWR0aCIsIC41KTsKICBwbm9kZS5zZXRBdHRyaWJ1dGUoInN0cm9rZSIsIGF4
ZXNzdHJva2UpOwogIHBub2RlLnNldEF0dHJpYnV0ZSgiZmlsbCIsIGZpbGwpOwog
IHBub2RlLnNldEF0dHJpYnV0ZSgic3Ryb2tlLW9wYWNpdHkiLCBzdHJva2VvcGFj
aXR5KTsKICBwbm9kZS5zZXRBdHRyaWJ1dGUoImZpbGwtb3BhY2l0eSIsIGZpbGxv
cGFjaXR5KTsKICBzdmdwaWN0dXJlLmFwcGVuZENoaWxkKHBub2RlKTsKfQoKZnVu
Y3Rpb24gbWF0aGpzKHN0KSB7CiAgLy90cmFuc2xhdGUgYSBtYXRoIGZvcm11bGEg
dG8ganMgZnVuY3Rpb24gbm90YXRpb24KICAvLyBhXmIgLS0+IHBvdyhhLGIpCiAg
Ly8gbmEgLS0+IG4qYQogIC8vICguLi4pZCAtLT4gKC4uLikqZAogIC8vIG4hIC0t
PiBmYWN0b3JpYWwobikKICAvLyBzaW5eLTEgLS0+IGFyY3NpbiBldGMuCiAgLy93
aGlsZSBeIGluIHN0cmluZywgZmluZCB0ZXJtIG9uIGxlZnQgYW5kIHJpZ2h0CiAg
Ly9zbGljZSBhbmQgY29uY2F0IG5ldyBmb3JtdWxhIHN0cmluZwogIHN0ID0gc3Qu
cmVwbGFjZSgvXHMvZywiIik7CiAgaWYgKHN0LmluZGV4T2YoIl4tMSIpIT0tMSkg
ewogICAgc3QgPSBzdC5yZXBsYWNlKC9zaW5cXi0xL2csImFyY3NpbiIpOwogICAg
c3QgPSBzdC5yZXBsYWNlKC9jb3NcXi0xL2csImFyY2NvcyIpOwogICAgc3QgPSBz
dC5yZXBsYWNlKC90YW5cXi0xL2csImFyY3RhbiIpOwogICAgc3QgPSBzdC5yZXBs
YWNlKC9zZWNcXi0xL2csImFyY3NlYyIpOwogICAgc3QgPSBzdC5yZXBsYWNlKC9j
c2NcXi0xL2csImFyY2NzYyIpOwogICAgc3QgPSBzdC5yZXBsYWNlKC9jb3RcXi0x
L2csImFyY2NvdCIpOwogICAgc3QgPSBzdC5yZXBsYWNlKC9zaW5oXF4tMS9nLCJh
cmNzaW5oIik7CiAgICBzdCA9IHN0LnJlcGxhY2UoL2Nvc2hcXi0xL2csImFyY2Nv
c2giKTsKICAgIHN0ID0gc3QucmVwbGFjZSgvdGFuaFxeLTEvZywiYXJjdGFuaCIp
OwogICAgc3QgPSBzdC5yZXBsYWNlKC9zZWNoXF4tMS9nLCJhcmNzZWNoIik7CiAg
ICBzdCA9IHN0LnJlcGxhY2UoL2NzY2hcXi0xL2csImFyY2NzY2giKTsKICAgIHN0
ID0gc3QucmVwbGFjZSgvY290aFxeLTEvZywiYXJjY290aCIpOwogIH0KICBzdCA9
IHN0LnJlcGxhY2UoL15lJC9nLCIoTWF0aC5FKSIpOwogIHN0ID0gc3QucmVwbGFj
ZSgvXmUoW15hLXpBLVpdKS9nLCIoTWF0aC5FKSQxIik7CiAgc3QgPSBzdC5yZXBs
YWNlKC8oW15hLXpBLVpdKWUvZywiJDEoTWF0aC5FKSIpOwovLyAgc3QgPSBzdC5y
ZXBsYWNlKC8oW15hLXpBLVpdKWUoW15hLXpBLVpdKS9nLCIkMShNYXRoLkUpJDIi
KTsKICBzdCA9IHN0LnJlcGxhY2UoLyhbMC05XSkoW1woYS16QS1aXSkvZywiJDEq
JDIiKTsKICBzdCA9IHN0LnJlcGxhY2UoL1wpKFtcKDAtOWEtekEtWl0pL2csIlwp
KiQxIik7CiAgdmFyIGksaixrLCBjaCwgbmVzdGVkOwogIHdoaWxlICgoaT1zdC5p
bmRleE9mKCJeIikpIT0tMSkgewogICAgLy9maW5kIGxlZnQgYXJndW1lbnQKICAg
IGlmIChpPT0wKSByZXR1cm4gIkVycm9yOiBtaXNzaW5nIGFyZ3VtZW50IjsKICAg
IGogPSBpLTE7CiAgICBjaCA9IHN0LmNoYXJBdChqKTsKICAgIGlmIChjaD49IjAi
ICYmIGNoPD0iOSIpIHsvLyBsb29rIGZvciAoZGVjaW1hbCkgbnVtYmVyCiAgICAg
IGotLTsKICAgICAgd2hpbGUgKGo+PTAgJiYgKGNoPXN0LmNoYXJBdChqKSk+PSIw
IiAmJiBjaDw9IjkiKSBqLS07CiAgICAgIGlmIChjaD09Ii4iKSB7CiAgICAgICAg
ai0tOwogICAgICAgIHdoaWxlIChqPj0wICYmIChjaD1zdC5jaGFyQXQoaikpPj0i
MCIgJiYgY2g8PSI5Iikgai0tOwogICAgICB9CiAgICB9IGVsc2UgaWYgKGNoPT0i
KSIpIHsvLyBsb29rIGZvciBtYXRjaGluZyBvcGVuaW5nIGJyYWNrZXQgYW5kIGZ1
bmN0aW9uIG5hbWUKICAgICAgbmVzdGVkID0gMTsKICAgICAgai0tOwogICAgICB3
aGlsZSAoaj49MCAmJiBuZXN0ZWQ+MCkgewogICAgICAgIGNoID0gc3QuY2hhckF0
KGopOwogICAgICAgIGlmIChjaD09IigiKSBuZXN0ZWQtLTsKICAgICAgICBlbHNl
IGlmIChjaD09IikiKSBuZXN0ZWQrKzsKICAgICAgICBqLS07CiAgICAgIH0KICAg
ICAgd2hpbGUgKGo+PTAgJiYgKGNoPXN0LmNoYXJBdChqKSk+PSJhIiAmJiBjaDw9
InoiIHx8IGNoPj0iQSIgJiYgY2g8PSJaIikKICAgICAgICBqLS07CiAgICB9IGVs
c2UgaWYgKGNoPj0iYSIgJiYgY2g8PSJ6IiB8fCBjaD49IkEiICYmIGNoPD0iWiIp
IHsvLyBsb29rIGZvciB2YXJpYWJsZQogICAgICBqLS07CiAgICAgIHdoaWxlIChq
Pj0wICYmIChjaD1zdC5jaGFyQXQoaikpPj0iYSIgJiYgY2g8PSJ6IiB8fCBjaD49
IkEiICYmIGNoPD0iWiIpCiAgICAgICAgai0tOwogICAgfSBlbHNlIHsgCiAgICAg
IHJldHVybiAiRXJyb3I6IGluY29ycmVjdCBzeW50YXggaW4gIitzdCsiIGF0IHBv
c2l0aW9uICIrajsKICAgIH0KICAgIC8vZmluZCByaWdodCBhcmd1bWVudAogICAg
aWYgKGk9PXN0Lmxlbmd0aC0xKSByZXR1cm4gIkVycm9yOiBtaXNzaW5nIGFyZ3Vt
ZW50IjsKICAgIGsgPSBpKzE7CiAgICBjaCA9IHN0LmNoYXJBdChrKTsKICAgIGlm
IChjaD49IjAiICYmIGNoPD0iOSIgfHwgY2g9PSItIikgey8vIGxvb2sgZm9yIHNp
Z25lZCAoZGVjaW1hbCkgbnVtYmVyCiAgICAgIGsrKzsKICAgICAgd2hpbGUgKGs8
c3QubGVuZ3RoICYmIChjaD1zdC5jaGFyQXQoaykpPj0iMCIgJiYgY2g8PSI5Iikg
aysrOwogICAgICBpZiAoY2g9PSIuIikgewogICAgICAgIGsrKzsKICAgICAgICB3
aGlsZSAoazxzdC5sZW5ndGggJiYgKGNoPXN0LmNoYXJBdChrKSk+PSIwIiAmJiBj
aDw9IjkiKSBrKys7CiAgICAgIH0KICAgIH0gZWxzZSBpZiAoY2g9PSIoIikgey8v
IGxvb2sgZm9yIG1hdGNoaW5nIGNsb3NpbmcgYnJhY2tldCBhbmQgZnVuY3Rpb24g
bmFtZQogICAgICBuZXN0ZWQgPSAxOwogICAgICBrKys7CiAgICAgIHdoaWxlIChr
PHN0Lmxlbmd0aCAmJiBuZXN0ZWQ+MCkgewogICAgICAgIGNoID0gc3QuY2hhckF0
KGspOwogICAgICAgIGlmIChjaD09IigiKSBuZXN0ZWQrKzsKICAgICAgICBlbHNl
IGlmIChjaD09IikiKSBuZXN0ZWQtLTsKICAgICAgICBrKys7CiAgICAgIH0KICAg
IH0gZWxzZSBpZiAoY2g+PSJhIiAmJiBjaDw9InoiIHx8IGNoPj0iQSIgJiYgY2g8
PSJaIikgey8vIGxvb2sgZm9yIHZhcmlhYmxlCiAgICAgIGsrKzsKICAgICAgd2hp
bGUgKGs8c3QubGVuZ3RoICYmIChjaD1zdC5jaGFyQXQoaykpPj0iYSIgJiYgY2g8
PSJ6IiB8fAogICAgICAgICAgICAgICBjaD49IkEiICYmIGNoPD0iWiIpIGsrKzsK
ICAgIH0gZWxzZSB7IAogICAgICByZXR1cm4gIkVycm9yOiBpbmNvcnJlY3Qgc3lu
dGF4IGluICIrc3QrIiBhdCBwb3NpdGlvbiAiK2s7CiAgICB9CiAgICBzdCA9IHN0
LnNsaWNlKDAsaisxKSsiTWF0aC5wb3coIitzdC5zbGljZShqKzEsaSkrIiwiK3N0
LnNsaWNlKGkrMSxrKSsiKSIrCiAgICAgICAgICAgc3Quc2xpY2Uoayk7CiAgfQog
IHdoaWxlICgoaT1zdC5pbmRleE9mKCIhIikpIT0tMSkgewogICAgLy9maW5kIGxl
ZnQgYXJndW1lbnQKICAgIGlmIChpPT0wKSByZXR1cm4gIkVycm9yOiBtaXNzaW5n
IGFyZ3VtZW50IjsKICAgIGogPSBpLTE7CiAgICBjaCA9IHN0LmNoYXJBdChqKTsK
ICAgIGlmIChjaD49IjAiICYmIGNoPD0iOSIpIHsvLyBsb29rIGZvciAoZGVjaW1h
bCkgbnVtYmVyCiAgICAgIGotLTsKICAgICAgd2hpbGUgKGo+PTAgJiYgKGNoPXN0
LmNoYXJBdChqKSk+PSIwIiAmJiBjaDw9IjkiKSBqLS07CiAgICAgIGlmIChjaD09
Ii4iKSB7CiAgICAgICAgai0tOwogICAgICAgIHdoaWxlIChqPj0wICYmIChjaD1z
dC5jaGFyQXQoaikpPj0iMCIgJiYgY2g8PSI5Iikgai0tOwogICAgICB9CiAgICB9
IGVsc2UgaWYgKGNoPT0iKSIpIHsvLyBsb29rIGZvciBtYXRjaGluZyBvcGVuaW5n
IGJyYWNrZXQgYW5kIGZ1bmN0aW9uIG5hbWUKICAgICAgbmVzdGVkID0gMTsKICAg
ICAgai0tOwogICAgICB3aGlsZSAoaj49MCAmJiBuZXN0ZWQ+MCkgewogICAgICAg
IGNoID0gc3QuY2hhckF0KGopOwogICAgICAgIGlmIChjaD09IigiKSBuZXN0ZWQt
LTsKICAgICAgICBlbHNlIGlmIChjaD09IikiKSBuZXN0ZWQrKzsKICAgICAgICBq
LS07CiAgICAgIH0KICAgICAgd2hpbGUgKGo+PTAgJiYgKGNoPXN0LmNoYXJBdChq
KSk+PSJhIiAmJiBjaDw9InoiIHx8IGNoPj0iQSIgJiYgY2g8PSJaIikKICAgICAg
ICBqLS07CiAgICB9IGVsc2UgaWYgKGNoPj0iYSIgJiYgY2g8PSJ6IiB8fCBjaD49
IkEiICYmIGNoPD0iWiIpIHsvLyBsb29rIGZvciB2YXJpYWJsZQogICAgICBqLS07
CiAgICAgIHdoaWxlIChqPj0wICYmIChjaD1zdC5jaGFyQXQoaikpPj0iYSIgJiYg
Y2g8PSJ6IiB8fCBjaD49IkEiICYmIGNoPD0iWiIpCiAgICAgICAgai0tOwogICAg
fSBlbHNlIHsgCiAgICAgIHJldHVybiAiRXJyb3I6IGluY29ycmVjdCBzeW50YXgg
aW4gIitzdCsiIGF0IHBvc2l0aW9uICIrajsKICAgIH0KICAgIHN0ID0gc3Quc2xp
Y2UoMCxqKzEpKyJmYWN0b3JpYWwoIitzdC5zbGljZShqKzEsaSkrIikiK3N0LnNs
aWNlKGkrMSk7CiAgfQogIHJldHVybiBzdDsKfQoKZnVuY3Rpb24gcGxvdChmdW4s
eF9taW4seF9tYXgscG9pbnRzLGlkLGVuZHB0cykgewogIHZhciBwdGggPSBbXTsK
ICB2YXIgZiA9IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHggfSwgZyA9IGZ1bjsKICB2
YXIgbmFtZSA9IG51bGw7CiAgaWYgKHR5cGVvZiBmdW49PSJzdHJpbmciKSAKICAg
IGV2YWwoImcgPSBmdW5jdGlvbih4KXsgd2l0aChNYXRoKSByZXR1cm4gIittYXRo
anMoZnVuKSsiIH0iKTsKICBlbHNlIGlmICh0eXBlb2YgZnVuPT0ib2JqZWN0Iikg
ewogICAgZXZhbCgiZiA9IGZ1bmN0aW9uKHQpeyB3aXRoKE1hdGgpIHJldHVybiAi
K21hdGhqcyhmdW5bMF0pKyIgfSIpOwogICAgZXZhbCgiZyA9IGZ1bmN0aW9uKHQp
eyB3aXRoKE1hdGgpIHJldHVybiAiK21hdGhqcyhmdW5bMV0pKyIgfSIpOwogIH0K
ICBpZiAodHlwZW9mIHhfbWluPT0ic3RyaW5nIikgeyBuYW1lID0geF9taW47IHhf
bWluID0geG1pbiB9CiAgZWxzZSBuYW1lID0gaWQ7CiAgdmFyIG1pbiA9ICh4X21p
bj09bnVsbD94bWluOnhfbWluKTsKICB2YXIgbWF4ID0gKHhfbWF4PT1udWxsP3ht
YXg6eF9tYXgpOwogIHZhciBpbmMgPSBtYXgtbWluLTAuMDAwMDAxKihtYXgtbWlu
KTsKICBpbmMgPSAocG9pbnRzPT1udWxsP2luYy8yMDA6aW5jL3BvaW50cyk7CiAg
dmFyIGd0OwovL2FsZXJ0KHR5cGVvZiBnKG1pbikpCiAgZm9yICh2YXIgdCA9IG1p
bjsgdCA8PSBtYXg7IHQgKz0gaW5jKSB7CiAgICBndCA9IGcodCk7CiAgICBpZiAo
IShpc05hTihndCl8fE1hdGguYWJzKGd0KT09IkluZmluaXR5IikpIHB0aFtwdGgu
bGVuZ3RoXSA9IFtmKHQpLCBndF07CiAgfQogIHBhdGgocHRoLG5hbWUsbnVsbCxl
bmRwdHMpOwogIHJldHVybiBwOwp9CgovLyBtYWtlIHBvbGFyIHBsb3QKCi8vIG1h
a2UgUmllbWFubiBzdW1zCgpmdW5jdGlvbiBzbG9wZWZpZWxkKGZ1bixkeCxkeSkg
ewogIHZhciBnID0gZnVuOwogIGlmICh0eXBlb2YgZnVuPT0ic3RyaW5nIikgCiAg
ICBldmFsKCJnID0gZnVuY3Rpb24oeCx5KXsgd2l0aChNYXRoKSByZXR1cm4gIitt
YXRoanMoZnVuKSsiIH0iKTsKICB2YXIgZ3h5LHgseSx1LHYsZHo7CiAgaWYgKGR4
PT1udWxsKSBkeD0xOwogIGlmIChkeT09bnVsbCkgZHk9MTsKICBkeiA9IE1hdGgu
c3FydChkeCpkeCtkeSpkeSkvNjsKICB2YXIgeF9taW4gPSBNYXRoLmNlaWwoeG1p
bi9keCk7CiAgdmFyIHlfbWluID0gTWF0aC5jZWlsKHltaW4vZHkpOwogIGZvciAo
eCA9IHhfbWluOyB4IDw9IHhtYXg7IHggKz0gZHgpCiAgICBmb3IgKHkgPSB5X21p
bjsgeSA8PSB5bWF4OyB5ICs9IGR5KSB7CiAgICAgIGd4eSA9IGcoeCx5KTsKICAg
ICAgaWYgKCFpc05hTihneHkpKSB7CiAgICAgICAgaWYgKE1hdGguYWJzKGd4eSk9
PSJJbmZpbml0eSIpIHt1ID0gMDsgdiA9IGR6O30KICAgICAgICBlbHNlIHt1ID0g
ZHovTWF0aC5zcXJ0KDErZ3h5Kmd4eSk7IHYgPSBneHkqdTt9CiAgICAgICAgbGlu
ZShbeC11LHktdl0sW3grdSx5K3ZdKTsKICAgICAgfQogICAgfQp9CgovLy8vLy8v
Ly8vLy8vLy8vLy8vLy8vL3VzZXIgZ3JhcGhpY3MgY29tbWFuZHMgZW5kIGhlcmUv
Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCgpmdW5jdGlvbiBzaG93X3Byb3BzKG9i
aikgewogIHZhciByZXN1bHQgPSAiIjsKICBmb3IgKHZhciBpPTA7IGk8IG9iai5j
aGlsZE5vZGVzLmxlbmd0aDsgaSsrKQogICAgcmVzdWx0ICs9IG9iai5jaGlsZE5v
ZGVzLml0ZW0oaSkgKyAiXG4iOwogIHJldHVybiByZXN1bHQ7Cn0KCmZ1bmN0aW9u
IGRpc3BsYXlDb29yZChldnQpIHsKICBpZiAoc2hvd2Nvb3JkaW5hdGVzKSB7Ci8v
YWxlcnQoc2hvd19wcm9wcyhldnQudGFyZ2V0LnBhcmVudE5vZGUpKQogICAgdmFy
IHN2Z3Jvb3QgPSBldnQudGFyZ2V0LnBhcmVudE5vZGU7CiAgICB2YXIgbmwgPSBz
dmdyb290LmNoaWxkTm9kZXM7CiAgICBmb3IgKHZhciBpPTA7IGk8bmwubGVuZ3Ro
ICYmIG5sLml0ZW0oaSkubm9kZU5hbWUhPSJ0ZXh0IjsgaSsrKTsKICAgIHZhciBj
bm9kZSA9IG5sLml0ZW0oaSk7CiAgICBjbm9kZS5tdGV4dCA9IG10ZXh0OwogICAg
Y25vZGUubXRleHQoW3N2Z3Jvb3QuZ2V0QXR0cmlidXRlKCJ3aWR0aCIpLTAsc3Zn
cm9vdC5nZXRBdHRyaWJ1dGUoImhlaWdodCIpLTBdLCIoIitnZXRYKGV2dCkudG9G
aXhlZCgyKSsiLCAiK2dldFkoZXZ0KS50b0ZpeGVkKDIpKyIpIiwgImFib3ZlbGVm
dCIsICIiKTsKICB9Cn0KCmZ1bmN0aW9uIHJlbW92ZUNvb3JkKGV2dCkgewogICAg
dmFyIHN2Z3Jvb3QgPSBldnQudGFyZ2V0LnBhcmVudE5vZGU7CiAgICB2YXIgbmwg
PSBzdmdyb290LmNoaWxkTm9kZXM7CiAgICBmb3IgKHZhciBpPTA7IGk8bmwubGVu
Z3RoICYmIG5sLml0ZW0oaSkubm9kZU5hbWUhPSJ0ZXh0IjsgaSsrKTsKICAgIHZh
ciBjbm9kZSA9IG5sLml0ZW0oaSk7CiAgICBjbm9kZS5tdGV4dCA9IG10ZXh0Owog
ICAgY25vZGUubXRleHQoW3N2Z3Jvb3QuZ2V0QXR0cmlidXRlKCJ3aWR0aCIpLTAs
c3Zncm9vdC5nZXRBdHRyaWJ1dGUoImhlaWdodCIpLTBdLCIiLCAiYWJvdmVsZWZ0
IiwgIiIpOwp9CgpmdW5jdGlvbiBpbml0QVNDSUlNYXRoQ2FsY3VsYXRvcnMobGkp
IHsKICB2YXIgaTsKICBmb3IgKGk9MDsgaTxsaS5sZW5ndGg7IGkrKykgewogICAg
bGlbaV0uaW5uZXJIVE1MID0gY2FsY3N0cjsKICAgIEFNcHJvY2Vzc05vZGUobGlb
aV0pOwogIH0KICBsaSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0
ZXh0YXJlYSIpOwogIHZhciBzdDsKICBmb3IgKGk9MDsgaTxsaS5sZW5ndGg7IGkr
KykgewogICAgc3QgPSBsaVtpXS5nZXRBdHRyaWJ1dGUoIm9ua2V5dXAiKTsKICAg
IGlmIChzdCE9bnVsbCkgZXZhbChTdHJpbmcoc3QpLnJlcGxhY2UoL2Z1bmN0aW9u
IGFub255bW91c1woXCkvLCIiKSk7CiAgfQp9CgpmdW5jdGlvbiBjYWxjdWxhdGUo
aW5wdXRJZCxvdXRwdXRJZCkgewogIHZhciBzdHIgPSBkb2N1bWVudC5nZXRFbGVt
ZW50QnlJZChpbnB1dElkKS52YWx1ZTsKICB2YXIgZXJyID0gIiI7CiAgdmFyIGlu
ZCA9IHN0ci5sYXN0SW5kZXhPZigiXG4iKTsKICBpZiAoaW5kPT1zdHIubGVuZ3Ro
LTEpIHN0ciA9IHN0ci5zbGljZSgwLGluZCk7CiAgc3RyID0gc3RyLnNsaWNlKHN0
ci5sYXN0SW5kZXhPZigiXG4iKSsxKTsKICB0cnkgewogICAgdmFyIHJlcyA9IGV2
YWwobWF0aGpzKHN0cikpOwogIH0gY2F0Y2goZSkgewogICAgZXJyID0gInN5bnRh
eCBpbmNvbXBsZXRlIjsKICB9CiAgaWYgKCFpc05hTihyZXMpICYmIHJlcyE9Iklu
ZmluaXR5IikgCiAgICBzdHIgPSAiYGAiK3N0cisiID1gYCAiKyhNYXRoLmFicyhy
ZXMtTWF0aC5yb3VuZChyZXMqMTAwMDAwMCkvMTAwMDAwMCk8MWUtMTU/TWF0aC5y
b3VuZChyZXMqMTAwMDAwMCkvMTAwMDAwMDpyZXMpK2VycjsgCiAgZWxzZSBpZiAo
c3RyIT0iIikgc3RyID0gImBgIitzdHIrImBgID0gdW5kZWZpbmVkIjsgLy9kZWJ1
ZzorbWF0aGpzKHN0cik7CiAgdmFyIG91dG5vZGUgPSBkb2N1bWVudC5nZXRFbGVt
ZW50QnlJZChvdXRwdXRJZCk7CiAgdmFyIG4gPSBvdXRub2RlLmNoaWxkTm9kZXMu
bGVuZ3RoOwogIGZvciAodmFyIGk9MDsgaTxuOyBpKyspCiAgICBvdXRub2RlLnJl
bW92ZUNoaWxkKG91dG5vZGUuZmlyc3RDaGlsZCk7CiAgb3V0bm9kZS5hcHBlbmRD
aGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzdHIpKTsKICBBTXByb2Nlc3NO
b2RlKG91dG5vZGUpOwp9CgpmdW5jdGlvbiBhcHBlbmQoc3QpewogIGRvY3VtZW50
LmdldEVsZW1lbnRCeUlkKCdpbicpLnZhbHVlKz1zdDsKICBjYWxjdWxhdGUoJ2lu
Jywnb3V0Jyk7CiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2luJykuc2Nyb2xs
VG9wID0gMTAwMDsKICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW4nKS5mb2N1
cygpOwp9CgpmdW5jdGlvbiBjbGVhclRleHRBcmVhKCl7CiAgZG9jdW1lbnQuZ2V0
RWxlbWVudEJ5SWQoJ2luJykudmFsdWU9IiI7CiAgY2FsY3VsYXRlKCdpbicsJ291
dCcpOwogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbicpLmZvY3VzKCk7Cn0K
CnZhciBjYWxjc3RyID0gIjx0YWJsZSBhbGlnbj1cImNlbnRlclwiPlxuPHRyPjx0
aD5cbkFTQ0lJTWF0aCBTY2llbnRpZmljIENhbGN1bGF0b3JcbjwvdGg+PC90cj5c
bjx0cj48dGQ+XG5DbGljayBpbiB0aGUgYm94IHRvIHVzZSB5b3VyIGtleWJvYXJk
IG9yIHVzZSB0aGUgYnV0dG9uc1xuPC90ZD48L3RyPlxuPHRyPjx0ZD5cbjx0ZXh0
YXJlYSBpZD1cImluXCIgcm93cz1cIjNcIiBjb2xzPVwiNDBcIiBvbmtleXVwPVwi
Y2FsY3VsYXRlKCdpbicsJ291dCcpXCI+PC90ZXh0YXJlYT48L3RkPjwvdHI+XG48
dHI+PHRkIGhlaWdodD1cIjUwXCI+UmVzdWx0OiAmbmJzcDsgJm5ic3A7IDxzcGFu
IGlkPVwib3V0XCI+PC9zcGFuPjwvdGQ+PC90cj5cbjwvdGFibGU+XG48dGFibGUg
YWxpZ249XCJjZW50ZXJcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1c
IjBcIj5cbjx0Ym9keSBhbGlnbj1cImNlbnRlclwiPlxuPHRyPlxuPHRkIGNvbHNw
YW49XCI0XCI+XG48YnV0dG9uIG9uY2xpY2s9XCJhcHBlbmQoJ3Npbl4tMSgnKVwi
Pjxmb250IHNpemU9Mj5gYHNpbl4tMWBgPC9mb250PjwvYnV0dG9uPjxidXR0b24g
b25jbGljaz1cImFwcGVuZCgnY29zXi0xKCcpXCI+PGZvbnQgc2l6ZT0yPmBgY29z
Xi0xYGA8L2ZvbnQ+PC9idXR0b24+PGJ1dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCd0
YW5eLTEoJylcIj48Zm9udCBzaXplPTI+YGB0YW5eLTFgYDwvZm9udD48L2J1dHRv
bj48L3RkPlxuPHRkPjxidXR0b24gb25jbGljaz1cImNsZWFyVGV4dEFyZWEoKVwi
PiZuYnNwO2BgQ2BgJm5ic3A7PC9idXR0b24+PC90ZD5cblxuPC90cj5cbjx0cj5c
bjx0ZD48YnV0dG9uIG9uY2xpY2s9XCJhcHBlbmQoJ3BpJylcIj4mbmJzcDtgYHBp
YGAgJm5ic3A7PC9idXR0b24+PC90ZD5cbjx0ZD48YnV0dG9uIG9uY2xpY2s9XCJh
cHBlbmQoJ3NpbignKVwiPiZuYnNwO2Bgc2luYGA8L2J1dHRvbj48L3RkPlxuPHRk
PjxidXR0b24gb25jbGljaz1cImFwcGVuZCgnY29zKCcpXCI+Jm5ic3A7YGBjb3Ng
YDwvYnV0dG9uPjwvdGQ+XG48dGQ+PGJ1dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCd0
YW4oJylcIj4mbmJzcDtgYHRhbmBgPC9idXR0b24+PC90ZD5cbjx0ZD48YnV0dG9u
IG9uY2xpY2s9XCJhcHBlbmQoJ14nKVwiPmBgeF55YGA8L2J1dHRvbj48L3RkPlxu
PC90cj5cbjx0cj5cbjx0ZD48YnV0dG9uIG9uY2xpY2s9XCJhcHBlbmQoJyEnKVwi
PiZuYnNwOyBgYCFgYCAmbmJzcDs8L2J1dHRvbj48L3RkPlxuXG48dGQ+PGJ1dHRv
biBvbmNsaWNrPVwiYXBwZW5kKCcoJylcIj48Zm9udCBzaXplPTI+Jm5ic3A7Jm5i
c3A7YGAoYGAmbmJzcDsmbmJzcDs8L2ZvbnQ+PC9idXR0b24+PC90ZD5cbjx0ZD48
YnV0dG9uIG9uY2xpY2s9XCJhcHBlbmQoJyknKVwiPjxmb250IHNpemU9Mj4mbmJz
cDsmbmJzcDtgYClgYCZuYnNwOyZuYnNwOzwvZm9udD48L2J1dHRvbj48L3RkPlxu
PHRkPjxidXR0b24gb25jbGljaz1cImFwcGVuZCgnc3FydCgnKVwiPjxmb250IHNp
emU9Mj5gYHNxcnQoezo6fV5cIClgYDwvZm9udD48L2J1dHRvbj48L3RkPlxuPHRk
PjxidXR0b24gb25jbGljaz1cImFwcGVuZCgnLycpXCI+Jm5ic3A7YGAtOlwgYGA8
L2J1dHRvbj48L3RkPlxuPC90cj5cbjx0cj5cbjx0ZD48YnV0dG9uIG9uY2xpY2s9
XCJhcHBlbmQoJ2xvZygnKVwiPmBgbG9nYGA8L2J1dHRvbj48L3RkPlxuPHRkPjxi
dXR0b24gb25jbGljaz1cImFwcGVuZCgnNycpXCI+Jm5ic3A7IGBgN2BgICZuYnNw
OzwvYnV0dG9uPjwvdGQ+XG48dGQ+PGJ1dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCc4
JylcIj4mbmJzcDsgYGA4YGAgJm5ic3A7PC9idXR0b24+PC90ZD5cblxuPHRkPjxi
dXR0b24gb25jbGljaz1cImFwcGVuZCgnOScpXCI+Jm5ic3A7IGBgOWBgICZuYnNw
OzwvYnV0dG9uPjwvdGQ+XG48dGQ+PGJ1dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCcq
JylcIj4mbmJzcDtgYHRpbWVzYGAmbmJzcDs8L2J1dHRvbj48L3RkPlxuPC90cj5c
bjx0cj5cbjx0ZD48YnV0dG9uIG9uY2xpY2s9XCJhcHBlbmQoJ2xuKCcpXCI+Jm5i
c3A7YGBsbmBgJm5ic3A7PC9idXR0b24+PC90ZD5cbjx0ZD48YnV0dG9uIG9uY2xp
Y2s9XCJhcHBlbmQoJzQnKVwiPiZuYnNwOyBgYDRgYCAmbmJzcDs8L2J1dHRvbj48
L3RkPlxuPHRkPjxidXR0b24gb25jbGljaz1cImFwcGVuZCgnNScpXCI+Jm5ic3A7
IGBgNWBgICZuYnNwOzwvYnV0dG9uPjwvdGQ+XG48dGQ+PGJ1dHRvbiBvbmNsaWNr
PVwiYXBwZW5kKCc2JylcIj4mbmJzcDsgYGA2YGAgJm5ic3A7PC9idXR0b24+PC90
ZD5cblxuPHRkPjxidXR0b24gb25jbGljaz1cImFwcGVuZCgnLScpXCI+Jm5ic3A7
YGAtezo6fWBgJm5ic3A7PC9idXR0b24+PC90ZD5cbjwvdHI+XG48dHI+XG48dGQ+
PGJ1dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCdlJylcIj4mbmJzcDsgYGBlYGAgJm5i
c3A7PC9idXR0b24+PC90ZD5cbjx0ZD48YnV0dG9uIG9uY2xpY2s9XCJhcHBlbmQo
JzEnKVwiPiZuYnNwOyZuYnNwO2BgMWBgICZuYnNwOzwvYnV0dG9uPjwvdGQ+XG48
dGQ+PGJ1dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCcyJylcIj4mbmJzcDsgYGAyYGAg
Jm5ic3A7PC9idXR0b24+PC90ZD5cbjx0ZD48YnV0dG9uIG9uY2xpY2s9XCJhcHBl
bmQoJzMnKVwiPiZuYnNwOyBgYDNgYCAmbmJzcDs8L2J1dHRvbj48L3RkPlxuPHRk
PjxidXR0b24gb25jbGljaz1cImFwcGVuZCgnKycpXCI+Jm5ic3A7YGArezo6fWBg
Jm5ic3A7PC9idXR0b24+PC90ZD5cblxuPC90cj5cbjx0cj5cbjx0ZD4gPCEtLWJ1
dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCdwaScpXCI+Jm5ic3A7YGBwaWBgICZuYnNw
OzwvYnV0dG9uLS0+PC90ZD5cbjx0ZD48YnV0dG9uIG9uY2xpY2s9XCJhcHBlbmQo
JzAnKVwiPiZuYnNwOyBgYDBgYCAmbmJzcDs8L2J1dHRvbj48L3RkPlxuPHRkPjxi
dXR0b24gb25jbGljaz1cImFwcGVuZCgnLicpXCI+Jm5ic3A7IGBgLmBgICZuYnNw
OzwvYnV0dG9uPjwvdGQ+XG48dGQ+PGJ1dHRvbiBvbmNsaWNrPVwiYXBwZW5kKCdc
XG4nKVwiPiZuYnNwO2BgXCJlbnRcImBgPC9idXR0b24+PC90ZD5cbjwvdHI+XG48
L3Rib2R5PlxuPC90YWJsZT4iOwoKLy8gR08xLjEgR2VuZXJpYyBvbmxvYWQgYnkg
QnJvdGhlcmNha2UKLy8gaHR0cDovL3d3dy5icm90aGVyY2FrZS5jb20vCi8vb25s
b2FkIGZ1bmN0aW9uIChyZXBsYWNlcyB0aGUgb25sb2FkPSJ0cmFuc2xhdGUoKSIg
aW4gdGhlIDxib2R5PiB0YWcpCmZ1bmN0aW9uIGdlbmVyaWMoKQp7CiAgaWYgKHRy
YW5zbGF0ZU9uTG9hZCkgewogICAgdmFyIG5kID0gZG9jdW1lbnQuZ2V0RWxlbWVu
dEJ5SWQoInByb2Nlc3Nhc2NpaW1hdGhpbm1vb2RsZSIpOwogICAgaWYgKG5kIT1u
dWxsKSBkc3ZnbG9jYXRpb24gPSBuZC5jbGFzc05hbWU7CiAgICBpZiAobmQhPW51
bGwgfHwgIWNoZWNrZm9ycHJvY2Vzc2FzY2lpbWF0aGlubW9vZGxlKSB7CiAgICAg
IGlmICh0cmFuc2xhdGVMYVRlWCkgTE10cmFuc2xhdGUoKTsKICAgICAgaWYgKHRy
YW5zbGF0ZUFTQ0lJTWF0aCkgdHJhbnNsYXRlKCk7CiAgICAgIGlmICh0cmFuc2xh
dGVBU0NJSXN2ZykgZHJhd1BpY3R1cmVzKCk7CiAgICB9CiAgICB2YXIgbGkgPSBn
ZXRFbGVtZW50c0J5Q2xhc3MoZG9jdW1lbnQsImRpdiIsIkFTQ0lJTWF0aENhbGN1
bGF0b3IiKTsKICAgIGlmIChsaS5sZW5ndGg+MCkgaW5pdEFTQ0lJTWF0aENhbGN1
bGF0b3JzKGxpKTsKICB9Cn07Ci8vc2V0dXAgb25sb2FkIGZ1bmN0aW9uCmlmKHR5
cGVvZiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciAhPSAndW5kZWZpbmVkJykKewog
IC8vLi4gZ2Vja28sIHNhZmFyaSwga29ucXVlcm9yIGFuZCBzdGFuZGFyZAogIHdp
bmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZ2VuZXJpYywgZmFsc2UpOwp9
CmVsc2UgaWYodHlwZW9mIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIgIT0gJ3Vu
ZGVmaW5lZCcpCnsKICAvLy4uIG9wZXJhIDcKICBkb2N1bWVudC5hZGRFdmVudExp
c3RlbmVyKCdsb2FkJywgZ2VuZXJpYywgZmFsc2UpOwp9CmVsc2UgaWYodHlwZW9m
IHdpbmRvdy5hdHRhY2hFdmVudCAhPSAndW5kZWZpbmVkJykKewogIC8vLi4gd2lu
L2llCiAgd2luZG93LmF0dGFjaEV2ZW50KCdvbmxvYWQnLCBnZW5lcmljKTsKfQov
LyoqIHJlbW92ZSB0aGlzIGNvbmRpdGlvbiB0byBkZWdyYWRlIG9sZGVyIGJyb3dz
ZXJzCmVsc2UKewogIC8vLi4gbWFjL2llNSBhbmQgYW55dGhpbmcgZWxzZSB0aGF0
IGdldHMgdGhpcyBmYXIKICAvL2lmIHRoZXJlJ3MgYW4gZXhpc3Rpbmcgb25sb2Fk
IGZ1bmN0aW9uCiAgaWYodHlwZW9mIHdpbmRvdy5vbmxvYWQgPT0gJ2Z1bmN0aW9u
JykKICB7CiAgICAvL3N0b3JlIGl0CiAgICB2YXIgZXhpc3RpbmcgPSBvbmxvYWQ7
CiAgICAvL2FkZCBuZXcgb25sb2FkIGhhbmRsZXIKICAgIHdpbmRvdy5vbmxvYWQg
PSBmdW5jdGlvbigpCiAgICB7CiAgICAgIC8vY2FsbCBleGlzdGluZyBvbmxvYWQg
ZnVuY3Rpb24KICAgICAgZXhpc3RpbmcoKTsKICAgICAgLy9jYWxsIGdlbmVyaWMg
b25sb2FkIGZ1bmN0aW9uCiAgICAgIGdlbmVyaWMoKTsKICAgIH07CiAgfQogIGVs
c2UKICB7CiAgICAvL3NldHVwIG9ubG9hZCBmdW5jdGlvbgogICAgd2luZG93Lm9u
bG9hZCA9IGdlbmVyaWM7CiAgfQp9Cgo=

------------orQNYLOGidVp88I2yKagMz--
